{"version":3,"sources":["foundation.js","what-input.js","foundation.core.js","foundation.util.box.js","foundation.util.keyboard.js","foundation.util.mediaQuery.js","foundation.util.motion.js","foundation.util.nest.js","foundation.util.timerAndImageLoader.js","foundation.util.touch.js","foundation.util.triggers.js","foundation.abide.js","foundation.accordion.js","foundation.accordionMenu.js","foundation.drilldown.js","foundation.dropdown.js","foundation.dropdownMenu.js","foundation.equalizer.js","foundation.interchange.js","foundation.magellan.js","foundation.offcanvas.js","foundation.orbit.js","foundation.responsiveMenu.js","foundation.responsiveToggle.js","foundation.reveal.js","foundation.slider.js","foundation.sticky.js","foundation.tabs.js","foundation.toggler.js","foundation.tooltip.js"],"names":["_classCallCheck","instance","Constructor","TypeError","window","whatInput","eventBuffer","clearTimer","setInput","event","buffer","timer","setTimeout","bufferedEvent","unBufferedEvent","clearTimeout","eventKey","key","value","inputMap","type","pointerType","currentInput","eventTarget","target","eventTargetNode","nodeName","toLowerCase","eventTargetType","getAttribute","body","hasAttribute","keyMap","nonTypingInputs","indexOf","ignoreMap","switchInput","logKeys","string","setAttribute","inputTypes","push","keyCode","which","srcElement","pointerMap","activeKeys","unLogKeys","arrayPos","splice","bindEvents","document","PointerEvent","addEventListener","MSPointerEvent","mouseWheel","detectWheel","createElement","undefined","onmousewheel","keydown","keyup","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","touchstart","9","13","16","27","32","37","38","39","40","2","3","4","Array","prototype","ask","keys","types","set","$","functionName","fn","Function","name","funcNameRegex","results","exec","toString","length","trim","constructor","parseValue","str","test","isNaN","parseFloat","hyphenate","replace","FOUNDATION_VERSION","Foundation","version","_plugins","_uuids","rtl","attr","plugin","className","attrName","this","registerPlugin","pluginName","uuid","GetYoDigits","$element","data","trigger","unregisterPlugin","removeAttr","removeData","prop","reInit","plugins","isJQ","each","_init","_this","fns","object","plgs","forEach","p","foundation","Object","err","console","error","namespace","Math","round","pow","random","slice","reflow","elem","i","$elem","find","addBack","$el","opts","warn","split","e","opt","map","el","er","getFnName","transitionend","end","transitions","transition","WebkitTransition","MozTransition","OTransition","t","style","triggerHandler","util","throttle","func","delay","context","args","arguments","apply","method","$meta","$noJS","appendTo","head","removeClass","MediaQuery","call","plugClass","ReferenceError","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","navigator","userAgent","lastTime","callback","nextTime","max","performance","start","bind","oThis","aArgs","fToBind","fNOP","fBound","concat","jQuery","ImNotTouchingYou","element","parent","lrOnly","tbOnly","top","bottom","left","right","eleDims","GetDimensions","parDims","offset","height","width","windowDims","allDirs","Error","rect","getBoundingClientRect","parRect","parentNode","winRect","winY","pageYOffset","winX","pageXOffset","parentDims","GetOffsets","anchor","position","vOffset","hOffset","isOverflow","$eleDims","$anchorDims","Box","getKeyCodes","kcs","k","kc","keyCodes","commands","Keyboard","parseKey","String","fromCharCode","toUpperCase","shiftKey","ctrlKey","altKey","handleKey","component","functions","cmds","command","commandList","ltr","extend","returnValue","handled","unhandled","findFocusable","filter","is","register","componentName","parseStyleToObject","styleObject","reduce","ret","param","parts","val","decodeURIComponent","hasOwnProperty","isArray","queries","current","namedQueries","self","extractedStyles","css","_getCurrentSize","_watcher","atLeast","size","query","get","matchMedia","matches","matched","on","newSize","currentSize","styleMedia","media","script","getElementsByTagName","info","id","insertBefore","getComputedStyle","currentStyle","matchMedium","text","styleSheet","cssText","textContent","Move","duration","move","ts","prog","anim","animate","isIn","animation","cb","finish","hide","reset","transitionDuration","initClass","activeClass","eq","initClasses","activeClasses","addClass","show","offsetWidth","one","Motion","animateIn","animateOut","Nest","Feather","menu","items","role","subMenuClass","subItemClass","hasSubClass","$item","$sub","children","aria-haspopup","aria-expanded","aria-label","data-submenu","aria-hidden","Burn","Timer","options","nameSpace","remain","isPaused","restart","infinite","pause","onImagesLoaded","images","singleImageLoaded","unloaded","complete","naturalWidth","onTouchEnd","removeEventListener","onTouchMove","isMoving","spotSwipe","preventDefault","dir","x","touches","pageX","dx","pageY","startPosX","elapsedTime","startTime","abs","moveThreshold","timeThreshold","onTouchStart","startPosY","init","enabled","documentElement","special","swipe","setup","noop","addTouch","handleTouch","simulatedEvent","changedTouches","first","eventTypes","touchmove","touchend","MouseEvent","bubbles","cancelable","screenX","screenY","clientX","clientY","createEvent","initMouseEvent","dispatchEvent","checkListeners","eventsListener","resizeListener","scrollListener","closemeListener","yetiBoxes","plugNames","listeners","join","off","pluginId","not","debounce","$nodes","MutationObserver","nodes","querySelectorAll","listeningElementsMutation","mutationRecordsList","$target","elementObserver","observe","attributes","childList","characterData","subtree","attributeFilter","prefixes","triggers","stopPropagation","fadeOut","IHearYou","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","Abide","defaults","$inputs","_events","_this2","resetForm","validateForm","validateOn","validateInput","liveValidate","isGood","checked","$error","siblings","formErrorSelector","$label","closest","$els","_this3","labels","findLabel","$formError","findFormError","labelErrorClass","formErrorClass","inputErrorClass","groupName","$labels","findRadioLabels","$formErrors","removeRadioErrorClasses","clearRequire","requiredCheck","validated","customValidator","validator","equalTo","validateRadio","validateText","matchValidation","validators","goodToGo","message","acc","noError","pattern","inputText","valid","patterns","RegExp","$group","required","_this4","clear","v","$form","removeErrorClasses","alpha","alpha_numeric","integer","number","card","cvv","email","url","domain","datetime","date","time","dateISO","month_day_year","day_month_year","color","Accordion","ENTER","SPACE","ARROW_DOWN","ARROW_UP","$tabs","idx","$content","linkId","aria-controls","aria-selected","aria-labelledby","$initActive","down","$tabContent","toggle","next","$a","focus","multiExpand","previous","prev","hasClass","up","firstTime","$currentActive","slideDown","slideSpeed","$aunts","allowAllClosed","slideUp","stop","AccordionMenu","ARROW_RIGHT","ARROW_LEFT","ESCAPE","aria-multiselectable","multiOpen","$menuLinks","subId","isActive","initPanes","$submenu","$prevElement","$nextElement","$elements","min","parents","open","close","closeAll","hideAll","stopImmediatePropagation","parentsUntil","add","$menus","Drilldown","TAB","SHIFT_TAB","$submenuAnchors","$submenus","$menuItems","_prepareMenu","_keyboardEvents","$link","parentLink","clone","prependTo","wrap","tabindex","$menu","$back","prepend","backButton","_back","$wrapper","wrapper","_getMaxDims","_show","closeOnClick","$body","contains","_hideAll","_hide","parentSubMenu","blur","biggest","result","unwrap","remove","Dropdown","$id","$anchor","data-is-focus","data-yeti-box","positionClass","getPositionClass","counter","usedPositions","data-resize","verticalPosition","match","horizontalPosition","classChanged","direction","_reposition","_setPosition","open.zf.trigger","close.zf.trigger","toggle.zf.trigger","resizeme.zf.trigger","hover","timeout","hoverDelay","hoverPane","visibleFocusableElements","tab_forward","trapFocus","tab_backward","autoFocus","$focusable","_addBodyHandler","curPositionClass","DropdownMenu","subs","verticalClass","rightClass","alignment","changed","hasTouch","ontouchstart","parClass","handleClickFn","hasSub","hasClicked","closeOnClickInside","clickOpen","forceFollow","disableHover","autoclose","closingTime","isTab","index","nextSibling","prevSibling","openSub","closeSub","_isVertical","$sibs","oldClass","$parentLi","$toClose","somethingToClose","data-is-click","Equalizer","eqId","$watched","hasNested","isNested","isOn","_bindHandler","onResizeMeBound","_onResizeMe","onPostEqualizedBound","_onPostEqualized","tooSmall","imgs","equalizeOn","_checkMQ","_reflow",".zf.equalizer","_pauseEvents","equalizeOnStack","_isStacked","equalizeByRow","getHeightsByRow","applyHeightByRow","getHeights","applyHeight","heights","len","offsetHeight","lastElTopOffset","groups","group","elOffsetTop","j","ln","groupsILength","lenJ","Interchange","rules","currentPath","_addBreakpoints","_generateRules","rule","path","SPECIAL_QUERIES","rulesList","background-image","response","html","landscape","portrait","retina","Magellan","$targets","$links","data-scroll","$active","scrollPos","parseInt","points","winHeight","innerHeight","clientHeight","docHeight","scrollHeight","$tar","pt","threshold","targetPoint","animationDuration","easing","animationEasing","deepLinking","location","hash","scrollToLoc","calcPoints","_updateActive","scrollme.zf.trigger","arrival","loc","barOffset","scrollTop","curIdx","winPos","isDown","curVisible","history","pushState","OffCanvas","$lastTrigger","$triggers","$exiter","exiter","append","isRevealed","revealClass","revealOn","_setMQChecker","transitionTime","keydown.zf.offcanvas","_handleKeyboard","click.zf.offcanvas","reveal","$closer","forceTop","focusable","last","Orbit","containerClass","$slides","slideClass","$images","initActive","useMUI","_prepareForOrbit","bullets","_loadBullets","autoPlay","geoSync","accessible","$bullets","boxOfBullets","timerDelay","changeSlide","_setWrapperHeight","_setSlideHeight","temp","display","pauseOnHover","navButtons","$controls","nextClass","prevClass","$slide","isLTR","chosenSlide","$curSlide","$newSlide","$firstSlide","$lastSlide","dirIn","dirOut","infiniteWrap","_updateBullets","$oldBullet","span","detach","animInFromRight","animOutToRight","animInFromLeft","animOutToLeft","ResponsiveMenu","currentMq","currentPlugin","rulesTree","ruleSize","rulePlugin","MenuPlugins","isEmptyObject","_checkMediaQueries","matchedMq","cssClass","destroy","dropdown","drilldown","accordion","ResponsiveToggle","targetID","$targetMenu","$toggler","_update","_updateMqHandler","toggleMenu","hideFor","iPhoneSniff","androidSniff","mobileSniff","Reveal","cached","mq","isMobile","fullScreen","overlay","$overlay","_makeOverlay","deepLink","outerWidth","outerHeight","margin","_updatePosition","_handleState","visibility","multipleOpened","animationIn","afterAnimationFocus","focusableElements","showDelay","originalScrollPos","_extraHandlers","closeOnEsc","finishUp","animationOut","hideDelay","resetOnClose","replaceState","title","pathname","btmOffsetPct","percent","frac","num","absPosition","$handle","clickPos","Slider","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","inputs","handles","$input","$fill","vertical","isDbl","disabled","disabledClass","binding","_setInitAttr","doubleSided","$handle2","$input2","_setHandlePos","initialStart","initialEnd","$hndl","noInvert","h2Val","step","h1Val","vert","hOrW","lOrT","handleDim","elemDim","pctOfBar","toFixed","pxToMove","movement","decimal","_setValues","dim","isLeftHndl","handlePct","handlePos","moveTime","changedDelay","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","hasVal","_adjustValue","eventOffset","barDim","windowScroll","scrollLeft","elemOffset","barXY","eventFromBar","offsetPct","firstHndlPos","secndHndlPos","prev_val","next_val","div","curHandle","_handleEvent","clickSelect","draggable","currentTarget","newValue","_$handle","oldValue","decrease","increase","decrease_fast","increase_fast","invertVertical","emCalc","em","fontSize","Sticky","$parent","wasWrapped","$container","container","wrapInner","stickyClass","scrollCount","checkEvery","isStuck","containerHeight","elemHeight","_parsePoints","_setSizes","_calc","reverse","topAnchor","btm","btmAnchor","pts","breaks","place","canStick","_pauseListeners","checkSizes","scroll","topPoint","bottomPoint","_setSticky","_removeSticky","stickTo","mrgn","notStuckTo","isTop","stickToTop","anchorPt","anchorHeight","topOrBottom","stickyOn","newElemWidth","comp","pdng","max-width","newContainerHeight","_setBreakPoints","mTop","marginTop","mBtm","marginBottom","Tabs","$tabTitles","linkClass","matchHeight","_setHeight","_addKeyHandler","_addClickHandler","_setHeightMqHandler","_handleTabChange","wrapOnKeys","$tabLink","$targetContent","$oldTab","idStr","panelClass","panel","Toggler","input","toggleClass","_updateARIA","Tooltip","isClick","elemId","_getPositionClass","tipText","template","_buildTemplate","aria-describedby","data-toggle","triggerClass","templateClasses","tooltipClass","$template","data-is-active","$tipDims","showOn","fadeIn","fadeInDuration","fadeOutDuration","isFocus","disableForTouch","touchCloseText"],"mappings":"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","file":"foundation.min.js","sourcesContent":["'use strict';\n\nwindow.whatInput = function () {\n\n  'use strict';\n\n  /*\r\n    ---------------\r\n    variables\r\n    ---------------\r\n  */\n\n  // array of actively pressed keys\n\n  var activeKeys = [];\n\n  // cache document.body\n  var body;\n\n  // boolean: true if touch buffer timer is running\n  var buffer = false;\n\n  // the last used input type\n  var currentInput = null;\n\n  // `input` types that don't accept text\n  var nonTypingInputs = ['button', 'checkbox', 'file', 'image', 'radio', 'reset', 'submit'];\n\n  // detect version of mouse wheel event to use\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n  var mouseWheel = detectWheel();\n\n  // list of modifier keys commonly used with the mouse and\n  // can be safely ignored to prevent false keyboard detection\n  var ignoreMap = [16, // shift\n  17, // control\n  18, // alt\n  91, // Windows key / left Apple cmd\n  93 // Windows menu / right Apple cmd\n  ];\n\n  // mapping of events to input types\n  var inputMap = {\n    'keydown': 'keyboard',\n    'keyup': 'keyboard',\n    'mousedown': 'mouse',\n    'mousemove': 'mouse',\n    'MSPointerDown': 'pointer',\n    'MSPointerMove': 'pointer',\n    'pointerdown': 'pointer',\n    'pointermove': 'pointer',\n    'touchstart': 'touch'\n  };\n\n  // add correct mouse wheel event mapping to `inputMap`\n  inputMap[detectWheel()] = 'mouse';\n\n  // array of all used input types\n  var inputTypes = [];\n\n  // mapping of key codes to a common name\n  var keyMap = {\n    9: 'tab',\n    13: 'enter',\n    16: 'shift',\n    27: 'esc',\n    32: 'space',\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down'\n  };\n\n  // map of IE 10 pointer events\n  var pointerMap = {\n    2: 'touch',\n    3: 'touch', // treat pen like touch\n    4: 'mouse'\n  };\n\n  // touch buffer timer\n  var timer;\n\n  /*\r\n    ---------------\r\n    functions\r\n    ---------------\r\n  */\n\n  // allows events that are also triggered to be filtered out for `touchstart`\n  function eventBuffer() {\n    clearTimer();\n    setInput(event);\n\n    buffer = true;\n    timer = window.setTimeout(function () {\n      buffer = false;\n    }, 650);\n  }\n\n  function bufferedEvent(event) {\n    if (!buffer) setInput(event);\n  }\n\n  function unBufferedEvent(event) {\n    clearTimer();\n    setInput(event);\n  }\n\n  function clearTimer() {\n    window.clearTimeout(timer);\n  }\n\n  function setInput(event) {\n    var eventKey = key(event);\n    var value = inputMap[event.type];\n    if (value === 'pointer') value = pointerType(event);\n\n    // don't do anything if the value matches the input type already set\n    if (currentInput !== value) {\n      var eventTarget = target(event);\n      var eventTargetNode = eventTarget.nodeName.toLowerCase();\n      var eventTargetType = eventTargetNode === 'input' ? eventTarget.getAttribute('type') : null;\n\n      if ( // only if the user flag to allow typing in form fields isn't set\n      !body.hasAttribute('data-whatinput-formtyping') &&\n\n      // only if currentInput has a value\n      currentInput &&\n\n      // only if the input is `keyboard`\n      value === 'keyboard' &&\n\n      // not if the key is `TAB`\n      keyMap[eventKey] !== 'tab' && (\n\n      // only if the target is a form input that accepts text\n      eventTargetNode === 'textarea' || eventTargetNode === 'select' || eventTargetNode === 'input' && nonTypingInputs.indexOf(eventTargetType) < 0) ||\n      // ignore modifier keys\n      ignoreMap.indexOf(eventKey) > -1) {\n        // ignore keyboard typing\n      } else {\n          switchInput(value);\n        }\n    }\n\n    if (value === 'keyboard') logKeys(eventKey);\n  }\n\n  function switchInput(string) {\n    currentInput = string;\n    body.setAttribute('data-whatinput', currentInput);\n\n    if (inputTypes.indexOf(currentInput) === -1) inputTypes.push(currentInput);\n  }\n\n  function key(event) {\n    return event.keyCode ? event.keyCode : event.which;\n  }\n\n  function target(event) {\n    return event.target || event.srcElement;\n  }\n\n  function pointerType(event) {\n    if (typeof event.pointerType === 'number') {\n      return pointerMap[event.pointerType];\n    } else {\n      return event.pointerType === 'pen' ? 'touch' : event.pointerType; // treat pen like touch\n    }\n  }\n\n  // keyboard logging\n  function logKeys(eventKey) {\n    if (activeKeys.indexOf(keyMap[eventKey]) === -1 && keyMap[eventKey]) activeKeys.push(keyMap[eventKey]);\n  }\n\n  function unLogKeys(event) {\n    var eventKey = key(event);\n    var arrayPos = activeKeys.indexOf(keyMap[eventKey]);\n\n    if (arrayPos !== -1) activeKeys.splice(arrayPos, 1);\n  }\n\n  function bindEvents() {\n    body = document.body;\n\n    // pointer events (mouse, pen, touch)\n    if (window.PointerEvent) {\n      body.addEventListener('pointerdown', bufferedEvent);\n      body.addEventListener('pointermove', bufferedEvent);\n    } else if (window.MSPointerEvent) {\n      body.addEventListener('MSPointerDown', bufferedEvent);\n      body.addEventListener('MSPointerMove', bufferedEvent);\n    } else {\n\n      // mouse events\n      body.addEventListener('mousedown', bufferedEvent);\n      body.addEventListener('mousemove', bufferedEvent);\n\n      // touch events\n      if ('ontouchstart' in window) {\n        body.addEventListener('touchstart', eventBuffer);\n      }\n    }\n\n    // mouse wheel\n    body.addEventListener(mouseWheel, bufferedEvent);\n\n    // keyboard events\n    body.addEventListener('keydown', unBufferedEvent);\n    body.addEventListener('keyup', unBufferedEvent);\n    document.addEventListener('keyup', unLogKeys);\n  }\n\n  /*\r\n    ---------------\r\n    utilities\r\n    ---------------\r\n  */\n\n  // detect version of mouse wheel event to use\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n  function detectWheel() {\n    return mouseWheel = 'onwheel' in document.createElement('div') ? 'wheel' : // Modern browsers support \"wheel\"\n\n    document.onmousewheel !== undefined ? 'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n    'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\n  }\n\n  /*\r\n    ---------------\r\n    init\r\n      don't start script unless browser cuts the mustard,\r\n    also passes if polyfills are used\r\n    ---------------\r\n  */\n\n  if ('addEventListener' in window && Array.prototype.indexOf) {\n\n    // if the dom is already ready already (script was placed at bottom of <body>)\n    if (document.body) {\n      bindEvents();\n\n      // otherwise wait for the dom to load (script was placed in the <head>)\n    } else {\n        document.addEventListener('DOMContentLoaded', bindEvents);\n      }\n  }\n\n  /*\r\n    ---------------\r\n    api\r\n    ---------------\r\n  */\n\n  return {\n\n    // returns string: the current input type\n    ask: function () {\n      return currentInput;\n    },\n\n    // returns array: currently pressed keys\n    keys: function () {\n      return activeKeys;\n    },\n\n    // returns array: all the detected input types\n    types: function () {\n      return inputTypes;\n    },\n\n    // accepts string: manually set the input type\n    set: switchInput\n  };\n}();\n'use strict';\n\n!function ($) {\n\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.2.4';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\r\n     * Stores initialized plugins.\r\n     */\n    _plugins: {},\n\n    /**\r\n     * Stores generated unique ids for plugin instances\r\n     */\n    _uuids: [],\n\n    /**\r\n     * Returns a boolean for RTL support\r\n     */\n    rtl: function () {\n      return $('html').attr('dir') === 'rtl';\n    },\n    /**\r\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\r\n     * @param {Object} plugin - The constructor of the plugin.\r\n     */\n    plugin: function (plugin, name) {\n      // Object key to use when adding to global Foundation object\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\n      var className = name || functionName(plugin);\n      // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n      // Examples: data-reveal, data-off-canvas\n      var attrName = hyphenate(className);\n\n      // Add to the Foundation object and the plugins list (for reflowing)\n      this._plugins[attrName] = this[className] = plugin;\n    },\n    /**\r\n     * @function\r\n     * Populates the _uuids array with pointers to each individual plugin instance.\r\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\r\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\r\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\r\n     * @fires Plugin#init\r\n     */\n    registerPlugin: function (plugin, name) {\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n      plugin.uuid = this.GetYoDigits(6, pluginName);\n\n      if (!plugin.$element.attr('data-' + pluginName)) {\n        plugin.$element.attr('data-' + pluginName, plugin.uuid);\n      }\n      if (!plugin.$element.data('zfPlugin')) {\n        plugin.$element.data('zfPlugin', plugin);\n      }\n      /**\r\n       * Fires when the plugin has initialized.\r\n       * @event Plugin#init\r\n       */\n      plugin.$element.trigger('init.zf.' + pluginName);\n\n      this._uuids.push(plugin.uuid);\n\n      return;\n    },\n    /**\r\n     * @function\r\n     * Removes the plugins uuid from the _uuids array.\r\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\r\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\r\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n     * @fires Plugin#destroyed\r\n     */\n    unregisterPlugin: function (plugin) {\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n      plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n      /**\r\n       * Fires when the plugin has been destroyed.\r\n       * @event Plugin#destroyed\r\n       */\n      .trigger('destroyed.zf.' + pluginName);\n      for (var prop in plugin) {\n        plugin[prop] = null; //clean up script to prep for garbage collection.\n      }\n      return;\n    },\n\n    /**\r\n     * @function\r\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\r\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\r\n     * @default If no argument is passed, reflow all currently active plugins.\r\n     */\n    reInit: function (plugins) {\n      var isJQ = plugins instanceof $;\n      try {\n        if (isJQ) {\n          plugins.each(function () {\n            $(this).data('zfPlugin')._init();\n          });\n        } else {\n          var type = typeof plugins,\n              _this = this,\n              fns = {\n            'object': function (plgs) {\n              plgs.forEach(function (p) {\n                p = hyphenate(p);\n                $('[data-' + p + ']').foundation('_init');\n              });\n            },\n            'string': function () {\n              plugins = hyphenate(plugins);\n              $('[data-' + plugins + ']').foundation('_init');\n            },\n            'undefined': function () {\n              this['object'](Object.keys(_this._plugins));\n            }\n          };\n          fns[type](plugins);\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        return plugins;\n      }\n    },\n\n    /**\r\n     * returns a random base-36 uid with namespacing\r\n     * @function\r\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\r\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\r\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\r\n     * @returns {String} - unique id\r\n     */\n    GetYoDigits: function (length, namespace) {\n      length = length || 6;\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n    },\n    /**\r\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\r\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\r\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\r\n     */\n    reflow: function (elem, plugins) {\n\n      // If plugins is undefined, just grab everything\n      if (typeof plugins === 'undefined') {\n        plugins = Object.keys(this._plugins);\n      }\n      // If plugins is a string, convert it to an array with one item\n      else if (typeof plugins === 'string') {\n          plugins = [plugins];\n        }\n\n      var _this = this;\n\n      // Iterate through each plugin\n      $.each(plugins, function (i, name) {\n        // Get the current plugin\n        var plugin = _this._plugins[name];\n\n        // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n        // For each plugin found, initialize it\n        $elem.each(function () {\n          var $el = $(this),\n              opts = {};\n          // Don't double-dip on plugins\n          if ($el.data('zfPlugin')) {\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n            return;\n          }\n\n          if ($el.attr('data-options')) {\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n              var opt = e.split(':').map(function (el) {\n                return el.trim();\n              });\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n            });\n          }\n          try {\n            $el.data('zfPlugin', new plugin($(this), opts));\n          } catch (er) {\n            console.error(er);\n          } finally {\n            return;\n          }\n        });\n      });\n    },\n    getFnName: functionName,\n    transitionend: function ($elem) {\n      var transitions = {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'otransitionend'\n      };\n      var elem = document.createElement('div'),\n          end;\n\n      for (var t in transitions) {\n        if (typeof elem.style[t] !== 'undefined') {\n          end = transitions[t];\n        }\n      }\n      if (end) {\n        return end;\n      } else {\n        end = setTimeout(function () {\n          $elem.triggerHandler('transitionend', [$elem]);\n        }, 1);\n        return 'transitionend';\n      }\n    }\n  };\n\n  Foundation.util = {\n    /**\r\n     * Function for applying a debounce effect to a function call.\r\n     * @function\r\n     * @param {Function} func - Function to be called at end of timeout.\r\n     * @param {Number} delay - Time in ms to delay the call of `func`.\r\n     * @returns function\r\n     */\n    throttle: function (func, delay) {\n      var timer = null;\n\n      return function () {\n        var context = this,\n            args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            func.apply(context, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\r\n   * The Foundation jQuery method.\r\n   * @param {String|Array} method - An action to perform on the current jQuery object.\r\n   */\n  var foundation = function (method) {\n    var type = typeof method,\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\r\n     * Polyfill for performance.now, required by rAF\r\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function () {\n          return Date.now() - this.start;\n        }\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function () {},\n          fBound = function () {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if (/true/.test(str)) return true;else if (/false/.test(str)) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  Foundation.Box = {\n    ImNotTouchingYou: ImNotTouchingYou,\n    GetDimensions: GetDimensions,\n    GetOffsets: GetOffsets\n  };\n\n  /**\r\n   * Compares the dimensions of an element to a container and determines collision events with container.\r\n   * @function\r\n   * @param {jQuery} element - jQuery object to test for collisions.\r\n   * @param {jQuery} parent - jQuery object to use as bounding container.\r\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\r\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\r\n   * @default if no parent object passed, detects collisions with `window`.\r\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\r\n   */\n  function ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n    var eleDims = GetDimensions(element),\n        top,\n        bottom,\n        left,\n        right;\n\n    if (parent) {\n      var parDims = GetDimensions(parent);\n\n      bottom = eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top;\n      top = eleDims.offset.top >= parDims.offset.top;\n      left = eleDims.offset.left >= parDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= parDims.width + parDims.offset.left;\n    } else {\n      bottom = eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top;\n      top = eleDims.offset.top >= eleDims.windowDims.offset.top;\n      left = eleDims.offset.left >= eleDims.windowDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= eleDims.windowDims.width;\n    }\n\n    var allDirs = [bottom, top, left, right];\n\n    if (lrOnly) {\n      return left === right === true;\n    }\n\n    if (tbOnly) {\n      return top === bottom === true;\n    }\n\n    return allDirs.indexOf(false) === -1;\n  };\n\n  /**\r\n   * Uses native methods to return an object of dimension values.\r\n   * @function\r\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\r\n   * @returns {Object} - nested object of integer pixel values\r\n   * TODO - if element is window, return only those values.\r\n   */\n  function GetDimensions(elem, test) {\n    elem = elem.length ? elem[0] : elem;\n\n    if (elem === window || elem === document) {\n      throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n    }\n\n    var rect = elem.getBoundingClientRect(),\n        parRect = elem.parentNode.getBoundingClientRect(),\n        winRect = document.body.getBoundingClientRect(),\n        winY = window.pageYOffset,\n        winX = window.pageXOffset;\n\n    return {\n      width: rect.width,\n      height: rect.height,\n      offset: {\n        top: rect.top + winY,\n        left: rect.left + winX\n      },\n      parentDims: {\n        width: parRect.width,\n        height: parRect.height,\n        offset: {\n          top: parRect.top + winY,\n          left: parRect.left + winX\n        }\n      },\n      windowDims: {\n        width: winRect.width,\n        height: winRect.height,\n        offset: {\n          top: winY,\n          left: winX\n        }\n      }\n    };\n  }\n\n  /**\r\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\r\n   * such as: Tooltip, Reveal, and Dropdown\r\n   * @function\r\n   * @param {jQuery} element - jQuery object for the element being positioned.\r\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\r\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\r\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\r\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\r\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\r\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\r\n   */\n  function GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n    var $eleDims = GetDimensions(element),\n        $anchorDims = anchor ? GetDimensions(anchor) : null;\n\n    switch (position) {\n      case 'top':\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'center top':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'center bottom':\n        return {\n          left: isOverflow ? hOffset : $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'center left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center':\n        return {\n          left: $eleDims.windowDims.offset.left + $eleDims.windowDims.width / 2 - $eleDims.width / 2,\n          top: $eleDims.windowDims.offset.top + $eleDims.windowDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'reveal':\n        return {\n          left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n          top: $eleDims.windowDims.offset.top + vOffset\n        };\n      case 'reveal full':\n        return {\n          left: $eleDims.windowDims.offset.left,\n          top: $eleDims.windowDims.offset.top\n        };\n        break;\n      case 'left bottom':\n        return {\n          left: $anchorDims.offset.left,\n          top: $anchorDims.offset.top + $anchorDims.height\n        };\n        break;\n      case 'right bottom':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset - $eleDims.width,\n          top: $anchorDims.offset.top + $anchorDims.height\n        };\n        break;\n      default:\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left + hOffset,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n    }\n  }\n}(jQuery);\n/*******************************************\r\n *                                         *\r\n * This util was created by Marius Olbertz *\r\n * Please thank Marius on GitHub /owlbertz *\r\n * or the web http://www.mariusolbertz.de/ *\r\n *                                         *\r\n ******************************************/\n\n'use strict';\n\n!function ($) {\n\n  var keyCodes = {\n    9: 'TAB',\n    13: 'ENTER',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'ARROW_LEFT',\n    38: 'ARROW_UP',\n    39: 'ARROW_RIGHT',\n    40: 'ARROW_DOWN'\n  };\n\n  var commands = {};\n\n  var Keyboard = {\n    keys: getKeyCodes(keyCodes),\n\n    /**\r\n     * Parses the (keyboard) event and returns a String that represents its key\r\n     * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n     * @param {Event} event - the event generated by the event handler\r\n     * @return String key - String that represents the key pressed\r\n     */\n    parseKey: function (event) {\n      var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n      if (event.shiftKey) key = 'SHIFT_' + key;\n      if (event.ctrlKey) key = 'CTRL_' + key;\n      if (event.altKey) key = 'ALT_' + key;\n      return key;\n    },\n\n\n    /**\r\n     * Handles the given (keyboard) event\r\n     * @param {Event} event - the event generated by the event handler\r\n     * @param {String} component - Foundation component's name, e.g. Slider or Reveal\r\n     * @param {Objects} functions - collection of functions that are to be executed\r\n     */\n    handleKey: function (event, component, functions) {\n      var commandList = commands[component],\n          keyCode = this.parseKey(event),\n          cmds,\n          command,\n          fn;\n\n      if (!commandList) return console.warn('Component not defined!');\n\n      if (typeof commandList.ltr === 'undefined') {\n        // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n      } else {\n          // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n          if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n        }\n      command = cmds[keyCode];\n\n      fn = functions[command];\n      if (fn && typeof fn === 'function') {\n        // execute function  if exists\n        var returnValue = fn.apply();\n        if (functions.handled || typeof functions.handled === 'function') {\n          // execute function when event was handled\n          functions.handled(returnValue);\n        }\n      } else {\n        if (functions.unhandled || typeof functions.unhandled === 'function') {\n          // execute function when event was not handled\n          functions.unhandled();\n        }\n      }\n    },\n\n\n    /**\r\n     * Finds all focusable elements within the given `$element`\r\n     * @param {jQuery} $element - jQuery object to search within\r\n     * @return {jQuery} $focusable - all focusable elements within `$element`\r\n     */\n    findFocusable: function ($element) {\n      return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function () {\n        if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) {\n          return false;\n        } //only have visible elements and those that have a tabindex greater or equal 0\n        return true;\n      });\n    },\n\n\n    /**\r\n     * Returns the component name name\r\n     * @param {Object} component - Foundation component, e.g. Slider or Reveal\r\n     * @return String componentName\r\n     */\n\n    register: function (componentName, cmds) {\n      commands[componentName] = cmds;\n    }\n  };\n\n  /*\r\n   * Constants for easier comparing.\r\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n   */\n  function getKeyCodes(kcs) {\n    var k = {};\n    for (var kc in kcs) {\n      k[kcs[kc]] = kcs[kc];\n    }return k;\n  }\n\n  Foundation.Keyboard = Keyboard;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  // Default set of media queries\n  var defaultQueries = {\n    'default': 'only screen',\n    landscape: 'only screen and (orientation: landscape)',\n    portrait: 'only screen and (orientation: portrait)',\n    retina: 'only screen and (-webkit-min-device-pixel-ratio: 2),' + 'only screen and (min--moz-device-pixel-ratio: 2),' + 'only screen and (-o-min-device-pixel-ratio: 2/1),' + 'only screen and (min-device-pixel-ratio: 2),' + 'only screen and (min-resolution: 192dpi),' + 'only screen and (min-resolution: 2dppx)'\n  };\n\n  var MediaQuery = {\n    queries: [],\n\n    current: '',\n\n    /**\r\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\r\n     * @function\r\n     * @private\r\n     */\n    _init: function () {\n      var self = this;\n      var extractedStyles = $('.foundation-mq').css('font-family');\n      var namedQueries;\n\n      namedQueries = parseStyleToObject(extractedStyles);\n\n      for (var key in namedQueries) {\n        if (namedQueries.hasOwnProperty(key)) {\n          self.queries.push({\n            name: key,\n            value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n          });\n        }\n      }\n\n      this.current = this._getCurrentSize();\n\n      this._watcher();\n    },\n\n\n    /**\r\n     * Checks if the screen is at least as wide as a breakpoint.\r\n     * @function\r\n     * @param {String} size - Name of the breakpoint to check.\r\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\r\n     */\n    atLeast: function (size) {\n      var query = this.get(size);\n\n      if (query) {\n        return window.matchMedia(query).matches;\n      }\n\n      return false;\n    },\n\n\n    /**\r\n     * Gets the media query of a breakpoint.\r\n     * @function\r\n     * @param {String} size - Name of the breakpoint to get.\r\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\r\n     */\n    get: function (size) {\n      for (var i in this.queries) {\n        if (this.queries.hasOwnProperty(i)) {\n          var query = this.queries[i];\n          if (size === query.name) return query.value;\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\r\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\r\n     * @function\r\n     * @private\r\n     * @returns {String} Name of the current breakpoint.\r\n     */\n    _getCurrentSize: function () {\n      var matched;\n\n      for (var i = 0; i < this.queries.length; i++) {\n        var query = this.queries[i];\n\n        if (window.matchMedia(query.value).matches) {\n          matched = query;\n        }\n      }\n\n      if (typeof matched === 'object') {\n        return matched.name;\n      } else {\n        return matched;\n      }\n    },\n\n\n    /**\r\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\r\n     * @function\r\n     * @private\r\n     */\n    _watcher: function () {\n      var _this = this;\n\n      $(window).on('resize.zf.mediaquery', function () {\n        var newSize = _this._getCurrentSize(),\n            currentSize = _this.current;\n\n        if (newSize !== currentSize) {\n          // Change the current media query\n          _this.current = newSize;\n\n          // Broadcast the media query change on the window\n          $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\n        }\n      });\n    }\n  };\n\n  Foundation.MediaQuery = MediaQuery;\n\n  // matchMedia() polyfill - Test a CSS media type/query in JS.\n  // Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\n  window.matchMedia || (window.matchMedia = function () {\n    'use strict';\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n\n    var styleMedia = window.styleMedia || window.media;\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n      var style = document.createElement('style'),\n          script = document.getElementsByTagName('script')[0],\n          info = null;\n\n      style.type = 'text/css';\n      style.id = 'matchmediajs-test';\n\n      script && script.parentNode && script.parentNode.insertBefore(style, script);\n\n      // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n      info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n      styleMedia = {\n        matchMedium: function (media) {\n          var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n          // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n          if (style.styleSheet) {\n            style.styleSheet.cssText = text;\n          } else {\n            style.textContent = text;\n          }\n\n          // Test if media query is true or false\n          return info.width === '1px';\n        }\n      };\n    }\n\n    return function (media) {\n      return {\n        matches: styleMedia.matchMedium(media || 'all'),\n        media: media || 'all'\n      };\n    };\n  }());\n\n  // Thank you: https://github.com/sindresorhus/query-string\n  function parseStyleToObject(str) {\n    var styleObject = {};\n\n    if (typeof str !== 'string') {\n      return styleObject;\n    }\n\n    str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n    if (!str) {\n      return styleObject;\n    }\n\n    styleObject = str.split('&').reduce(function (ret, param) {\n      var parts = param.replace(/\\+/g, ' ').split('=');\n      var key = parts[0];\n      var val = parts[1];\n      key = decodeURIComponent(key);\n\n      // missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n      val = val === undefined ? null : decodeURIComponent(val);\n\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = val;\n      } else if (Array.isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n      return ret;\n    }, {});\n\n    return styleObject;\n  }\n\n  Foundation.MediaQuery = MediaQuery;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  /**\r\n   * Motion module.\r\n   * @module foundation.motion\r\n   */\n\n  var initClasses = ['mui-enter', 'mui-leave'];\n  var activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\n  var Motion = {\n    animateIn: function (element, animation, cb) {\n      animate(true, element, animation, cb);\n    },\n\n    animateOut: function (element, animation, cb) {\n      animate(false, element, animation, cb);\n    }\n  };\n\n  function Move(duration, elem, fn) {\n    var anim,\n        prog,\n        start = null;\n    // console.log('called');\n\n    function move(ts) {\n      if (!start) start = window.performance.now();\n      // console.log(start, ts);\n      prog = ts - start;\n      fn.apply(elem);\n\n      if (prog < duration) {\n        anim = window.requestAnimationFrame(move, elem);\n      } else {\n        window.cancelAnimationFrame(anim);\n        elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      }\n    }\n    anim = window.requestAnimationFrame(move);\n  }\n\n  /**\r\n   * Animates an element in or out using a CSS transition class.\r\n   * @function\r\n   * @private\r\n   * @param {Boolean} isIn - Defines if the animation is in or out.\r\n   * @param {Object} element - jQuery or HTML object to animate.\r\n   * @param {String} animation - CSS class to use.\r\n   * @param {Function} cb - Callback to run when animation is finished.\r\n   */\n  function animate(isIn, element, animation, cb) {\n    element = $(element).eq(0);\n\n    if (!element.length) return;\n\n    var initClass = isIn ? initClasses[0] : initClasses[1];\n    var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n    // Set up the animation\n    reset();\n\n    element.addClass(animation).css('transition', 'none');\n\n    requestAnimationFrame(function () {\n      element.addClass(initClass);\n      if (isIn) element.show();\n    });\n\n    // Start the animation\n    requestAnimationFrame(function () {\n      element[0].offsetWidth;\n      element.css('transition', '').addClass(activeClass);\n    });\n\n    // Clean up the animation when it finishes\n    element.one(Foundation.transitionend(element), finish);\n\n    // Hides the element (for out animations), resets the element, and runs a callback\n    function finish() {\n      if (!isIn) element.hide();\n      reset();\n      if (cb) cb.apply(element);\n    }\n\n    // Resets transitions and removes motion-specific classes\n    function reset() {\n      element[0].style.transitionDuration = 0;\n      element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n    }\n  }\n\n  Foundation.Move = Move;\n  Foundation.Motion = Motion;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  var Nest = {\n    Feather: function (menu) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'zf';\n\n      menu.attr('role', 'menubar');\n\n      var items = menu.find('li').attr({ 'role': 'menuitem' }),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('a:first').attr('tabindex', 0);\n\n      items.each(function () {\n        var $item = $(this),\n            $sub = $item.children('ul');\n\n        if ($sub.length) {\n          $item.addClass(hasSubClass).attr({\n            'aria-haspopup': true,\n            'aria-expanded': false,\n            'aria-label': $item.children('a:first').text()\n          });\n\n          $sub.addClass('submenu ' + subMenuClass).attr({\n            'data-submenu': '',\n            'aria-hidden': true,\n            'role': 'menu'\n          });\n        }\n\n        if ($item.parent('[data-submenu]').length) {\n          $item.addClass('is-submenu-item ' + subItemClass);\n        }\n      });\n\n      return;\n    },\n    Burn: function (menu, type) {\n      var items = menu.find('li').removeAttr('tabindex'),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('>li, .menu, .menu > li').removeClass(subMenuClass + ' ' + subItemClass + ' ' + hasSubClass + ' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display', '');\n\n      // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n      //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n      //           .removeAttr('data-submenu'));\n      // items.each(function(){\n      //   var $item = $(this),\n      //       $sub = $item.children('ul');\n      //   if($item.parent('[data-submenu]').length){\n      //     $item.removeClass('is-submenu-item ' + subItemClass);\n      //   }\n      //   if($sub.length){\n      //     $item.removeClass('has-submenu');\n      //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n      //   }\n      // });\n    }\n  };\n\n  Foundation.Nest = Nest;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.isPaused = false;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      this.isPaused = false;\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n        }\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      this.isPaused = true;\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  }\n\n  /**\r\n   * Runs a callback function when images are fully loaded.\r\n   * @param {Object} images - Image(s) to check if loaded.\r\n   * @param {Func} callback - Function to execute when image is fully loaded.\r\n   */\n  function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    images.each(function () {\n      if (this.complete) {\n        singleImageLoaded();\n      } else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\n        singleImageLoaded();\n      } else {\n        $(this).one('load', function () {\n          singleImageLoaded();\n        });\n      }\n    });\n\n    function singleImageLoaded() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    }\n  }\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery);\n'use strict';\n\n//**************************************************\n//**Work inspired by multiple jquery swipe plugins**\n//**Done by Yohai Ararat ***************************\n//**************************************************\n(function ($) {\n\n\t\t$.spotSwipe = {\n\t\t\t\tversion: '1.0.0',\n\t\t\t\tenabled: 'ontouchstart' in document.documentElement,\n\t\t\t\tpreventDefault: false,\n\t\t\t\tmoveThreshold: 75,\n\t\t\t\ttimeThreshold: 200\n\t\t};\n\n\t\tvar startPosX,\n\t\t    startPosY,\n\t\t    startTime,\n\t\t    elapsedTime,\n\t\t    isMoving = false;\n\n\t\tfunction onTouchEnd() {\n\t\t\t\t//  alert(this);\n\t\t\t\tthis.removeEventListener('touchmove', onTouchMove);\n\t\t\t\tthis.removeEventListener('touchend', onTouchEnd);\n\t\t\t\tisMoving = false;\n\t\t}\n\n\t\tfunction onTouchMove(e) {\n\t\t\t\tif ($.spotSwipe.preventDefault) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\tif (isMoving) {\n\t\t\t\t\t\tvar x = e.touches[0].pageX;\n\t\t\t\t\t\tvar y = e.touches[0].pageY;\n\t\t\t\t\t\tvar dx = startPosX - x;\n\t\t\t\t\t\tvar dy = startPosY - y;\n\t\t\t\t\t\tvar dir;\n\t\t\t\t\t\telapsedTime = new Date().getTime() - startTime;\n\t\t\t\t\t\tif (Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t\t\t\t\t\tdir = dx > 0 ? 'left' : 'right';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t\t\t\t//   dir = dy > 0 ? 'down' : 'up';\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tif (dir) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tonTouchEnd.call(this);\n\t\t\t\t\t\t\t\t$(this).trigger('swipe', dir).trigger('swipe' + dir);\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\n\t\tfunction onTouchStart(e) {\n\t\t\t\tif (e.touches.length == 1) {\n\t\t\t\t\t\tstartPosX = e.touches[0].pageX;\n\t\t\t\t\t\tstartPosY = e.touches[0].pageY;\n\t\t\t\t\t\tisMoving = true;\n\t\t\t\t\t\tstartTime = new Date().getTime();\n\t\t\t\t\t\tthis.addEventListener('touchmove', onTouchMove, false);\n\t\t\t\t\t\tthis.addEventListener('touchend', onTouchEnd, false);\n\t\t\t\t}\n\t\t}\n\n\t\tfunction init() {\n\t\t\t\tthis.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\n\t\t}\n\n\t\tfunction teardown() {\n\t\t\t\tthis.removeEventListener('touchstart', onTouchStart);\n\t\t}\n\n\t\t$.event.special.swipe = { setup: init };\n\n\t\t$.each(['left', 'up', 'down', 'right'], function () {\n\t\t\t\t$.event.special['swipe' + this] = { setup: function () {\n\t\t\t\t\t\t\t\t$(this).on('swipe', $.noop);\n\t\t\t\t\t\t} };\n\t\t});\n})(jQuery);\n/****************************************************\r\n * Method for adding psuedo drag events to elements *\r\n ***************************************************/\n!function ($) {\n\t\t$.fn.addTouch = function () {\n\t\t\t\tthis.each(function (i, el) {\n\t\t\t\t\t\t$(el).bind('touchstart touchmove touchend touchcancel', function () {\n\t\t\t\t\t\t\t\t//we pass the original event object because the jQuery event\n\t\t\t\t\t\t\t\t//object is normalized to w3c specs and does not provide the TouchList\n\t\t\t\t\t\t\t\thandleTouch(event);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tvar handleTouch = function (event) {\n\t\t\t\t\t\tvar touches = event.changedTouches,\n\t\t\t\t\t\t    first = touches[0],\n\t\t\t\t\t\t    eventTypes = {\n\t\t\t\t\t\t\t\ttouchstart: 'mousedown',\n\t\t\t\t\t\t\t\ttouchmove: 'mousemove',\n\t\t\t\t\t\t\t\ttouchend: 'mouseup'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t    type = eventTypes[event.type],\n\t\t\t\t\t\t    simulatedEvent;\n\n\t\t\t\t\t\tif ('MouseEvent' in window && typeof window.MouseEvent === 'function') {\n\t\t\t\t\t\t\t\tsimulatedEvent = new window.MouseEvent(type, {\n\t\t\t\t\t\t\t\t\t\t'bubbles': true,\n\t\t\t\t\t\t\t\t\t\t'cancelable': true,\n\t\t\t\t\t\t\t\t\t\t'screenX': first.screenX,\n\t\t\t\t\t\t\t\t\t\t'screenY': first.screenY,\n\t\t\t\t\t\t\t\t\t\t'clientX': first.clientX,\n\t\t\t\t\t\t\t\t\t\t'clientY': first.clientY\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsimulatedEvent = document.createEvent('MouseEvent');\n\t\t\t\t\t\t\t\tsimulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0 /*left*/, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfirst.target.dispatchEvent(simulatedEvent);\n\t\t\t\t};\n\t\t};\n}(jQuery);\n\n//**********************************\n//**From the jQuery Mobile Library**\n//**need to recreate functionality**\n//**and try to improve if possible**\n//**********************************\n\n/* Removing the jQuery function ****\r\n************************************\r\n\r\n(function( $, window, undefined ) {\r\n\r\n\tvar $document = $( document ),\r\n\t\t// supportTouch = $.mobile.support.touch,\r\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\r\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\r\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\r\n\r\n\t// setup new event shortcuts\r\n\t$.each( ( \"touchstart touchmove touchend \" +\r\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\r\n\r\n\t\t$.fn[ name ] = function( fn ) {\r\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\r\n\t\t};\r\n\r\n\t\t// jQuery < 1.8\r\n\t\tif ( $.attrFn ) {\r\n\t\t\t$.attrFn[ name ] = true;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\r\n\t\tvar originalType = event.type;\r\n\t\tevent.type = eventType;\r\n\t\tif ( bubble ) {\r\n\t\t\t$.event.trigger( event, undefined, obj );\r\n\t\t} else {\r\n\t\t\t$.event.dispatch.call( obj, event );\r\n\t\t}\r\n\t\tevent.type = originalType;\r\n\t}\r\n\r\n\t// also handles taphold\r\n\r\n\t// Also handles swipeleft, swiperight\r\n\t$.event.special.swipe = {\r\n\r\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\r\n\t\tscrollSupressionThreshold: 30,\r\n\r\n\t\t// More time than this, and it isn't a swipe.\r\n\t\tdurationThreshold: 1000,\r\n\r\n\t\t// Swipe horizontal displacement must be more than this.\r\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\t// Swipe vertical displacement must be less than this.\r\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\tgetLocation: function ( event ) {\r\n\t\t\tvar winPageX = window.pageXOffset,\r\n\t\t\t\twinPageY = window.pageYOffset,\r\n\t\t\t\tx = event.clientX,\r\n\t\t\t\ty = event.clientY;\r\n\r\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\r\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\r\n\r\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\r\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\r\n\t\t\t\tx = x - winPageX;\r\n\t\t\t\ty = y - winPageY;\r\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\r\n\r\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\r\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\r\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\r\n\t\t\t\tx = event.pageX - winPageX;\r\n\t\t\t\ty = event.pageY - winPageY;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tstart: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\r\n\t\t\t\t\t\torigin: $( event.target )\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\tstop: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\r\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\r\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\r\n\r\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\r\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t// This serves as a flag to ensure that at most one swipe event event is\r\n\t\t// in work at any given time\r\n\t\teventInProgress: false,\r\n\r\n\t\tsetup: function() {\r\n\t\t\tvar events,\r\n\t\t\t\tthisObject = this,\r\n\t\t\t\t$this = $( thisObject ),\r\n\t\t\t\tcontext = {};\r\n\r\n\t\t\t// Retrieve the events data for this element and add the swipe context\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( !events ) {\r\n\t\t\t\tevents = { length: 0 };\r\n\t\t\t\t$.data( this, \"mobile-events\", events );\r\n\t\t\t}\r\n\t\t\tevents.length++;\r\n\t\t\tevents.swipe = context;\r\n\r\n\t\t\tcontext.start = function( event ) {\r\n\r\n\t\t\t\t// Bail if we're already working on a swipe event\r\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\r\n\r\n\t\t\t\tvar stop,\r\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\r\n\t\t\t\t\torigTarget = event.target,\r\n\t\t\t\t\temitted = false;\r\n\r\n\t\t\t\tcontext.move = function( event ) {\r\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\r\n\t\t\t\t\tif ( !emitted ) {\r\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\r\n\t\t\t\t\t\tif ( emitted ) {\r\n\r\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// prevent scrolling\r\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcontext.stop = function() {\r\n\t\t\t\t\t\temitted = true;\r\n\r\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t\t\tcontext.move = null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$document.on( touchMoveEvent, context.move )\r\n\t\t\t\t\t.one( touchStopEvent, context.stop );\r\n\t\t\t};\r\n\t\t\t$this.on( touchStartEvent, context.start );\r\n\t\t},\r\n\r\n\t\tteardown: function() {\r\n\t\t\tvar events, context;\r\n\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( events ) {\r\n\t\t\t\tcontext = events.swipe;\r\n\t\t\t\tdelete events.swipe;\r\n\t\t\t\tevents.length--;\r\n\t\t\t\tif ( events.length === 0 ) {\r\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( context ) {\r\n\t\t\t\tif ( context.start ) {\r\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.move ) {\r\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.stop ) {\r\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t$.each({\r\n\t\tswipeleft: \"swipe.left\",\r\n\t\tswiperight: \"swipe.right\"\r\n\t}, function( event, sourceEvent ) {\r\n\r\n\t\t$.event.special[ event ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\t$( this ).unbind( sourceEvent );\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n})( jQuery, this );\r\n*/\n'use strict';\n\n!function ($) {\n\n  var MutationObserver = function () {\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n    for (var i = 0; i < prefixes.length; i++) {\n      if (prefixes[i] + 'MutationObserver' in window) {\n        return window[prefixes[i] + 'MutationObserver'];\n      }\n    }\n    return false;\n  }();\n\n  var triggers = function (el, type) {\n    el.data(type).split(' ').forEach(function (id) {\n      $('#' + id)[type === 'close' ? 'trigger' : 'triggerHandler'](type + '.zf.trigger', [el]);\n    });\n  };\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-open]', function () {\n    triggers($(this), 'open');\n  });\n\n  // Elements with [data-close] will close a plugin that supports it when clicked.\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n  $(document).on('click.zf.trigger', '[data-close]', function () {\n    var id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    } else {\n      $(this).trigger('close.zf.trigger');\n    }\n  });\n\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-toggle]', function () {\n    triggers($(this), 'toggle');\n  });\n\n  // Elements with [data-closable] will respond to close.zf.trigger events.\n  $(document).on('close.zf.trigger', '[data-closable]', function (e) {\n    e.stopPropagation();\n    var animation = $(this).data('closable');\n\n    if (animation !== '') {\n      Foundation.Motion.animateOut($(this), animation, function () {\n        $(this).trigger('closed.zf');\n      });\n    } else {\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  });\n\n  $(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function () {\n    var id = $(this).data('toggle-focus');\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\n  });\n\n  /**\r\n  * Fires once after all other scripts have loaded\r\n  * @function\r\n  * @private\r\n  */\n  $(window).on('load', function () {\n    checkListeners();\n  });\n\n  function checkListeners() {\n    eventsListener();\n    resizeListener();\n    scrollListener();\n    closemeListener();\n  }\n\n  //******** only fires this function once on load, if there's something to watch ********\n  function closemeListener(pluginName) {\n    var yetiBoxes = $('[data-yeti-box]'),\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n    if (pluginName) {\n      if (typeof pluginName === 'string') {\n        plugNames.push(pluginName);\n      } else if (typeof pluginName === 'object' && typeof pluginName[0] === 'string') {\n        plugNames.concat(pluginName);\n      } else {\n        console.error('Plugin names must be strings');\n      }\n    }\n    if (yetiBoxes.length) {\n      var listeners = plugNames.map(function (name) {\n        return 'closeme.zf.' + name;\n      }).join(' ');\n\n      $(window).off(listeners).on(listeners, function (e, pluginId) {\n        var plugin = e.namespace.split('.')[0];\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\n\n        plugins.each(function () {\n          var _this = $(this);\n\n          _this.triggerHandler('close.zf.trigger', [_this]);\n        });\n      });\n    }\n  }\n\n  function resizeListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-resize]');\n    if ($nodes.length) {\n      $(window).off('resize.zf.trigger').on('resize.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('resizeme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a resize event\n          $nodes.attr('data-events', \"resize\");\n        }, debounce || 10); //default time to emit resize event\n      });\n    }\n  }\n\n  function scrollListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-scroll]');\n    if ($nodes.length) {\n      $(window).off('scroll.zf.trigger').on('scroll.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('scrollme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a scroll event\n          $nodes.attr('data-events', \"scroll\");\n        }, debounce || 10); //default time to emit scroll event\n      });\n    }\n  }\n\n  function eventsListener() {\n    if (!MutationObserver) {\n      return false;\n    }\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n    //element callback\n    var listeningElementsMutation = function (mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n      //trigger the event handler for the element depending on type\n      switch ($target.attr(\"data-events\")) {\n\n        case \"resize\":\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n          break;\n\n        case \"scroll\":\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n          break;\n\n        // case \"mutate\" :\n        // console.log('mutate', $target);\n        // $target.triggerHandler('mutate.zf.trigger');\n        //\n        // //make sure we don't get stuck in an infinite loop from sloppy codeing\n        // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\n        //   domMutationObserver();\n        // }\n        // break;\n\n        default:\n          return false;\n        //nothing\n      }\n    };\n\n    if (nodes.length) {\n      //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\n      for (var i = 0; i <= nodes.length - 1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree: false, attributeFilter: [\"data-events\"] });\n      }\n    }\n  }\n\n  // ------------------------------------\n\n  // [PH]\n  // Foundation.CheckWatchers = checkWatchers;\n  Foundation.IHearYou = checkListeners;\n  // Foundation.ISeeYou = scrollListener;\n  // Foundation.IFeelYou = closemeListener;\n}(jQuery);\n\n// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Abide module.\r\n   * @module foundation.abide\r\n   */\n\n  var Abide = function () {\n    /**\r\n     * Creates a new instance of Abide.\r\n     * @class\r\n     * @fires Abide#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Abide(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Abide);\n\n      this.$element = element;\n      this.options = $.extend({}, Abide.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Abide');\n    }\n\n    /**\r\n     * Initializes the Abide plugin and calls functions to get Abide functioning on load.\r\n     * @private\r\n     */\n\n\n    _createClass(Abide, [{\n      key: '_init',\n      value: function _init() {\n        this.$inputs = this.$element.find('input, textarea, select');\n\n        this._events();\n      }\n\n      /**\r\n       * Initializes events for Abide.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        this.$element.off('.abide').on('reset.zf.abide', function () {\n          _this2.resetForm();\n        }).on('submit.zf.abide', function () {\n          return _this2.validateForm();\n        });\n\n        if (this.options.validateOn === 'fieldChange') {\n          this.$inputs.off('change.zf.abide').on('change.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n\n        if (this.options.liveValidate) {\n          this.$inputs.off('input.zf.abide').on('input.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n      }\n\n      /**\r\n       * Calls necessary functions to update Abide upon DOM change\r\n       * @private\r\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        this._init();\n      }\n\n      /**\r\n       * Checks whether or not a form element has the required attribute and if it's checked or not\r\n       * @param {Object} element - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */\n\n    }, {\n      key: 'requiredCheck',\n      value: function requiredCheck($el) {\n        if (!$el.attr('required')) return true;\n\n        var isGood = true;\n\n        switch ($el[0].type) {\n          case 'checkbox':\n            isGood = $el[0].checked;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            var opt = $el.find('option:selected');\n            if (!opt.length || !opt.val()) isGood = false;\n            break;\n\n          default:\n            if (!$el.val() || !$el.val().length) isGood = false;\n        }\n\n        return isGood;\n      }\n\n      /**\r\n       * Based on $el, get the first element with selector in this order:\r\n       * 1. The element's direct sibling('s).\r\n       * 3. The element's parent's children.\r\n       *\r\n       * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\r\n       *\r\n       * @param {Object} $el - jQuery object to use as reference to find the form error selector.\r\n       * @returns {Object} jQuery object with the selector.\r\n       */\n\n    }, {\n      key: 'findFormError',\n      value: function findFormError($el) {\n        var $error = $el.siblings(this.options.formErrorSelector);\n\n        if (!$error.length) {\n          $error = $el.parent().find(this.options.formErrorSelector);\n        }\n\n        return $error;\n      }\n\n      /**\r\n       * Get the first element in this order:\r\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n       * 3. The `.closest()` <label>\r\n       *\r\n       * @param {Object} $el - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */\n\n    }, {\n      key: 'findLabel',\n      value: function findLabel($el) {\n        var id = $el[0].id;\n        var $label = this.$element.find('label[for=\"' + id + '\"]');\n\n        if (!$label.length) {\n          return $el.closest('label');\n        }\n\n        return $label;\n      }\n\n      /**\r\n       * Get the set of labels associated with a set of radio els in this order\r\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n       * 3. The `.closest()` <label>\r\n       *\r\n       * @param {Object} $el - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */\n\n    }, {\n      key: 'findRadioLabels',\n      value: function findRadioLabels($els) {\n        var _this3 = this;\n\n        var labels = $els.map(function (i, el) {\n          var id = el.id;\n          var $label = _this3.$element.find('label[for=\"' + id + '\"]');\n\n          if (!$label.length) {\n            $label = $(el).closest('label');\n          }\n          return $label[0];\n        });\n\n        return $(labels);\n      }\n\n      /**\r\n       * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\r\n       * @param {Object} $el - jQuery object to add the class to\r\n       */\n\n    }, {\n      key: 'addErrorClasses',\n      value: function addErrorClasses($el) {\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.addClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.addClass(this.options.formErrorClass);\n        }\n\n        $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\n      }\n\n      /**\r\n       * Remove CSS error classes etc from an entire radio button group\r\n       * @param {String} groupName - A string that specifies the name of a radio button group\r\n       *\r\n       */\n\n    }, {\n      key: 'removeRadioErrorClasses',\n      value: function removeRadioErrorClasses(groupName) {\n        var $els = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var $labels = this.findRadioLabels($els);\n        var $formErrors = this.findFormError($els);\n\n        if ($labels.length) {\n          $labels.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formErrors.length) {\n          $formErrors.removeClass(this.options.formErrorClass);\n        }\n\n        $els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\r\n       * Removes CSS error class as specified by the Abide settings from the label, input, and the form\r\n       * @param {Object} $el - jQuery object to remove the class from\r\n       */\n\n    }, {\n      key: 'removeErrorClasses',\n      value: function removeErrorClasses($el) {\n        // radios need to clear all of the els\n        if ($el[0].type == 'radio') {\n          return this.removeRadioErrorClasses($el.attr('name'));\n        }\n\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.removeClass(this.options.formErrorClass);\n        }\n\n        $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\r\n       * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\r\n       * @fires Abide#invalid\r\n       * @fires Abide#valid\r\n       * @param {Object} element - jQuery object to validate, should be an HTML input\r\n       * @returns {Boolean} goodToGo - If the input is valid or not.\r\n       */\n\n    }, {\n      key: 'validateInput',\n      value: function validateInput($el) {\n        var clearRequire = this.requiredCheck($el),\n            validated = false,\n            customValidator = true,\n            validator = $el.attr('data-validator'),\n            equalTo = true;\n\n        // don't validate ignored inputs or hidden inputs\n        if ($el.is('[data-abide-ignore]') || $el.is('[type=\"hidden\"]')) {\n          return true;\n        }\n\n        switch ($el[0].type) {\n          case 'radio':\n            validated = this.validateRadio($el.attr('name'));\n            break;\n\n          case 'checkbox':\n            validated = clearRequire;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            validated = clearRequire;\n            break;\n\n          default:\n            validated = this.validateText($el);\n        }\n\n        if (validator) {\n          customValidator = this.matchValidation($el, validator, $el.attr('required'));\n        }\n\n        if ($el.attr('data-equalto')) {\n          equalTo = this.options.validators.equalTo($el);\n        }\n\n        var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\n        var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\n\n        this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\n\n        /**\r\n         * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\r\n         * Trigger includes the DOM element of the input.\r\n         * @event Abide#valid\r\n         * @event Abide#invalid\r\n         */\n        $el.trigger(message, [$el]);\n\n        return goodToGo;\n      }\n\n      /**\r\n       * Goes through a form and if there are any invalid inputs, it will display the form error element\r\n       * @returns {Boolean} noError - true if no errors were detected...\r\n       * @fires Abide#formvalid\r\n       * @fires Abide#forminvalid\r\n       */\n\n    }, {\n      key: 'validateForm',\n      value: function validateForm() {\n        var acc = [];\n        var _this = this;\n\n        this.$inputs.each(function () {\n          acc.push(_this.validateInput($(this)));\n        });\n\n        var noError = acc.indexOf(false) === -1;\n\n        this.$element.find('[data-abide-error]').css('display', noError ? 'none' : 'block');\n\n        /**\r\n         * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\r\n         * Trigger includes the element of the form.\r\n         * @event Abide#formvalid\r\n         * @event Abide#forminvalid\r\n         */\n        this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\n\n        return noError;\n      }\n\n      /**\r\n       * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\r\n       * @param {Object} $el - jQuery object to validate, should be a text input HTML element\r\n       * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\r\n       * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\r\n       */\n\n    }, {\n      key: 'validateText',\n      value: function validateText($el, pattern) {\n        // A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute\n        pattern = pattern || $el.attr('pattern') || $el.attr('type');\n        var inputText = $el.val();\n        var valid = false;\n\n        if (inputText.length) {\n          // If the pattern attribute on the element is in Abide's list of patterns, then test that regexp\n          if (this.options.patterns.hasOwnProperty(pattern)) {\n            valid = this.options.patterns[pattern].test(inputText);\n          }\n          // If the pattern name isn't also the type attribute of the field, then test it as a regexp\n          else if (pattern !== $el.attr('type')) {\n              valid = new RegExp(pattern).test(inputText);\n            } else {\n              valid = true;\n            }\n        }\n        // An empty field is valid if it's not required\n        else if (!$el.prop('required')) {\n            valid = true;\n          }\n\n        return valid;\n      }\n\n      /**\r\n       * Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\r\n       * @param {String} groupName - A string that specifies the name of a radio button group\r\n       * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\r\n       */\n\n    }, {\n      key: 'validateRadio',\n      value: function validateRadio(groupName) {\n        // If at least one radio in the group has the `required` attribute, the group is considered required\n        // Per W3C spec, all radio buttons in a group should have `required`, but we're being nice\n        var $group = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var valid = false,\n            required = false;\n\n        // For the group to be required, at least one radio needs to be required\n        $group.each(function (i, e) {\n          if ($(e).attr('required')) {\n            required = true;\n          }\n        });\n        if (!required) valid = true;\n\n        if (!valid) {\n          // For the group to be valid, at least one radio needs to be checked\n          $group.each(function (i, e) {\n            if ($(e).prop('checked')) {\n              valid = true;\n            }\n          });\n        };\n\n        return valid;\n      }\n\n      /**\r\n       * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\r\n       * @param {Object} $el - jQuery input element.\r\n       * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\r\n       * @param {Boolean} required - self explanatory?\r\n       * @returns {Boolean} - true if validations passed.\r\n       */\n\n    }, {\n      key: 'matchValidation',\n      value: function matchValidation($el, validators, required) {\n        var _this4 = this;\n\n        required = required ? true : false;\n\n        var clear = validators.split(' ').map(function (v) {\n          return _this4.options.validators[v]($el, required, $el.parent());\n        });\n        return clear.indexOf(false) === -1;\n      }\n\n      /**\r\n       * Resets form inputs and styles\r\n       * @fires Abide#formreset\r\n       */\n\n    }, {\n      key: 'resetForm',\n      value: function resetForm() {\n        var $form = this.$element,\n            opts = this.options;\n\n        $('.' + opts.labelErrorClass, $form).not('small').removeClass(opts.labelErrorClass);\n        $('.' + opts.inputErrorClass, $form).not('small').removeClass(opts.inputErrorClass);\n        $(opts.formErrorSelector + '.' + opts.formErrorClass).removeClass(opts.formErrorClass);\n        $form.find('[data-abide-error]').css('display', 'none');\n        $(':input', $form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');\n        $(':input:radio', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        $(':input:checkbox', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        /**\r\n         * Fires when the form has been reset.\r\n         * @event Abide#formreset\r\n         */\n        $form.trigger('formreset.zf.abide', [$form]);\n      }\n\n      /**\r\n       * Destroys an instance of Abide.\r\n       * Removes error styles and classes from elements, without resetting their values.\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var _this = this;\n        this.$element.off('.abide').find('[data-abide-error]').css('display', 'none');\n\n        this.$inputs.off('.abide').each(function () {\n          _this.removeErrorClasses($(this));\n        });\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Abide;\n  }();\n\n  /**\r\n   * Default settings for plugin\r\n   */\n\n\n  Abide.defaults = {\n    /**\r\n     * The default event to validate inputs. Checkboxes and radios validate immediately.\r\n     * Remove or change this value for manual validation.\r\n     * @option\r\n     * @example 'fieldChange'\r\n     */\n    validateOn: 'fieldChange',\n\n    /**\r\n     * Class to be applied to input labels on failed validation.\r\n     * @option\r\n     * @example 'is-invalid-label'\r\n     */\n    labelErrorClass: 'is-invalid-label',\n\n    /**\r\n     * Class to be applied to inputs on failed validation.\r\n     * @option\r\n     * @example 'is-invalid-input'\r\n     */\n    inputErrorClass: 'is-invalid-input',\n\n    /**\r\n     * Class selector to use to target Form Errors for show/hide.\r\n     * @option\r\n     * @example '.form-error'\r\n     */\n    formErrorSelector: '.form-error',\n\n    /**\r\n     * Class added to Form Errors on failed validation.\r\n     * @option\r\n     * @example 'is-visible'\r\n     */\n    formErrorClass: 'is-visible',\n\n    /**\r\n     * Set to true to validate text inputs on any value change.\r\n     * @option\r\n     * @example false\r\n     */\n    liveValidate: false,\n\n    patterns: {\n      alpha: /^[a-zA-Z]+$/,\n      alpha_numeric: /^[a-zA-Z0-9]+$/,\n      integer: /^[-+]?\\d+$/,\n      number: /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\n\n      // amex, visa, diners\n      card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n      cvv: /^([0-9]){3,4}$/,\n\n      // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n      email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\n\n      url: /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\n      // abc.de\n      domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\n\n      datetime: /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\n      // YYYY-MM-DD\n      date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\n      // HH:MM:SS\n      time: /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\n      dateISO: /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\n      // MM/DD/YYYY\n      month_day_year: /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\n      // DD/MM/YYYY\n      day_month_year: /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\n\n      // #FFF or #FFFFFF\n      color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n    },\n\n    /**\r\n     * Optional validation functions to be used. `equalTo` being the only default included function.\r\n     * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\r\n     * el : The jQuery element to validate.\r\n     * required : Boolean value of the required attribute be present or not.\r\n     * parent : The direct parent of the input.\r\n     * @option\r\n     */\n    validators: {\n      equalTo: function (el, required, parent) {\n        return $('#' + el.attr('data-equalto')).val() === el.val();\n      }\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(Abide, 'Abide');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Accordion module.\r\n   * @module foundation.accordion\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   */\n\n  var Accordion = function () {\n    /**\r\n     * Creates a new instance of an accordion.\r\n     * @class\r\n     * @fires Accordion#init\r\n     * @param {jQuery} element - jQuery object to make into an accordion.\r\n     * @param {Object} options - a plain object with settings to override the default options.\r\n     */\n\n    function Accordion(element, options) {\n      _classCallCheck(this, Accordion);\n\n      this.$element = element;\n      this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Accordion');\n      Foundation.Keyboard.register('Accordion', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_DOWN': 'next',\n        'ARROW_UP': 'previous'\n      });\n    }\n\n    /**\r\n     * Initializes the accordion by animating the preset active pane(s).\r\n     * @private\r\n     */\n\n\n    _createClass(Accordion, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.attr('role', 'tablist');\n        this.$tabs = this.$element.children('li, [data-accordion-item]');\n\n        this.$tabs.each(function (idx, el) {\n          var $el = $(el),\n              $content = $el.children('[data-tab-content]'),\n              id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n              linkId = el.id || id + '-label';\n\n          $el.find('a:first').attr({\n            'aria-controls': id,\n            'role': 'tab',\n            'id': linkId,\n            'aria-expanded': false,\n            'aria-selected': false\n          });\n\n          $content.attr({ 'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id });\n        });\n        var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n        if ($initActive.length) {\n          this.down($initActive, true);\n        }\n        this._events();\n      }\n\n      /**\r\n       * Adds event handlers for items within the accordion.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$tabs.each(function () {\n          var $elem = $(this);\n          var $tabContent = $elem.children('[data-tab-content]');\n          if ($tabContent.length) {\n            $elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion', function (e) {\n              e.preventDefault();\n              _this.toggle($tabContent);\n            }).on('keydown.zf.accordion', function (e) {\n              Foundation.Keyboard.handleKey(e, 'Accordion', {\n                toggle: function () {\n                  _this.toggle($tabContent);\n                },\n                next: function () {\n                  var $a = $elem.next().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                previous: function () {\n                  var $a = $elem.prev().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                handled: function () {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n              });\n            });\n          }\n        });\n      }\n\n      /**\r\n       * Toggles the selected content pane's open/close state.\r\n       * @param {jQuery} $target - jQuery object of the pane to toggle (`.accordion-content`).\r\n       * @function\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if ($target.parent().hasClass('is-active')) {\n          this.up($target);\n        } else {\n          this.down($target);\n        }\n      }\n\n      /**\r\n       * Opens the accordion tab defined by `$target`.\r\n       * @param {jQuery} $target - Accordion pane to open (`.accordion-content`).\r\n       * @param {Boolean} firstTime - flag to determine if reflow should happen.\r\n       * @fires Accordion#down\r\n       * @function\r\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target, firstTime) {\n        var _this2 = this;\n\n        $target.attr('aria-hidden', false).parent('[data-tab-content]').addBack().parent().addClass('is-active');\n\n        if (!this.options.multiExpand && !firstTime) {\n          var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\n          if ($currentActive.length) {\n            this.up($currentActive.not($target));\n          }\n        }\n\n        $target.slideDown(this.options.slideSpeed, function () {\n          /**\r\n           * Fires when the tab is done opening.\r\n           * @event Accordion#down\r\n           */\n          _this2.$element.trigger('down.zf.accordion', [$target]);\n        });\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': true,\n          'aria-selected': true\n        });\n      }\n\n      /**\r\n       * Closes the tab defined by `$target`.\r\n       * @param {jQuery} $target - Accordion tab to close (`.accordion-content`).\r\n       * @fires Accordion#up\r\n       * @function\r\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var $aunts = $target.parent().siblings(),\n            _this = this;\n\n        if (!this.options.allowAllClosed && !$aunts.hasClass('is-active') || !$target.parent().hasClass('is-active')) {\n          return;\n        }\n\n        // Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\r\n           * Fires when the tab is done collapsing up.\r\n           * @event Accordion#up\r\n           */\n          _this.$element.trigger('up.zf.accordion', [$target]);\n        });\n        // });\n\n        $target.attr('aria-hidden', true).parent().removeClass('is-active');\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': false,\n          'aria-selected': false\n        });\n      }\n\n      /**\r\n       * Destroys an instance of an accordion.\r\n       * @fires Accordion#destroyed\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\n        this.$element.find('a').off('.zf.accordion');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Accordion;\n  }();\n\n  Accordion.defaults = {\n    /**\r\n     * Amount of time to animate the opening of an accordion pane.\r\n     * @option\r\n     * @example 250\r\n     */\n    slideSpeed: 250,\n    /**\r\n     * Allow the accordion to have multiple open panes.\r\n     * @option\r\n     * @example false\r\n     */\n    multiExpand: false,\n    /**\r\n     * Allow the accordion to close all panes.\r\n     * @option\r\n     * @example false\r\n     */\n    allowAllClosed: false\n  };\n\n  // Window exports\n  Foundation.plugin(Accordion, 'Accordion');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * AccordionMenu module.\r\n   * @module foundation.accordionMenu\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.nest\r\n   */\n\n  var AccordionMenu = function () {\n    /**\r\n     * Creates a new instance of an accordion menu.\r\n     * @class\r\n     * @fires AccordionMenu#init\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function AccordionMenu(element, options) {\n      _classCallCheck(this, AccordionMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'accordion');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'AccordionMenu');\n      Foundation.Keyboard.register('AccordionMenu', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_RIGHT': 'open',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'close',\n        'ESCAPE': 'closeAll'\n      });\n    }\n\n    /**\r\n     * Initializes the accordion menu by hiding all nested menus.\r\n     * @private\r\n     */\n\n\n    _createClass(AccordionMenu, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.find('[data-submenu]').not('.is-active').slideUp(0); //.find('a').css('padding-left', '1rem');\n        this.$element.attr({\n          'role': 'menu',\n          'aria-multiselectable': this.options.multiOpen\n        });\n\n        this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\n        this.$menuLinks.each(function () {\n          var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\n              $elem = $(this),\n              $sub = $elem.children('[data-submenu]'),\n              subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\n              isActive = $sub.hasClass('is-active');\n          $elem.attr({\n            'aria-controls': subId,\n            'aria-expanded': isActive,\n            'role': 'menuitem',\n            'id': linkId\n          });\n          $sub.attr({\n            'aria-labelledby': linkId,\n            'aria-hidden': !isActive,\n            'role': 'menu',\n            'id': subId\n          });\n        });\n        var initPanes = this.$element.find('.is-active');\n        if (initPanes.length) {\n          var _this = this;\n          initPanes.each(function () {\n            _this.down($(this));\n          });\n        }\n        this._events();\n      }\n\n      /**\r\n       * Adds event handlers for items within the menu.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$element.find('li').each(function () {\n          var $submenu = $(this).children('[data-submenu]');\n\n          if ($submenu.length) {\n            $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function (e) {\n              e.preventDefault();\n\n              _this.toggle($submenu);\n            });\n          }\n        }).on('keydown.zf.accordionmenu', function (e) {\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement,\n              $target = $element.children('[data-submenu]');\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1)).find('a').first();\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1)).find('a').first();\n\n              if ($(this).children('[data-submenu]:visible').length) {\n                // has open sub menu\n                $nextElement = $element.find('li:first-child').find('a').first();\n              }\n              if ($(this).is(':first-child')) {\n                // is first element of sub menu\n                $prevElement = $element.parents('li').first().find('a').first();\n              } else if ($prevElement.parents('li').first().children('[data-submenu]:visible').length) {\n                // if previous element has open sub menu\n                $prevElement = $prevElement.parents('li').find('li:last-child').find('a').first();\n              }\n              if ($(this).is(':last-child')) {\n                // is last element of sub menu\n                $nextElement = $element.parents('li').first().next('li').find('a').first();\n              }\n\n              return;\n            }\n          });\n\n          Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\n            open: function () {\n              if ($target.is(':hidden')) {\n                _this.down($target);\n                $target.find('li').first().find('a').first().focus();\n              }\n            },\n            close: function () {\n              if ($target.length && !$target.is(':hidden')) {\n                // close active sub of this item\n                _this.up($target);\n              } else if ($element.parent('[data-submenu]').length) {\n                // close currently open sub\n                _this.up($element.parent('[data-submenu]'));\n                $element.parents('li').first().find('a').first().focus();\n              }\n            },\n            up: function () {\n              $prevElement.focus();\n              return true;\n            },\n            down: function () {\n              $nextElement.focus();\n              return true;\n            },\n            toggle: function () {\n              if ($element.children('[data-submenu]').length) {\n                _this.toggle($element.children('[data-submenu]'));\n              }\n            },\n            closeAll: function () {\n              _this.hideAll();\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n              e.stopImmediatePropagation();\n            }\n          });\n        }); //.attr('tabindex', 0);\n      }\n\n      /**\r\n       * Closes all panes of the menu.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'hideAll',\n      value: function hideAll() {\n        this.$element.find('[data-submenu]').slideUp(this.options.slideSpeed);\n      }\n\n      /**\r\n       * Toggles the open/close state of a submenu.\r\n       * @function\r\n       * @param {jQuery} $target - the submenu to toggle\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if (!$target.is(':animated')) {\n          if (!$target.is(':hidden')) {\n            this.up($target);\n          } else {\n            this.down($target);\n          }\n        }\n      }\n\n      /**\r\n       * Opens the sub-menu defined by `$target`.\r\n       * @param {jQuery} $target - Sub-menu to open.\r\n       * @fires AccordionMenu#down\r\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target) {\n        var _this = this;\n\n        if (!this.options.multiOpen) {\n          this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\n        }\n\n        $target.addClass('is-active').attr({ 'aria-hidden': false }).parent('.is-accordion-submenu-parent').attr({ 'aria-expanded': true });\n\n        //Foundation.Move(this.options.slideSpeed, $target, function() {\n        $target.slideDown(_this.options.slideSpeed, function () {\n          /**\r\n           * Fires when the menu is done opening.\r\n           * @event AccordionMenu#down\r\n           */\n          _this.$element.trigger('down.zf.accordionMenu', [$target]);\n        });\n        //});\n      }\n\n      /**\r\n       * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\r\n       * @param {jQuery} $target - Sub-menu to close.\r\n       * @fires AccordionMenu#up\r\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var _this = this;\n        //Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\r\n           * Fires when the menu is done collapsing up.\r\n           * @event AccordionMenu#up\r\n           */\n          _this.$element.trigger('up.zf.accordionMenu', [$target]);\n        });\n        //});\n\n        var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\n\n        $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\n      }\n\n      /**\r\n       * Destroys an instance of accordion menu.\r\n       * @fires AccordionMenu#destroyed\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-submenu]').slideDown(0).css('display', '');\n        this.$element.find('a').off('click.zf.accordionMenu');\n\n        Foundation.Nest.Burn(this.$element, 'accordion');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return AccordionMenu;\n  }();\n\n  AccordionMenu.defaults = {\n    /**\r\n     * Amount of time to animate the opening of a submenu in ms.\r\n     * @option\r\n     * @example 250\r\n     */\n    slideSpeed: 250,\n    /**\r\n     * Allow the menu to have multiple open panes.\r\n     * @option\r\n     * @example true\r\n     */\n    multiOpen: true\n  };\n\n  // Window exports\n  Foundation.plugin(AccordionMenu, 'AccordionMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Drilldown module.\r\n   * @module foundation.drilldown\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.nest\r\n   */\n\n  var Drilldown = function () {\n    /**\r\n     * Creates a new instance of a drilldown menu.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Drilldown(element, options) {\n      _classCallCheck(this, Drilldown);\n\n      this.$element = element;\n      this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'drilldown');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Drilldown');\n      Foundation.Keyboard.register('Drilldown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close',\n        'TAB': 'down',\n        'SHIFT_TAB': 'up'\n      });\n    }\n\n    /**\r\n     * Initializes the drilldown by creating jQuery collections of elements\r\n     * @private\r\n     */\n\n\n    _createClass(Drilldown, [{\n      key: '_init',\n      value: function _init() {\n        this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent').children('a');\n        this.$submenus = this.$submenuAnchors.parent('li').children('[data-submenu]');\n        this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem').find('a');\n\n        this._prepareMenu();\n\n        this._keyboardEvents();\n      }\n\n      /**\r\n       * prepares drilldown menu by setting attributes to links and elements\r\n       * sets a min height to prevent content jumping\r\n       * wraps the element if not already wrapped\r\n       * @private\r\n       * @function\r\n       */\n\n    }, {\n      key: '_prepareMenu',\n      value: function _prepareMenu() {\n        var _this = this;\n        // if(!this.options.holdOpen){\n        //   this._menuLinkEvents();\n        // }\n        this.$submenuAnchors.each(function () {\n          var $link = $(this);\n          var $sub = $link.parent();\n          if (_this.options.parentLink) {\n            $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\n          }\n          $link.data('savedHref', $link.attr('href')).removeAttr('href').attr('tabindex', 0);\n          $link.children('[data-submenu]').attr({\n            'aria-hidden': true,\n            'tabindex': 0,\n            'role': 'menu'\n          });\n          _this._events($link);\n        });\n        this.$submenus.each(function () {\n          var $menu = $(this),\n              $back = $menu.find('.js-drilldown-back');\n          if (!$back.length) {\n            $menu.prepend(_this.options.backButton);\n          }\n          _this._back($menu);\n        });\n        if (!this.$element.parent().hasClass('is-drilldown')) {\n          this.$wrapper = $(this.options.wrapper).addClass('is-drilldown');\n          this.$wrapper = this.$element.wrap(this.$wrapper).parent().css(this._getMaxDims());\n        }\n      }\n\n      /**\r\n       * Adds event handlers to elements in the menu.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $elem - the current menu item to add handlers to.\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events($elem) {\n        var _this = this;\n\n        $elem.off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          if ($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n\n          // if(e.target !== e.currentTarget.firstElementChild){\n          //   return false;\n          // }\n          _this._show($elem.parent('li'));\n\n          if (_this.options.closeOnClick) {\n            var $body = $('body');\n            $body.off('.zf.drilldown').on('click.zf.drilldown', function (e) {\n              if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n                return;\n              }\n              e.preventDefault();\n              _this._hideAll();\n              $body.off('.zf.drilldown');\n            });\n          }\n        });\n      }\n\n      /**\r\n       * Adds keydown event listener to `li`'s in the menu.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_keyboardEvents',\n      value: function _keyboardEvents() {\n        var _this = this;\n\n        this.$menuItems.add(this.$element.find('.js-drilldown-back > a')).on('keydown.zf.drilldown', function (e) {\n\n          var $element = $(this),\n              $elements = $element.parent('li').parent('ul').children('li').children('a'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1));\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              return;\n            }\n          });\n\n          Foundation.Keyboard.handleKey(e, 'Drilldown', {\n            next: function () {\n              if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element.parent('li'));\n                $element.parent('li').one(Foundation.transitionend($element), function () {\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n                });\n                return true;\n              }\n            },\n            previous: function () {\n              _this._hide($element.parent('li').parent('ul'));\n              $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\n                setTimeout(function () {\n                  $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n                }, 1);\n              });\n              return true;\n            },\n            up: function () {\n              $prevElement.focus();\n              return true;\n            },\n            down: function () {\n              $nextElement.focus();\n              return true;\n            },\n            close: function () {\n              _this._back();\n              //_this.$menuItems.first().focus(); // focus to first element\n            },\n            open: function () {\n              if (!$element.is(_this.$menuItems)) {\n                // not menu item means back button\n                _this._hide($element.parent('li').parent('ul'));\n                $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\n                  setTimeout(function () {\n                    $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n                  }, 1);\n                });\n                return true;\n              } else if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element.parent('li'));\n                $element.parent('li').one(Foundation.transitionend($element), function () {\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n                });\n                return true;\n              }\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n              e.stopImmediatePropagation();\n            }\n          });\n        }); // end keyboardAccess\n      }\n\n      /**\r\n       * Closes all open elements, and returns to root menu.\r\n       * @function\r\n       * @fires Drilldown#closed\r\n       */\n\n    }, {\n      key: '_hideAll',\n      value: function _hideAll() {\n        var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\n        $elem.one(Foundation.transitionend($elem), function (e) {\n          $elem.removeClass('is-active is-closing');\n        });\n        /**\r\n         * Fires when the menu is fully closed.\r\n         * @event Drilldown#closed\r\n         */\n        this.$element.trigger('closed.zf.drilldown');\n      }\n\n      /**\r\n       * Adds event listener for each `back` button, and closes open menus.\r\n       * @function\r\n       * @fires Drilldown#back\r\n       * @param {jQuery} $elem - the current sub-menu to add `back` event.\r\n       */\n\n    }, {\n      key: '_back',\n      value: function _back($elem) {\n        var _this = this;\n        $elem.off('click.zf.drilldown');\n        $elem.children('.js-drilldown-back').on('click.zf.drilldown', function (e) {\n          e.stopImmediatePropagation();\n          // console.log('mouseup on back');\n          _this._hide($elem);\n\n          // If there is a parent submenu, call show\n          var parentSubMenu = $elem.parent('li').parent('ul').parent('li');\n          if (parentSubMenu.length) {\n            _this._show(parentSubMenu);\n          }\n        });\n      }\n\n      /**\r\n       * Adds event listener to menu items w/o submenus to close open menus on click.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_menuLinkEvents',\n      value: function _menuLinkEvents() {\n        var _this = this;\n        this.$menuItems.not('.is-drilldown-submenu-parent').off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          // e.stopImmediatePropagation();\n          setTimeout(function () {\n            _this._hideAll();\n          }, 0);\n        });\n      }\n\n      /**\r\n       * Opens a submenu.\r\n       * @function\r\n       * @fires Drilldown#open\r\n       * @param {jQuery} $elem - the current element with a submenu to open, i.e. the `li` tag.\r\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($elem) {\n        $elem.attr('aria-expanded', true);\n        $elem.children('[data-submenu]').addClass('is-active').attr('aria-hidden', false);\n        /**\r\n         * Fires when the submenu has opened.\r\n         * @event Drilldown#open\r\n         */\n        this.$element.trigger('open.zf.drilldown', [$elem]);\n      }\n    }, {\n      key: '_hide',\n\n\n      /**\r\n       * Hides a submenu\r\n       * @function\r\n       * @fires Drilldown#hide\r\n       * @param {jQuery} $elem - the current sub-menu to hide, i.e. the `ul` tag.\r\n       */\n      value: function _hide($elem) {\n        var _this = this;\n        $elem.parent('li').attr('aria-expanded', false);\n        $elem.attr('aria-hidden', true).addClass('is-closing').one(Foundation.transitionend($elem), function () {\n          $elem.removeClass('is-active is-closing');\n          $elem.blur();\n        });\n        /**\r\n         * Fires when the submenu has closed.\r\n         * @event Drilldown#hide\r\n         */\n        $elem.trigger('hide.zf.drilldown', [$elem]);\n      }\n\n      /**\r\n       * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\r\n       * Prevents content jumping.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_getMaxDims',\n      value: function _getMaxDims() {\n        var biggest = 0;\n        var result = {};\n\n        this.$submenus.add(this.$element).each(function (i, elem) {\n          var height = elem.getBoundingClientRect().height;\n          if (height > biggest) biggest = height;\n        });\n\n        result['min-height'] = biggest + 'px';\n        result['max-width'] = this.$element[0].getBoundingClientRect().width + 'px';\n\n        return result;\n      }\n\n      /**\r\n       * Destroys the Drilldown Menu\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._hideAll();\n        Foundation.Nest.Burn(this.$element, 'drilldown');\n        this.$element.unwrap().find('.js-drilldown-back, .is-submenu-parent-item').remove().end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu').end().find('[data-submenu]').removeAttr('aria-hidden tabindex role');\n        this.$submenuAnchors.each(function () {\n          $(this).off('.zf.drilldown');\n        });\n        this.$element.find('a').each(function () {\n          var $link = $(this);\n          $link.removeAttr('tabindex');\n          if ($link.data('savedHref')) {\n            $link.attr('href', $link.data('savedHref')).removeData('savedHref');\n          } else {\n            return;\n          }\n        });\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Drilldown;\n  }();\n\n  Drilldown.defaults = {\n    /**\r\n     * Markup used for JS generated back button. Prepended to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\r\n     * @option\r\n     * @example '<\\li><\\a>Back<\\/a><\\/li>'\r\n     */\n    backButton: '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>',\n    /**\r\n     * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\r\n     * @option\r\n     * @example '<\\div class=\"is-drilldown\"><\\/div>'\r\n     */\n    wrapper: '<div></div>',\n    /**\r\n     * Adds the parent link to the submenu.\r\n     * @option\r\n     * @example false\r\n     */\n    parentLink: false,\n    /**\r\n     * Allow the menu to return to root list on body click.\r\n     * @option\r\n     * @example false\r\n     */\n    closeOnClick: false\n    // holdOpen: false\n  };\n\n  // Window exports\n  Foundation.plugin(Drilldown, 'Drilldown');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Dropdown module.\r\n   * @module foundation.dropdown\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.triggers\r\n   */\n\n  var Dropdown = function () {\n    /**\r\n     * Creates a new instance of a dropdown.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into a dropdown.\r\n     *        Object should be of the dropdown panel, rather than its anchor.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Dropdown(element, options) {\n      _classCallCheck(this, Dropdown);\n\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Dropdown');\n      Foundation.Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\r\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(Dropdown, [{\n      key: '_init',\n      value: function _init() {\n        var $id = this.$element.attr('id');\n\n        this.$anchor = $('[data-toggle=\"' + $id + '\"]').length ? $('[data-toggle=\"' + $id + '\"]') : $('[data-open=\"' + $id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': $id,\n          'data-is-focus': false,\n          'data-yeti-box': $id,\n          'aria-haspopup': true,\n          'aria-expanded': false\n\n        });\n\n        this.options.positionClass = this.getPositionClass();\n        this.counter = 4;\n        this.usedPositions = [];\n        this.$element.attr({\n          'aria-hidden': 'true',\n          'data-yeti-box': $id,\n          'data-resize': $id,\n          'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n        });\n        this._events();\n      }\n\n      /**\r\n       * Helper function to determine current orientation of dropdown pane.\r\n       * @function\r\n       * @returns {String} position - string value of a position class.\r\n       */\n\n    }, {\n      key: 'getPositionClass',\n      value: function getPositionClass() {\n        var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\n        var horizontalPosition = /float-(\\S+)/.exec(this.$anchor[0].className);\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n        var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n\n        return position;\n      }\n\n      /**\r\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\r\n       * @function\r\n       * @private\r\n       * @param {String} position - position class to remove.\r\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.$element.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.$element.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.$element.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.$element.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.$element.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\r\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\r\n       * Recursively calls itself if a collision is detected, with a new position class.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        if (this.$anchor.attr('aria-expanded') === 'false') {\n          return false;\n        }\n        var position = this.getPositionClass(),\n            $eleDims = Foundation.Box.GetDimensions(this.$element),\n            $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n            _this = this,\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\n\n        if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element)) {\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $eleDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          this.classChanged = true;\n          return false;\n        }\n\n        this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.$element, false, true) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\r\n       * Adds event listeners to the element utilizing the triggers utility library.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': this._setPosition.bind(this)\n        });\n\n        if (this.options.hover) {\n          this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n            if ($('body[data-whatinput=\"mouse\"]').is('*')) {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.open();\n                _this.$anchor.data('hover', true);\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n          if (this.options.hoverPane) {\n            this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n          }\n        }\n        this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n\n          var $target = $(this),\n              visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n          Foundation.Keyboard.handleKey(e, 'Dropdown', {\n            tab_forward: function () {\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) {\n                // left modal downwards, setting focus to first element\n                if (_this.options.trapFocus) {\n                  // if focus shall be trapped\n                  visibleFocusableElements.eq(0).focus();\n                  e.preventDefault();\n                } else {\n                  // if focus is not trapped, close dropdown on focus out\n                  _this.close();\n                }\n              }\n            },\n            tab_backward: function () {\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) {\n                // left modal upwards, setting focus to last element\n                if (_this.options.trapFocus) {\n                  // if focus shall be trapped\n                  visibleFocusableElements.eq(-1).focus();\n                  e.preventDefault();\n                } else {\n                  // if focus is not trapped, close dropdown on focus out\n                  _this.close();\n                }\n              }\n            },\n            open: function () {\n              if ($target.is(_this.$anchor)) {\n                _this.open();\n                _this.$element.attr('tabindex', -1).focus();\n                e.preventDefault();\n              }\n            },\n            close: function () {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          });\n        });\n      }\n\n      /**\r\n       * Adds an event handler to the body to close any dropdowns on a click.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body).not(this.$element),\n            _this = this;\n        $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n          if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n            return;\n          }\n          if (_this.$element.find(e.target).length) {\n            return;\n          }\n          _this.close();\n          $body.off('click.zf.dropdown');\n        });\n      }\n\n      /**\r\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\r\n       * @function\r\n       * @fires Dropdown#closeme\r\n       * @fires Dropdown#show\r\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        // var _this = this;\n        /**\r\n         * Fires to close other open dropdowns\r\n         * @event Dropdown#closeme\r\n         */\n        this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n        this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\n        // this.$element/*.show()*/;\n        this._setPosition();\n        this.$element.addClass('is-open').attr({ 'aria-hidden': false });\n\n        if (this.options.autoFocus) {\n          var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n          if ($focusable.length) {\n            $focusable.eq(0).focus();\n          }\n        }\n\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n\n        /**\r\n         * Fires once the dropdown is visible.\r\n         * @event Dropdown#show\r\n         */\n        this.$element.trigger('show.zf.dropdown', [this.$element]);\n      }\n\n      /**\r\n       * Closes the open dropdown pane.\r\n       * @function\r\n       * @fires Dropdown#hide\r\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.$element.hasClass('is-open')) {\n          return false;\n        }\n        this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\n\n        this.$anchor.removeClass('hover').attr('aria-expanded', false);\n\n        if (this.classChanged) {\n          var curPositionClass = this.getPositionClass();\n          if (curPositionClass) {\n            this.$element.removeClass(curPositionClass);\n          }\n          this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({ height: '', width: '' });\n          this.classChanged = false;\n          this.counter = 4;\n          this.usedPositions.length = 0;\n        }\n        this.$element.trigger('hide.zf.dropdown', [this.$element]);\n      }\n\n      /**\r\n       * Toggles the dropdown pane's visibility.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.$element.hasClass('is-open')) {\n          if (this.$anchor.data('hover')) return;\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n\n      /**\r\n       * Destroys the dropdown.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger').hide();\n        this.$anchor.off('.zf.dropdown');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Dropdown;\n  }();\n\n  Dropdown.defaults = {\n    /**\r\n     * Amount of time to delay opening a submenu on hover event.\r\n     * @option\r\n     * @example 250\r\n     */\n    hoverDelay: 250,\n    /**\r\n     * Allow submenus to open on hover events\r\n     * @option\r\n     * @example false\r\n     */\n    hover: false,\n    /**\r\n     * Don't close dropdown when hovering over dropdown pane\r\n     * @option\r\n     * @example true\r\n     */\n    hoverPane: false,\n    /**\r\n     * Number of pixels between the dropdown pane and the triggering element on open.\r\n     * @option\r\n     * @example 1\r\n     */\n    vOffset: 1,\n    /**\r\n     * Number of pixels between the dropdown pane and the triggering element on open.\r\n     * @option\r\n     * @example 1\r\n     */\n    hOffset: 1,\n    /**\r\n     * Class applied to adjust open position. JS will test and fill this in.\r\n     * @option\r\n     * @example 'top'\r\n     */\n    positionClass: '',\n    /**\r\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\r\n     * @option\r\n     * @example false\r\n     */\n    trapFocus: false,\n    /**\r\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\r\n     * @option\r\n     * @example true\r\n     */\n    autoFocus: false,\n    /**\r\n     * Allows a click on the body to close the dropdown.\r\n     * @option\r\n     * @example false\r\n     */\n    closeOnClick: false\n  };\n\n  // Window exports\n  Foundation.plugin(Dropdown, 'Dropdown');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * DropdownMenu module.\r\n   * @module foundation.dropdown-menu\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.nest\r\n   */\n\n  var DropdownMenu = function () {\n    /**\r\n     * Creates a new instance of DropdownMenu.\r\n     * @class\r\n     * @fires DropdownMenu#init\r\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function DropdownMenu(element, options) {\n      _classCallCheck(this, DropdownMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'dropdown');\n      this._init();\n\n      Foundation.registerPlugin(this, 'DropdownMenu');\n      Foundation.Keyboard.register('DropdownMenu', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\r\n     * Initializes the plugin, and calls _prepareMenu\r\n     * @private\r\n     * @function\r\n     */\n\n\n    _createClass(DropdownMenu, [{\n      key: '_init',\n      value: function _init() {\n        var subs = this.$element.find('li.is-dropdown-submenu-parent');\n        this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n        this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n        this.$tabs = this.$element.children('[role=\"menuitem\"]');\n        this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n        if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\n          this.options.alignment = 'right';\n          subs.addClass('opens-left');\n        } else {\n          subs.addClass('opens-right');\n        }\n        this.changed = false;\n        this._events();\n      }\n    }, {\n      key: '_isVertical',\n      value: function _isVertical() {\n        return this.$tabs.css('display') === 'block';\n      }\n\n      /**\r\n       * Adds event listeners to elements within the menu\r\n       * @private\r\n       * @function\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this,\n            hasTouch = 'ontouchstart' in window || typeof window.ontouchstart !== 'undefined',\n            parClass = 'is-dropdown-submenu-parent';\n\n        // used for onClick and in the keyboard handlers\n        var handleClickFn = function (e) {\n          var $elem = $(e.target).parentsUntil('ul', '.' + parClass),\n              hasSub = $elem.hasClass(parClass),\n              hasClicked = $elem.attr('data-is-click') === 'true',\n              $sub = $elem.children('.is-dropdown-submenu');\n\n          if (hasSub) {\n            if (hasClicked) {\n              if (!_this.options.closeOnClick || !_this.options.clickOpen && !hasTouch || _this.options.forceFollow && hasTouch) {\n                return;\n              } else {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n                _this._hide($elem);\n              }\n            } else {\n              e.preventDefault();\n              e.stopImmediatePropagation();\n              _this._show($sub);\n              $elem.add($elem.parentsUntil(_this.$element, '.' + parClass)).attr('data-is-click', true);\n            }\n          } else {\n            if (_this.options.closeOnClickInside) {\n              _this._hide($elem);\n            }\n            return;\n          }\n        };\n\n        if (this.options.clickOpen || hasTouch) {\n          this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\n        }\n\n        if (!this.options.disableHover) {\n          this.$menuItems.on('mouseenter.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n\n            if (hasSub) {\n              clearTimeout(_this.delay);\n              _this.delay = setTimeout(function () {\n                _this._show($elem.children('.is-dropdown-submenu'));\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n            if (hasSub && _this.options.autoclose) {\n              if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) {\n                return false;\n              }\n\n              clearTimeout(_this.delay);\n              _this.delay = setTimeout(function () {\n                _this._hide($elem);\n              }, _this.options.closingTime);\n            }\n          });\n        }\n        this.$menuItems.on('keydown.zf.dropdownmenu', function (e) {\n          var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n              isTab = _this.$tabs.index($element) > -1,\n              $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(i - 1);\n              $nextElement = $elements.eq(i + 1);\n              return;\n            }\n          });\n\n          var nextSibling = function () {\n            if (!$element.is(':last-child')) {\n              $nextElement.children('a:first').focus();\n              e.preventDefault();\n            }\n          },\n              prevSibling = function () {\n            $prevElement.children('a:first').focus();\n            e.preventDefault();\n          },\n              openSub = function () {\n            var $sub = $element.children('ul.is-dropdown-submenu');\n            if ($sub.length) {\n              _this._show($sub);\n              $element.find('li > a:first').focus();\n              e.preventDefault();\n            } else {\n              return;\n            }\n          },\n              closeSub = function () {\n            //if ($element.is(':first-child')) {\n            var close = $element.parent('ul').parent('li');\n            close.children('a:first').focus();\n            _this._hide(close);\n            e.preventDefault();\n            //}\n          };\n          var functions = {\n            open: openSub,\n            close: function () {\n              _this._hide(_this.$element);\n              _this.$menuItems.find('a:first').focus(); // focus to first element\n              e.preventDefault();\n            },\n            handled: function () {\n              e.stopImmediatePropagation();\n            }\n          };\n\n          if (isTab) {\n            if (_this._isVertical()) {\n              // vertical menu\n              if (Foundation.rtl()) {\n                // right aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: closeSub,\n                  previous: openSub\n                });\n              } else {\n                // left aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: openSub,\n                  previous: closeSub\n                });\n              }\n            } else {\n              // horizontal menu\n              if (Foundation.rtl()) {\n                // right aligned\n                $.extend(functions, {\n                  next: prevSibling,\n                  previous: nextSibling,\n                  down: openSub,\n                  up: closeSub\n                });\n              } else {\n                // left aligned\n                $.extend(functions, {\n                  next: nextSibling,\n                  previous: prevSibling,\n                  down: openSub,\n                  up: closeSub\n                });\n              }\n            }\n          } else {\n            // not tabs -> one sub\n            if (Foundation.rtl()) {\n              // right aligned\n              $.extend(functions, {\n                next: closeSub,\n                previous: openSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            } else {\n              // left aligned\n              $.extend(functions, {\n                next: openSub,\n                previous: closeSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            }\n          }\n          Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n        });\n      }\n\n      /**\r\n       * Adds an event handler to the body to close any dropdowns on a click.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body),\n            _this = this;\n        $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\n          var $link = _this.$element.find(e.target);\n          if ($link.length) {\n            return;\n          }\n\n          _this._hide();\n          $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n        });\n      }\n\n      /**\r\n       * Opens a dropdown pane, and checks for collisions first.\r\n       * @param {jQuery} $sub - ul element that is a submenu to show\r\n       * @function\r\n       * @private\r\n       * @fires DropdownMenu#show\r\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($sub) {\n        var idx = this.$tabs.index(this.$tabs.filter(function (i, el) {\n          return $(el).find($sub).length > 0;\n        }));\n        var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n        this._hide($sibs, idx);\n        $sub.css('visibility', 'hidden').addClass('js-dropdown-active').attr({ 'aria-hidden': false }).parent('li.is-dropdown-submenu-parent').addClass('is-active').attr({ 'aria-expanded': true });\n        var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n        if (!clear) {\n          var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n              $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n          $parentLi.removeClass('opens' + oldClass).addClass('opens-' + this.options.alignment);\n          clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n          if (!clear) {\n            $parentLi.removeClass('opens-' + this.options.alignment).addClass('opens-inner');\n          }\n          this.changed = true;\n        }\n        $sub.css('visibility', '');\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n        /**\r\n         * Fires when the new dropdown pane is visible.\r\n         * @event DropdownMenu#show\r\n         */\n        this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n      }\n\n      /**\r\n       * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\r\n       * @function\r\n       * @param {jQuery} $elem - element with a submenu to hide\r\n       * @param {Number} idx - index of the $tabs collection to hide\r\n       * @private\r\n       */\n\n    }, {\n      key: '_hide',\n      value: function _hide($elem, idx) {\n        var $toClose;\n        if ($elem && $elem.length) {\n          $toClose = $elem;\n        } else if (idx !== undefined) {\n          $toClose = this.$tabs.not(function (i, el) {\n            return i === idx;\n          });\n        } else {\n          $toClose = this.$element;\n        }\n        var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n        if (somethingToClose) {\n          $toClose.find('li.is-active').add($toClose).attr({\n            'aria-expanded': false,\n            'data-is-click': false\n          }).removeClass('is-active');\n\n          $toClose.find('ul.js-dropdown-active').attr({\n            'aria-hidden': true\n          }).removeClass('js-dropdown-active');\n\n          if (this.changed || $toClose.find('opens-inner').length) {\n            var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n            $toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-' + this.options.alignment).addClass('opens-' + oldClass);\n            this.changed = false;\n          }\n          /**\r\n           * Fires when the open menus are closed.\r\n           * @event DropdownMenu#hide\r\n           */\n          this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n        }\n      }\n\n      /**\r\n       * Destroys the plugin.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n        $(document.body).off('.zf.dropdownmenu');\n        Foundation.Nest.Burn(this.$element, 'dropdown');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return DropdownMenu;\n  }();\n\n  /**\r\n   * Default settings for plugin\r\n   */\n\n\n  DropdownMenu.defaults = {\n    /**\r\n     * Disallows hover events from opening submenus\r\n     * @option\r\n     * @example false\r\n     */\n    disableHover: false,\n    /**\r\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\r\n     * @option\r\n     * @example true\r\n     */\n    autoclose: true,\n    /**\r\n     * Amount of time to delay opening a submenu on hover event.\r\n     * @option\r\n     * @example 50\r\n     */\n    hoverDelay: 50,\n    /**\r\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\r\n     * @option\r\n     * @example true\r\n     */\n    clickOpen: false,\n    /**\r\n     * Amount of time to delay closing a submenu on a mouseleave event.\r\n     * @option\r\n     * @example 500\r\n     */\n\n    closingTime: 500,\n    /**\r\n     * Position of the menu relative to what direction the submenus should open. Handled by JS.\r\n     * @option\r\n     * @example 'left'\r\n     */\n    alignment: 'left',\n    /**\r\n     * Allow clicks on the body to close any open submenus.\r\n     * @option\r\n     * @example true\r\n     */\n    closeOnClick: true,\n    /**\r\n     * Allow clicks on leaf anchor links to close any open submenus.\r\n     * @option\r\n     * @example true\r\n     */\n    closeOnClickInside: true,\n    /**\r\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\r\n     * @option\r\n     * @example 'vertical'\r\n     */\n    verticalClass: 'vertical',\n    /**\r\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\r\n     * @option\r\n     * @example 'align-right'\r\n     */\n    rightClass: 'align-right',\n    /**\r\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\r\n     * @option\r\n     * @example false\r\n     */\n    forceFollow: true\n  };\n\n  // Window exports\n  Foundation.plugin(DropdownMenu, 'DropdownMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Equalizer module.\r\n   * @module foundation.equalizer\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.timerAndImageLoader if equalizer contains images\r\n   */\n\n  var Equalizer = function () {\n    /**\r\n     * Creates a new instance of Equalizer.\r\n     * @class\r\n     * @fires Equalizer#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Equalizer(element, options) {\n      _classCallCheck(this, Equalizer);\n\n      this.$element = element;\n      this.options = $.extend({}, Equalizer.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Equalizer');\n    }\n\n    /**\r\n     * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\r\n     * @private\r\n     */\n\n\n    _createClass(Equalizer, [{\n      key: '_init',\n      value: function _init() {\n        var eqId = this.$element.attr('data-equalizer') || '';\n        var $watched = this.$element.find('[data-equalizer-watch=\"' + eqId + '\"]');\n\n        this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\n        this.$element.attr('data-resize', eqId || Foundation.GetYoDigits(6, 'eq'));\n\n        this.hasNested = this.$element.find('[data-equalizer]').length > 0;\n        this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\n        this.isOn = false;\n        this._bindHandler = {\n          onResizeMeBound: this._onResizeMe.bind(this),\n          onPostEqualizedBound: this._onPostEqualized.bind(this)\n        };\n\n        var imgs = this.$element.find('img');\n        var tooSmall;\n        if (this.options.equalizeOn) {\n          tooSmall = this._checkMQ();\n          $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\n        } else {\n          this._events();\n        }\n        if (tooSmall !== undefined && tooSmall === false || tooSmall === undefined) {\n          if (imgs.length) {\n            Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\n          } else {\n            this._reflow();\n          }\n        }\n      }\n\n      /**\r\n       * Removes event listeners if the breakpoint is too small.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_pauseEvents',\n      value: function _pauseEvents() {\n        this.isOn = false;\n        this.$element.off({\n          '.zf.equalizer': this._bindHandler.onPostEqualizedBound,\n          'resizeme.zf.trigger': this._bindHandler.onResizeMeBound\n        });\n      }\n\n      /**\r\n       * function to handle $elements resizeme.zf.trigger, with bound this on _bindHandler.onResizeMeBound\r\n       * @private\r\n       */\n\n    }, {\n      key: '_onResizeMe',\n      value: function _onResizeMe(e) {\n        this._reflow();\n      }\n\n      /**\r\n       * function to handle $elements postequalized.zf.equalizer, with bound this on _bindHandler.onPostEqualizedBound\r\n       * @private\r\n       */\n\n    }, {\n      key: '_onPostEqualized',\n      value: function _onPostEqualized(e) {\n        if (e.target !== this.$element[0]) {\n          this._reflow();\n        }\n      }\n\n      /**\r\n       * Initializes events for Equalizer.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this._pauseEvents();\n        if (this.hasNested) {\n          this.$element.on('postequalized.zf.equalizer', this._bindHandler.onPostEqualizedBound);\n        } else {\n          this.$element.on('resizeme.zf.trigger', this._bindHandler.onResizeMeBound);\n        }\n        this.isOn = true;\n      }\n\n      /**\r\n       * Checks the current breakpoint to the minimum required size.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_checkMQ',\n      value: function _checkMQ() {\n        var tooSmall = !Foundation.MediaQuery.atLeast(this.options.equalizeOn);\n        if (tooSmall) {\n          if (this.isOn) {\n            this._pauseEvents();\n            this.$watched.css('height', 'auto');\n          }\n        } else {\n          if (!this.isOn) {\n            this._events();\n          }\n        }\n        return tooSmall;\n      }\n\n      /**\r\n       * A noop version for the plugin\r\n       * @private\r\n       */\n\n    }, {\n      key: '_killswitch',\n      value: function _killswitch() {\n        return;\n      }\n\n      /**\r\n       * Calls necessary functions to update Equalizer upon DOM change\r\n       * @private\r\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        if (!this.options.equalizeOnStack) {\n          if (this._isStacked()) {\n            this.$watched.css('height', 'auto');\n            return false;\n          }\n        }\n        if (this.options.equalizeByRow) {\n          this.getHeightsByRow(this.applyHeightByRow.bind(this));\n        } else {\n          this.getHeights(this.applyHeight.bind(this));\n        }\n      }\n\n      /**\r\n       * Manually determines if the first 2 elements are *NOT* stacked.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_isStacked',\n      value: function _isStacked() {\n        return this.$watched[0].getBoundingClientRect().top !== this.$watched[1].getBoundingClientRect().top;\n      }\n\n      /**\r\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n       * @param {Function} cb - A non-optional callback to return the heights array to.\r\n       * @returns {Array} heights - An array of heights of children within Equalizer container\r\n       */\n\n    }, {\n      key: 'getHeights',\n      value: function getHeights(cb) {\n        var heights = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          heights.push(this.$watched[i].offsetHeight);\n        }\n        cb(heights);\n      }\n\n      /**\r\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n       * @param {Function} cb - A non-optional callback to return the heights array to.\r\n       * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n       */\n\n    }, {\n      key: 'getHeightsByRow',\n      value: function getHeightsByRow(cb) {\n        var lastElTopOffset = this.$watched.length ? this.$watched.first().offset().top : 0,\n            groups = [],\n            group = 0;\n        //group by Row\n        groups[group] = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          //maybe could use this.$watched[i].offsetTop\n          var elOffsetTop = $(this.$watched[i]).offset().top;\n          if (elOffsetTop != lastElTopOffset) {\n            group++;\n            groups[group] = [];\n            lastElTopOffset = elOffsetTop;\n          }\n          groups[group].push([this.$watched[i], this.$watched[i].offsetHeight]);\n        }\n\n        for (var j = 0, ln = groups.length; j < ln; j++) {\n          var heights = $(groups[j]).map(function () {\n            return this[1];\n          }).get();\n          var max = Math.max.apply(null, heights);\n          groups[j].push(max);\n        }\n        cb(groups);\n      }\n\n      /**\r\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest\r\n       * @param {array} heights - An array of heights of children within Equalizer container\r\n       * @fires Equalizer#preequalized\r\n       * @fires Equalizer#postequalized\r\n       */\n\n    }, {\n      key: 'applyHeight',\n      value: function applyHeight(heights) {\n        var max = Math.max.apply(null, heights);\n        /**\r\n         * Fires before the heights are applied\r\n         * @event Equalizer#preequalized\r\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n\n        this.$watched.css('height', max);\n\n        /**\r\n         * Fires when the heights have been applied\r\n         * @event Equalizer#postequalized\r\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\r\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\r\n       * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n       * @fires Equalizer#preequalized\r\n       * @fires Equalizer#preequalizedRow\r\n       * @fires Equalizer#postequalizedRow\r\n       * @fires Equalizer#postequalized\r\n       */\n\n    }, {\n      key: 'applyHeightByRow',\n      value: function applyHeightByRow(groups) {\n        /**\r\n         * Fires before the heights are applied\r\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n        for (var i = 0, len = groups.length; i < len; i++) {\n          var groupsILength = groups[i].length,\n              max = groups[i][groupsILength - 1];\n          if (groupsILength <= 2) {\n            $(groups[i][0][0]).css({ 'height': 'auto' });\n            continue;\n          }\n          /**\r\n            * Fires before the heights per row are applied\r\n            * @event Equalizer#preequalizedRow\r\n            */\n          this.$element.trigger('preequalizedrow.zf.equalizer');\n          for (var j = 0, lenJ = groupsILength - 1; j < lenJ; j++) {\n            $(groups[i][j][0]).css({ 'height': max });\n          }\n          /**\r\n            * Fires when the heights per row have been applied\r\n            * @event Equalizer#postequalizedRow\r\n            */\n          this.$element.trigger('postequalizedrow.zf.equalizer');\n        }\n        /**\r\n         * Fires when the heights have been applied\r\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\r\n       * Destroys an instance of Equalizer.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._pauseEvents();\n        this.$watched.css('height', 'auto');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Equalizer;\n  }();\n\n  /**\r\n   * Default settings for plugin\r\n   */\n\n\n  Equalizer.defaults = {\n    /**\r\n     * Enable height equalization when stacked on smaller screens.\r\n     * @option\r\n     * @example true\r\n     */\n    equalizeOnStack: false,\n    /**\r\n     * Enable height equalization row by row.\r\n     * @option\r\n     * @example false\r\n     */\n    equalizeByRow: false,\n    /**\r\n     * String representing the minimum breakpoint size the plugin should equalize heights on.\r\n     * @option\r\n     * @example 'medium'\r\n     */\n    equalizeOn: ''\n  };\n\n  // Window exports\n  Foundation.plugin(Equalizer, 'Equalizer');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Interchange module.\r\n   * @module foundation.interchange\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.timerAndImageLoader\r\n   */\n\n  var Interchange = function () {\n    /**\r\n     * Creates a new instance of Interchange.\r\n     * @class\r\n     * @fires Interchange#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Interchange(element, options) {\n      _classCallCheck(this, Interchange);\n\n      this.$element = element;\n      this.options = $.extend({}, Interchange.defaults, options);\n      this.rules = [];\n      this.currentPath = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Interchange');\n    }\n\n    /**\r\n     * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(Interchange, [{\n      key: '_init',\n      value: function _init() {\n        this._addBreakpoints();\n        this._generateRules();\n        this._reflow();\n      }\n\n      /**\r\n       * Initializes events for Interchange.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        $(window).on('resize.zf.interchange', Foundation.util.throttle(this._reflow.bind(this), 50));\n      }\n\n      /**\r\n       * Calls necessary functions to update Interchange upon DOM change\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        var match;\n\n        // Iterate through each rule, but only save the last match\n        for (var i in this.rules) {\n          if (this.rules.hasOwnProperty(i)) {\n            var rule = this.rules[i];\n\n            if (window.matchMedia(rule.query).matches) {\n              match = rule;\n            }\n          }\n        }\n\n        if (match) {\n          this.replace(match.path);\n        }\n      }\n\n      /**\r\n       * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_addBreakpoints',\n      value: function _addBreakpoints() {\n        for (var i in Foundation.MediaQuery.queries) {\n          if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\n            var query = Foundation.MediaQuery.queries[i];\n            Interchange.SPECIAL_QUERIES[query.name] = query.value;\n          }\n        }\n      }\n\n      /**\r\n       * Checks the Interchange element for the provided media query + content pairings\r\n       * @function\r\n       * @private\r\n       * @param {Object} element - jQuery object that is an Interchange instance\r\n       * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\r\n       */\n\n    }, {\n      key: '_generateRules',\n      value: function _generateRules(element) {\n        var rulesList = [];\n        var rules;\n\n        if (this.options.rules) {\n          rules = this.options.rules;\n        } else {\n          rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\n        }\n\n        for (var i in rules) {\n          if (rules.hasOwnProperty(i)) {\n            var rule = rules[i].slice(1, -1).split(', ');\n            var path = rule.slice(0, -1).join('');\n            var query = rule[rule.length - 1];\n\n            if (Interchange.SPECIAL_QUERIES[query]) {\n              query = Interchange.SPECIAL_QUERIES[query];\n            }\n\n            rulesList.push({\n              path: path,\n              query: query\n            });\n          }\n        }\n\n        this.rules = rulesList;\n      }\n\n      /**\r\n       * Update the `src` property of an image, or change the HTML of a container, to the specified path.\r\n       * @function\r\n       * @param {String} path - Path to the image or HTML partial.\r\n       * @fires Interchange#replaced\r\n       */\n\n    }, {\n      key: 'replace',\n      value: function replace(path) {\n        if (this.currentPath === path) return;\n\n        var _this = this,\n            trigger = 'replaced.zf.interchange';\n\n        // Replacing images\n        if (this.$element[0].nodeName === 'IMG') {\n          this.$element.attr('src', path).on('load', function () {\n            _this.currentPath = path;\n          }).trigger(trigger);\n        }\n        // Replacing background images\n        else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\n            this.$element.css({ 'background-image': 'url(' + path + ')' }).trigger(trigger);\n          }\n          // Replacing HTML\n          else {\n              $.get(path, function (response) {\n                _this.$element.html(response).trigger(trigger);\n                $(response).foundation();\n                _this.currentPath = path;\n              });\n            }\n\n        /**\r\n         * Fires when content in an Interchange element is done being loaded.\r\n         * @event Interchange#replaced\r\n         */\n        // this.$element.trigger('replaced.zf.interchange');\n      }\n\n      /**\r\n       * Destroys an instance of interchange.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        //TODO this.\n      }\n    }]);\n\n    return Interchange;\n  }();\n\n  /**\r\n   * Default settings for plugin\r\n   */\n\n\n  Interchange.defaults = {\n    /**\r\n     * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\r\n     * @option\r\n     */\n    rules: null\n  };\n\n  Interchange.SPECIAL_QUERIES = {\n    'landscape': 'screen and (orientation: landscape)',\n    'portrait': 'screen and (orientation: portrait)',\n    'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\n  };\n\n  // Window exports\n  Foundation.plugin(Interchange, 'Interchange');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Magellan module.\r\n   * @module foundation.magellan\r\n   */\n\n  var Magellan = function () {\n    /**\r\n     * Creates a new instance of Magellan.\r\n     * @class\r\n     * @fires Magellan#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Magellan(element, options) {\n      _classCallCheck(this, Magellan);\n\n      this.$element = element;\n      this.options = $.extend({}, Magellan.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Magellan');\n    }\n\n    /**\r\n     * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\r\n     * @private\r\n     */\n\n\n    _createClass(Magellan, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\n        var _this = this;\n        this.$targets = $('[data-magellan-target]');\n        this.$links = this.$element.find('a');\n        this.$element.attr({\n          'data-resize': id,\n          'data-scroll': id,\n          'id': id\n        });\n        this.$active = $();\n        this.scrollPos = parseInt(window.pageYOffset, 10);\n\n        this._events();\n      }\n\n      /**\r\n       * Calculates an array of pixel values that are the demarcation lines between locations on the page.\r\n       * Can be invoked if new elements are added or the size of a location changes.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'calcPoints',\n      value: function calcPoints() {\n        var _this = this,\n            body = document.body,\n            html = document.documentElement;\n\n        this.points = [];\n        this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\n        this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\n\n        this.$targets.each(function () {\n          var $tar = $(this),\n              pt = Math.round($tar.offset().top - _this.options.threshold);\n          $tar.targetPoint = pt;\n          _this.points.push(pt);\n        });\n      }\n\n      /**\r\n       * Initializes events for Magellan.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this,\n            $body = $('html, body'),\n            opts = {\n          duration: _this.options.animationDuration,\n          easing: _this.options.animationEasing\n        };\n        $(window).one('load', function () {\n          if (_this.options.deepLinking) {\n            if (location.hash) {\n              _this.scrollToLoc(location.hash);\n            }\n          }\n          _this.calcPoints();\n          _this._updateActive();\n        });\n\n        this.$element.on({\n          'resizeme.zf.trigger': this.reflow.bind(this),\n          'scrollme.zf.trigger': this._updateActive.bind(this)\n        }).on('click.zf.magellan', 'a[href^=\"#\"]', function (e) {\n          e.preventDefault();\n          var arrival = this.getAttribute('href');\n          _this.scrollToLoc(arrival);\n        });\n      }\n\n      /**\r\n       * Function to scroll to a given location on the page.\r\n       * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\r\n       * @function\r\n       */\n\n    }, {\n      key: 'scrollToLoc',\n      value: function scrollToLoc(loc) {\n        // Do nothing if target does not exist to prevent errors\n        if (!$(loc).length) {\n          return false;\n        }\n        var scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\n\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing);\n      }\n\n      /**\r\n       * Calls necessary functions to update Magellan upon DOM change\r\n       * @function\r\n       */\n\n    }, {\n      key: 'reflow',\n      value: function reflow() {\n        this.calcPoints();\n        this._updateActive();\n      }\n\n      /**\r\n       * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\r\n       * @private\r\n       * @function\r\n       * @fires Magellan#update\r\n       */\n\n    }, {\n      key: '_updateActive',\n      value: function _updateActive() /*evt, elem, scrollPos*/{\n        var winPos = /*scrollPos ||*/parseInt(window.pageYOffset, 10),\n            curIdx;\n\n        if (winPos + this.winHeight === this.docHeight) {\n          curIdx = this.points.length - 1;\n        } else if (winPos < this.points[0]) {\n          curIdx = 0;\n        } else {\n          var isDown = this.scrollPos < winPos,\n              _this = this,\n              curVisible = this.points.filter(function (p, i) {\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\n          });\n          curIdx = curVisible.length ? curVisible.length - 1 : 0;\n        }\n\n        this.$active.removeClass(this.options.activeClass);\n        this.$active = this.$links.filter('[href=\"#' + this.$targets.eq(curIdx).data('magellan-target') + '\"]').addClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.scrollPos = winPos;\n        /**\r\n         * Fires when magellan is finished updating to the new active element.\r\n         * @event Magellan#update\r\n         */\n        this.$element.trigger('update.zf.magellan', [this.$active]);\n      }\n\n      /**\r\n       * Destroys an instance of Magellan and resets the url of the window.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger .zf.magellan').find('.' + this.options.activeClass).removeClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          window.location.hash.replace(hash, '');\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Magellan;\n  }();\n\n  /**\r\n   * Default settings for plugin\r\n   */\n\n\n  Magellan.defaults = {\n    /**\r\n     * Amount of time, in ms, the animated scrolling should take between locations.\r\n     * @option\r\n     * @example 500\r\n     */\n    animationDuration: 500,\n    /**\r\n     * Animation style to use when scrolling between locations.\r\n     * @option\r\n     * @example 'ease-in-out'\r\n     */\n    animationEasing: 'linear',\n    /**\r\n     * Number of pixels to use as a marker for location changes.\r\n     * @option\r\n     * @example 50\r\n     */\n    threshold: 50,\n    /**\r\n     * Class applied to the active locations link on the magellan container.\r\n     * @option\r\n     * @example 'active'\r\n     */\n    activeClass: 'active',\n    /**\r\n     * Allows the script to manipulate the url of the current page, and if supported, alter the history.\r\n     * @option\r\n     * @example true\r\n     */\n    deepLinking: false,\n    /**\r\n     * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\r\n     * @option\r\n     * @example 25\r\n     */\n    barOffset: 0\n  };\n\n  // Window exports\n  Foundation.plugin(Magellan, 'Magellan');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * OffCanvas module.\r\n   * @module foundation.offcanvas\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.motion\r\n   */\n\n  var OffCanvas = function () {\n    /**\r\n     * Creates a new instance of an off-canvas wrapper.\r\n     * @class\r\n     * @fires OffCanvas#init\r\n     * @param {Object} element - jQuery object to initialize.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function OffCanvas(element, options) {\n      _classCallCheck(this, OffCanvas);\n\n      this.$element = element;\n      this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n      this.$lastTrigger = $();\n      this.$triggers = $();\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'OffCanvas');\n      Foundation.Keyboard.register('OffCanvas', {\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\r\n     * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(OffCanvas, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element.attr('id');\n\n        this.$element.attr('aria-hidden', 'true');\n\n        // Find triggers that affect this element and add aria-expanded to them\n        this.$triggers = $(document).find('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-expanded', 'false').attr('aria-controls', id);\n\n        // Add a close trigger over the body if necessary\n        if (this.options.closeOnClick) {\n          if ($('.js-off-canvas-exit').length) {\n            this.$exiter = $('.js-off-canvas-exit');\n          } else {\n            var exiter = document.createElement('div');\n            exiter.setAttribute('class', 'js-off-canvas-exit');\n            $('[data-off-canvas-content]').append(exiter);\n\n            this.$exiter = $(exiter);\n          }\n        }\n\n        this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n        if (this.options.isRevealed) {\n          this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n          this._setMQChecker();\n        }\n        if (!this.options.transitionTime) {\n          this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration) * 1000;\n        }\n      }\n\n      /**\r\n       * Adds event handlers to the off-canvas wrapper and the exit overlay.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('.zf.trigger .zf.offcanvas').on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n        });\n\n        if (this.options.closeOnClick && this.$exiter.length) {\n          this.$exiter.on({ 'click.zf.offcanvas': this.close.bind(this) });\n        }\n      }\n\n      /**\r\n       * Applies event listener for elements that will reveal at certain breakpoints.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setMQChecker',\n      value: function _setMQChecker() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          } else {\n            _this.reveal(false);\n          }\n        }).one('load.zf.offcanvas', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          }\n        });\n      }\n\n      /**\r\n       * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\r\n       * @param {Boolean} isRevealed - true if element should be revealed.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'reveal',\n      value: function reveal(isRevealed) {\n        var $closer = this.$element.find('[data-close]');\n        if (isRevealed) {\n          this.close();\n          this.isRevealed = true;\n          // if (!this.options.forceTop) {\n          //   var scrollPos = parseInt(window.pageYOffset);\n          //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n          // }\n          // if (this.options.isSticky) { this._stick(); }\n          this.$element.off('open.zf.trigger toggle.zf.trigger');\n          if ($closer.length) {\n            $closer.hide();\n          }\n        } else {\n          this.isRevealed = false;\n          // if (this.options.isSticky || !this.options.forceTop) {\n          //   this.$element[0].style.transform = '';\n          //   $(window).off('scroll.zf.offcanvas');\n          // }\n          this.$element.on({\n            'open.zf.trigger': this.open.bind(this),\n            'toggle.zf.trigger': this.toggle.bind(this)\n          });\n          if ($closer.length) {\n            $closer.show();\n          }\n        }\n      }\n\n      /**\r\n       * Opens the off-canvas menu.\r\n       * @function\r\n       * @param {Object} event - Event object passed from listener.\r\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n       * @fires OffCanvas#opened\r\n       */\n\n    }, {\n      key: 'open',\n      value: function open(event, trigger) {\n        if (this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n        var _this = this,\n            $body = $(document.body);\n\n        if (this.options.forceTop) {\n          $('body').scrollTop(0);\n        }\n        // window.pageYOffset = 0;\n\n        // if (!this.options.forceTop) {\n        //   var scrollPos = parseInt(window.pageYOffset);\n        //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n        //   if (this.$exiter.length) {\n        //     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n        //   }\n        // }\n        /**\r\n         * Fires when the off-canvas menu opens.\r\n         * @event OffCanvas#opened\r\n         */\n\n        var $wrapper = $('[data-off-canvas-wrapper]');\n        $wrapper.addClass('is-off-canvas-open is-open-' + _this.options.position);\n\n        _this.$element.addClass('is-open');\n\n        // if (_this.options.isSticky) {\n        //   _this._stick();\n        // }\n\n        this.$triggers.attr('aria-expanded', 'true');\n        this.$element.attr('aria-hidden', 'false').trigger('opened.zf.offcanvas');\n\n        if (this.options.closeOnClick) {\n          this.$exiter.addClass('is-visible');\n        }\n\n        if (trigger) {\n          this.$lastTrigger = trigger;\n        }\n\n        if (this.options.autoFocus) {\n          $wrapper.one(Foundation.transitionend($wrapper), function () {\n            if (_this.$element.hasClass('is-open')) {\n              // handle double clicks\n              _this.$element.attr('tabindex', '-1');\n              _this.$element.focus();\n            }\n          });\n        }\n\n        if (this.options.trapFocus) {\n          $wrapper.one(Foundation.transitionend($wrapper), function () {\n            if (_this.$element.hasClass('is-open')) {\n              // handle double clicks\n              _this.$element.attr('tabindex', '-1');\n              _this.trapFocus();\n            }\n          });\n        }\n      }\n\n      /**\r\n       * Traps focus within the offcanvas on open.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_trapFocus',\n      value: function _trapFocus() {\n        var focusable = Foundation.Keyboard.findFocusable(this.$element),\n            first = focusable.eq(0),\n            last = focusable.eq(-1);\n\n        focusable.off('.zf.offcanvas').on('keydown.zf.offcanvas', function (e) {\n          var key = Foundation.Keyboard.parseKey(e);\n          if (key === 'TAB' && e.target === last[0]) {\n            e.preventDefault();\n            first.focus();\n          }\n          if (key === 'SHIFT_TAB' && e.target === first[0]) {\n            e.preventDefault();\n            last.focus();\n          }\n        });\n      }\n\n      /**\r\n       * Allows the offcanvas to appear sticky utilizing translate properties.\r\n       * @private\r\n       */\n      // OffCanvas.prototype._stick = function() {\n      //   var elStyle = this.$element[0].style;\n      //\n      //   if (this.options.closeOnClick) {\n      //     var exitStyle = this.$exiter[0].style;\n      //   }\n      //\n      //   $(window).on('scroll.zf.offcanvas', function(e) {\n      //     console.log(e);\n      //     var pageY = window.pageYOffset;\n      //     elStyle.transform = 'translate(0,' + pageY + 'px)';\n      //     if (exitStyle !== undefined) { exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\n      //   });\n      //   // this.$element.trigger('stuck.zf.offcanvas');\n      // };\n      /**\r\n       * Closes the off-canvas menu.\r\n       * @function\r\n       * @param {Function} cb - optional cb to fire after closure.\r\n       * @fires OffCanvas#closed\r\n       */\n\n    }, {\n      key: 'close',\n      value: function close(cb) {\n        if (!this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n\n        var _this = this;\n\n        //  Foundation.Move(this.options.transitionTime, this.$element, function() {\n        $('[data-off-canvas-wrapper]').removeClass('is-off-canvas-open is-open-' + _this.options.position);\n        _this.$element.removeClass('is-open');\n        // Foundation._reflow();\n        // });\n        this.$element.attr('aria-hidden', 'true')\n        /**\r\n         * Fires when the off-canvas menu opens.\r\n         * @event OffCanvas#closed\r\n         */\n        .trigger('closed.zf.offcanvas');\n        // if (_this.options.isSticky || !_this.options.forceTop) {\n        //   setTimeout(function() {\n        //     _this.$element[0].style.transform = '';\n        //     $(window).off('scroll.zf.offcanvas');\n        //   }, this.options.transitionTime);\n        // }\n        if (this.options.closeOnClick) {\n          this.$exiter.removeClass('is-visible');\n        }\n\n        this.$triggers.attr('aria-expanded', 'false');\n        if (this.options.trapFocus) {\n          $('[data-off-canvas-content]').removeAttr('tabindex');\n        }\n      }\n\n      /**\r\n       * Toggles the off-canvas menu open or closed.\r\n       * @function\r\n       * @param {Object} event - Event object passed from listener.\r\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle(event, trigger) {\n        if (this.$element.hasClass('is-open')) {\n          this.close(event, trigger);\n        } else {\n          this.open(event, trigger);\n        }\n      }\n\n      /**\r\n       * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_handleKeyboard',\n      value: function _handleKeyboard(e) {\n        var _this2 = this;\n\n        Foundation.Keyboard.handleKey(e, 'OffCanvas', {\n          close: function () {\n            _this2.close();\n            _this2.$lastTrigger.focus();\n            return true;\n          },\n          handled: function () {\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        });\n      }\n\n      /**\r\n       * Destroys the offcanvas plugin.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.close();\n        this.$element.off('.zf.trigger .zf.offcanvas');\n        this.$exiter.off('.zf.offcanvas');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return OffCanvas;\n  }();\n\n  OffCanvas.defaults = {\n    /**\r\n     * Allow the user to click outside of the menu to close it.\r\n     * @option\r\n     * @example true\r\n     */\n    closeOnClick: true,\n\n    /**\r\n     * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\r\n     * @option\r\n     * @example 500\r\n     */\n    transitionTime: 0,\n\n    /**\r\n     * Direction the offcanvas opens from. Determines class applied to body.\r\n     * @option\r\n     * @example left\r\n     */\n    position: 'left',\n\n    /**\r\n     * Force the page to scroll to top on open.\r\n     * @option\r\n     * @example true\r\n     */\n    forceTop: true,\n\n    /**\r\n     * Allow the offcanvas to remain open for certain breakpoints.\r\n     * @option\r\n     * @example false\r\n     */\n    isRevealed: false,\n\n    /**\r\n     * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\r\n     * @option\r\n     * @example reveal-for-large\r\n     */\n    revealOn: null,\n\n    /**\r\n     * Force focus to the offcanvas on open. If true, will focus the opening trigger on close. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\r\n     * @option\r\n     * @example true\r\n     */\n    autoFocus: true,\n\n    /**\r\n     * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\r\n     * @option\r\n     * TODO improve the regex testing for this.\r\n     * @example reveal-for-large\r\n     */\n    revealClass: 'reveal-for-',\n\n    /**\r\n     * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\r\n     * @option\r\n     * @example true\r\n     */\n    trapFocus: false\n  };\n\n  // Window exports\n  Foundation.plugin(OffCanvas, 'OffCanvas');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Orbit module.\r\n   * @module foundation.orbit\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.timerAndImageLoader\r\n   * @requires foundation.util.touch\r\n   */\n\n  var Orbit = function () {\n    /**\r\n    * Creates a new instance of an orbit carousel.\r\n    * @class\r\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\r\n    * @param {Object} options - Overrides to the default plugin settings.\r\n    */\n\n    function Orbit(element, options) {\n      _classCallCheck(this, Orbit);\n\n      this.$element = element;\n      this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Orbit');\n      Foundation.Keyboard.register('Orbit', {\n        'ltr': {\n          'ARROW_RIGHT': 'next',\n          'ARROW_LEFT': 'previous'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'next',\n          'ARROW_RIGHT': 'previous'\n        }\n      });\n    }\n\n    /**\r\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\r\n    * @function\r\n    * @private\r\n    */\n\n\n    _createClass(Orbit, [{\n      key: '_init',\n      value: function _init() {\n        this.$wrapper = this.$element.find('.' + this.options.containerClass);\n        this.$slides = this.$element.find('.' + this.options.slideClass);\n        var $images = this.$element.find('img'),\n            initActive = this.$slides.filter('.is-active');\n\n        if (!initActive.length) {\n          this.$slides.eq(0).addClass('is-active');\n        }\n\n        if (!this.options.useMUI) {\n          this.$slides.addClass('no-motionui');\n        }\n\n        if ($images.length) {\n          Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n        } else {\n          this._prepareForOrbit(); //hehe\n        }\n\n        if (this.options.bullets) {\n          this._loadBullets();\n        }\n\n        this._events();\n\n        if (this.options.autoPlay && this.$slides.length > 1) {\n          this.geoSync();\n        }\n\n        if (this.options.accessible) {\n          // allow wrapper to be focusable to enable arrow navigation\n          this.$wrapper.attr('tabindex', 0);\n        }\n      }\n\n      /**\r\n      * Creates a jQuery collection of bullets, if they are being used.\r\n      * @function\r\n      * @private\r\n      */\n\n    }, {\n      key: '_loadBullets',\n      value: function _loadBullets() {\n        this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n      }\n\n      /**\r\n      * Sets a `timer` object on the orbit, and starts the counter for the next slide.\r\n      * @function\r\n      */\n\n    }, {\n      key: 'geoSync',\n      value: function geoSync() {\n        var _this = this;\n        this.timer = new Foundation.Timer(this.$element, {\n          duration: this.options.timerDelay,\n          infinite: false\n        }, function () {\n          _this.changeSlide(true);\n        });\n        this.timer.start();\n      }\n\n      /**\r\n      * Sets wrapper and slide heights for the orbit.\r\n      * @function\r\n      * @private\r\n      */\n\n    }, {\n      key: '_prepareForOrbit',\n      value: function _prepareForOrbit() {\n        var _this = this;\n        this._setWrapperHeight(function (max) {\n          _this._setSlideHeight(max);\n        });\n      }\n\n      /**\r\n      * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\r\n      * @function\r\n      * @private\r\n      * @param {Function} cb - a callback function to fire when complete.\r\n      */\n\n    }, {\n      key: '_setWrapperHeight',\n      value: function _setWrapperHeight(cb) {\n        //rewrite this to `for` loop\n        var max = 0,\n            temp,\n            counter = 0;\n\n        this.$slides.each(function () {\n          temp = this.getBoundingClientRect().height;\n          $(this).attr('data-slide', counter);\n\n          if (counter) {\n            //if not the first slide, set css position and display property\n            $(this).css({ 'position': 'relative', 'display': 'none' });\n          }\n          max = temp > max ? temp : max;\n          counter++;\n        });\n\n        if (counter === this.$slides.length) {\n          this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\n          cb(max); //fire callback with max height dimension.\n        }\n      }\n\n      /**\r\n      * Sets the max-height of each slide.\r\n      * @function\r\n      * @private\r\n      */\n\n    }, {\n      key: '_setSlideHeight',\n      value: function _setSlideHeight(height) {\n        this.$slides.each(function () {\n          $(this).css('max-height', height);\n        });\n      }\n\n      /**\r\n      * Adds event listeners to basically everything within the element.\r\n      * @function\r\n      * @private\r\n      */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        //***************************************\n        //**Now using custom event - thanks to:**\n        //**      Yohai Ararat of Toronto      **\n        //***************************************\n        if (this.$slides.length > 1) {\n\n          if (this.options.swipe) {\n            this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(true);\n            }).on('swiperight.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(false);\n            });\n          }\n          //***************************************\n\n          if (this.options.autoPlay) {\n            this.$slides.on('click.zf.orbit', function () {\n              _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n              _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n            });\n\n            if (this.options.pauseOnHover) {\n              this.$element.on('mouseenter.zf.orbit', function () {\n                _this.timer.pause();\n              }).on('mouseleave.zf.orbit', function () {\n                if (!_this.$element.data('clickedOn')) {\n                  _this.timer.start();\n                }\n              });\n            }\n          }\n\n          if (this.options.navButtons) {\n            var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n            $controls.attr('tabindex', 0)\n            //also need to handle enter/return and spacebar key presses\n            .on('click.zf.orbit touchend.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide($(this).hasClass(_this.options.nextClass));\n            });\n          }\n\n          if (this.options.bullets) {\n            this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\n              if (/is-active/g.test(this.className)) {\n                return false;\n              } //if this is active, kick out of function.\n              var idx = $(this).data('slide'),\n                  ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n                  $slide = _this.$slides.eq(idx);\n\n              _this.changeSlide(ltr, $slide, idx);\n            });\n          }\n\n          if (this.options.accessible) {\n            this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\n              // handle keyboard event with keyboard util\n              Foundation.Keyboard.handleKey(e, 'Orbit', {\n                next: function () {\n                  _this.changeSlide(true);\n                },\n                previous: function () {\n                  _this.changeSlide(false);\n                },\n                handled: function () {\n                  // if bullet is focused, make sure focus moves\n                  if ($(e.target).is(_this.$bullets)) {\n                    _this.$bullets.filter('.is-active').focus();\n                  }\n                }\n              });\n            });\n          }\n        }\n      }\n\n      /**\r\n      * Changes the current slide to a new one.\r\n      * @function\r\n      * @param {Boolean} isLTR - flag if the slide should move left to right.\r\n      * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\r\n      * @param {Number} idx - the index of the new slide in its collection, if one chosen.\r\n      * @fires Orbit#slidechange\r\n      */\n\n    }, {\n      key: 'changeSlide',\n      value: function changeSlide(isLTR, chosenSlide, idx) {\n        var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n        if (/mui/g.test($curSlide[0].className)) {\n          return false;\n        } //if the slide is currently animating, kick out of the function\n\n        var $firstSlide = this.$slides.first(),\n            $lastSlide = this.$slides.last(),\n            dirIn = isLTR ? 'Right' : 'Left',\n            dirOut = isLTR ? 'Left' : 'Right',\n            _this = this,\n            $newSlide;\n\n        if (!chosenSlide) {\n          //most of the time, this will be auto played or clicked from the navButtons.\n          $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n          this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\n          this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\n        } else {\n            $newSlide = chosenSlide;\n          }\n\n        if ($newSlide.length) {\n          /**\r\n          * Triggers before the next slide starts animating in and only if a next slide has been found.\r\n          * @event Orbit#beforeslidechange\r\n          */\n          this.$element.trigger('beforeslidechange.zf.orbit', [$curSlide, $newSlide]);\n\n          if (this.options.bullets) {\n            idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n            this._updateBullets(idx);\n          }\n\n          if (this.options.useMUI) {\n            Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\n              $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\n            });\n\n            Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\n              $curSlide.removeAttr('aria-live');\n              if (_this.options.autoPlay && !_this.timer.isPaused) {\n                _this.timer.restart();\n              }\n              //do stuff?\n            });\n          } else {\n              $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n              $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n              if (this.options.autoPlay && !this.timer.isPaused) {\n                this.timer.restart();\n              }\n            }\n          /**\r\n          * Triggers when the slide has finished animating in.\r\n          * @event Orbit#slidechange\r\n          */\n          this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n        }\n      }\n\n      /**\r\n      * Updates the active state of the bullets, if displayed.\r\n      * @function\r\n      * @private\r\n      * @param {Number} idx - the index of the current slide.\r\n      */\n\n    }, {\n      key: '_updateBullets',\n      value: function _updateBullets(idx) {\n        var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\n            span = $oldBullet.find('span:last').detach(),\n            $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n      }\n\n      /**\r\n      * Destroys the carousel and hides the element.\r\n      * @function\r\n      */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Orbit;\n  }();\n\n  Orbit.defaults = {\n    /**\r\n    * Tells the JS to look for and loadBullets.\r\n    * @option\r\n    * @example true\r\n    */\n    bullets: true,\n    /**\r\n    * Tells the JS to apply event listeners to nav buttons\r\n    * @option\r\n    * @example true\r\n    */\n    navButtons: true,\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-in-right'\r\n    */\n    animInFromRight: 'slide-in-right',\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-out-right'\r\n    */\n    animOutToRight: 'slide-out-right',\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-in-left'\r\n    *\r\n    */\n    animInFromLeft: 'slide-in-left',\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-out-left'\r\n    */\n    animOutToLeft: 'slide-out-left',\n    /**\r\n    * Allows Orbit to automatically animate on page load.\r\n    * @option\r\n    * @example true\r\n    */\n    autoPlay: true,\n    /**\r\n    * Amount of time, in ms, between slide transitions\r\n    * @option\r\n    * @example 5000\r\n    */\n    timerDelay: 5000,\n    /**\r\n    * Allows Orbit to infinitely loop through the slides\r\n    * @option\r\n    * @example true\r\n    */\n    infiniteWrap: true,\n    /**\r\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\r\n    * @option\r\n    * @example true\r\n    */\n    swipe: true,\n    /**\r\n    * Allows the timing function to pause animation on hover.\r\n    * @option\r\n    * @example true\r\n    */\n    pauseOnHover: true,\n    /**\r\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\r\n    * @option\r\n    * @example true\r\n    */\n    accessible: true,\n    /**\r\n    * Class applied to the container of Orbit\r\n    * @option\r\n    * @example 'orbit-container'\r\n    */\n    containerClass: 'orbit-container',\n    /**\r\n    * Class applied to individual slides.\r\n    * @option\r\n    * @example 'orbit-slide'\r\n    */\n    slideClass: 'orbit-slide',\n    /**\r\n    * Class applied to the bullet container. You're welcome.\r\n    * @option\r\n    * @example 'orbit-bullets'\r\n    */\n    boxOfBullets: 'orbit-bullets',\n    /**\r\n    * Class applied to the `next` navigation button.\r\n    * @option\r\n    * @example 'orbit-next'\r\n    */\n    nextClass: 'orbit-next',\n    /**\r\n    * Class applied to the `previous` navigation button.\r\n    * @option\r\n    * @example 'orbit-previous'\r\n    */\n    prevClass: 'orbit-previous',\n    /**\r\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\r\n    * @option\r\n    * @example true\r\n    */\n    useMUI: true\n  };\n\n  // Window exports\n  Foundation.plugin(Orbit, 'Orbit');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * ResponsiveMenu module.\r\n   * @module foundation.responsiveMenu\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.accordionMenu\r\n   * @requires foundation.util.drilldown\r\n   * @requires foundation.util.dropdown-menu\r\n   */\n\n  var ResponsiveMenu = function () {\n    /**\r\n     * Creates a new instance of a responsive menu.\r\n     * @class\r\n     * @fires ResponsiveMenu#init\r\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function ResponsiveMenu(element, options) {\n      _classCallCheck(this, ResponsiveMenu);\n\n      this.$element = $(element);\n      this.rules = this.$element.data('responsive-menu');\n      this.currentMq = null;\n      this.currentPlugin = null;\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveMenu');\n    }\n\n    /**\r\n     * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(ResponsiveMenu, [{\n      key: '_init',\n      value: function _init() {\n        // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n        if (typeof this.rules === 'string') {\n          var rulesTree = {};\n\n          // Parse rules from \"classes\" pulled from data attribute\n          var rules = this.rules.split(' ');\n\n          // Iterate through every rule found\n          for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i].split('-');\n            var ruleSize = rule.length > 1 ? rule[0] : 'small';\n            var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n            if (MenuPlugins[rulePlugin] !== null) {\n              rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n            }\n          }\n\n          this.rules = rulesTree;\n        }\n\n        if (!$.isEmptyObject(this.rules)) {\n          this._checkMediaQueries();\n        }\n      }\n\n      /**\r\n       * Initializes events for the Menu.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          _this._checkMediaQueries();\n        });\n        // $(window).on('resize.zf.ResponsiveMenu', function() {\n        //   _this._checkMediaQueries();\n        // });\n      }\n\n      /**\r\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function _checkMediaQueries() {\n        var matchedMq,\n            _this = this;\n        // Iterate through each rule and find the last matching rule\n        $.each(this.rules, function (key) {\n          if (Foundation.MediaQuery.atLeast(key)) {\n            matchedMq = key;\n          }\n        });\n\n        // No match? No dice\n        if (!matchedMq) return;\n\n        // Plugin already initialized? We good\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n        // Remove existing plugin-specific CSS classes\n        $.each(MenuPlugins, function (key, value) {\n          _this.$element.removeClass(value.cssClass);\n        });\n\n        // Add the CSS class for the new plugin\n        this.$element.addClass(this.rules[matchedMq].cssClass);\n\n        // Create an instance of the new plugin\n        if (this.currentPlugin) this.currentPlugin.destroy();\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n      }\n\n      /**\r\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.currentPlugin.destroy();\n        $(window).off('.zf.ResponsiveMenu');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveMenu;\n  }();\n\n  ResponsiveMenu.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    dropdown: {\n      cssClass: 'dropdown',\n      plugin: Foundation._plugins['dropdown-menu'] || null\n    },\n    drilldown: {\n      cssClass: 'drilldown',\n      plugin: Foundation._plugins['drilldown'] || null\n    },\n    accordion: {\n      cssClass: 'accordion-menu',\n      plugin: Foundation._plugins['accordion-menu'] || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * ResponsiveToggle module.\r\n   * @module foundation.responsiveToggle\r\n   * @requires foundation.util.mediaQuery\r\n   */\n\n  var ResponsiveToggle = function () {\n    /**\r\n     * Creates a new instance of Tab Bar.\r\n     * @class\r\n     * @fires ResponsiveToggle#init\r\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function ResponsiveToggle(element, options) {\n      _classCallCheck(this, ResponsiveToggle);\n\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\n    }\n\n    /**\r\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(ResponsiveToggle, [{\n      key: '_init',\n      value: function _init() {\n        var targetID = this.$element.data('responsive-toggle');\n        if (!targetID) {\n          console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n        }\n\n        this.$targetMenu = $('#' + targetID);\n        this.$toggler = this.$element.find('[data-toggle]');\n\n        this._update();\n      }\n\n      /**\r\n       * Adds necessary event handlers for the tab bar to work.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this._updateMqHandler = this._update.bind(this);\n\n        $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n        this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n      }\n\n      /**\r\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_update',\n      value: function _update() {\n        // Mobile\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$element.show();\n          this.$targetMenu.hide();\n        }\n\n        // Desktop\n        else {\n            this.$element.hide();\n            this.$targetMenu.show();\n          }\n      }\n\n      /**\r\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\r\n       * @function\r\n       * @fires ResponsiveToggle#toggled\r\n       */\n\n    }, {\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$targetMenu.toggle(0);\n\n          /**\r\n           * Fires when the element attached to the tab bar toggles.\r\n           * @event ResponsiveToggle#toggled\r\n           */\n          this.$element.trigger('toggled.zf.responsiveToggle');\n        }\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.responsiveToggle');\n        this.$toggler.off('.zf.responsiveToggle');\n\n        $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveToggle;\n  }();\n\n  ResponsiveToggle.defaults = {\n    /**\r\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\r\n     * @option\r\n     * @example 'medium'\r\n     */\n    hideFor: 'medium'\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Reveal module.\r\n   * @module foundation.reveal\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.motion if using animations\r\n   */\n\n  var Reveal = function () {\n    /**\r\n     * Creates a new instance of Reveal.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to use for the modal.\r\n     * @param {Object} options - optional parameters.\r\n     */\n\n    function Reveal(element, options) {\n      _classCallCheck(this, Reveal);\n\n      this.$element = element;\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Reveal');\n      Foundation.Keyboard.register('Reveal', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\r\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\r\n     * @private\r\n     */\n\n\n    _createClass(Reveal, [{\n      key: '_init',\n      value: function _init() {\n        this.id = this.$element.attr('id');\n        this.isActive = false;\n        this.cached = { mq: Foundation.MediaQuery.current };\n        this.isMobile = mobileSniff();\n\n        this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': this.id,\n          'aria-haspopup': true,\n          'tabindex': 0\n        });\n\n        if (this.options.fullScreen || this.$element.hasClass('full')) {\n          this.options.fullScreen = true;\n          this.options.overlay = false;\n        }\n        if (this.options.overlay && !this.$overlay) {\n          this.$overlay = this._makeOverlay(this.id);\n        }\n\n        this.$element.attr({\n          'role': 'dialog',\n          'aria-hidden': true,\n          'data-yeti-box': this.id,\n          'data-resize': this.id\n        });\n\n        if (this.$overlay) {\n          this.$element.detach().appendTo(this.$overlay);\n        } else {\n          this.$element.detach().appendTo($('body'));\n          this.$element.addClass('without-overlay');\n        }\n        this._events();\n        if (this.options.deepLink && window.location.hash === '#' + this.id) {\n          $(window).one('load.zf.reveal', this.open.bind(this));\n        }\n      }\n\n      /**\r\n       * Creates an overlay div to display behind the modal.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_makeOverlay',\n      value: function _makeOverlay(id) {\n        var $overlay = $('<div></div>').addClass('reveal-overlay').appendTo('body');\n        return $overlay;\n      }\n\n      /**\r\n       * Updates position of modal\r\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\r\n       * @private\r\n       */\n\n    }, {\n      key: '_updatePosition',\n      value: function _updatePosition() {\n        var width = this.$element.outerWidth();\n        var outerWidth = $(window).width();\n        var height = this.$element.outerHeight();\n        var outerHeight = $(window).height();\n        var left, top;\n        if (this.options.hOffset === 'auto') {\n          left = parseInt((outerWidth - width) / 2, 10);\n        } else {\n          left = parseInt(this.options.hOffset, 10);\n        }\n        if (this.options.vOffset === 'auto') {\n          if (height > outerHeight) {\n            top = parseInt(Math.min(100, outerHeight / 10), 10);\n          } else {\n            top = parseInt((outerHeight - height) / 4, 10);\n          }\n        } else {\n          top = parseInt(this.options.vOffset, 10);\n        }\n        this.$element.css({ top: top + 'px' });\n        // only worry about left if we don't have an overlay or we havea  horizontal offset,\n        // otherwise we're perfectly in the middle\n        if (!this.$overlay || this.options.hOffset !== 'auto') {\n          this.$element.css({ left: left + 'px' });\n          this.$element.css({ margin: '0px' });\n        }\n      }\n\n      /**\r\n       * Adds event handlers for the modal.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        var _this = this;\n\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': function (event, $element) {\n            if (event.target === _this.$element[0] || $(event.target).parents('[data-closable]')[0] === $element) {\n              // only close reveal when it's explicitly called\n              return _this2.close.apply(_this2);\n            }\n          },\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': function () {\n            _this._updatePosition();\n          }\n        });\n\n        if (this.$anchor.length) {\n          this.$anchor.on('keydown.zf.reveal', function (e) {\n            if (e.which === 13 || e.which === 32) {\n              e.stopPropagation();\n              e.preventDefault();\n              _this.open();\n            }\n          });\n        }\n\n        if (this.options.closeOnClick && this.options.overlay) {\n          this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n        if (this.options.deepLink) {\n          $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n        }\n      }\n\n      /**\r\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_handleState',\n      value: function _handleState(e) {\n        if (window.location.hash === '#' + this.id && !this.isActive) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      /**\r\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\r\n       * @function\r\n       * @fires Reveal#closeme\r\n       * @fires Reveal#open\r\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        var _this3 = this;\n\n        if (this.options.deepLink) {\n          var hash = '#' + this.id;\n\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.isActive = true;\n\n        // Make elements invisible, but remove display: none so we can get size and positioning\n        this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\n        if (this.options.overlay) {\n          this.$overlay.css({ 'visibility': 'hidden' }).show();\n        }\n\n        this._updatePosition();\n\n        this.$element.hide().css({ 'visibility': '' });\n\n        if (this.$overlay) {\n          this.$overlay.css({ 'visibility': '' }).hide();\n          if (this.$element.hasClass('fast')) {\n            this.$overlay.addClass('fast');\n          } else if (this.$element.hasClass('slow')) {\n            this.$overlay.addClass('slow');\n          }\n        }\n\n        if (!this.options.multipleOpened) {\n          /**\r\n           * Fires immediately before the modal opens.\r\n           * Closes any other modals that are currently open\r\n           * @event Reveal#closeme\r\n           */\n          this.$element.trigger('closeme.zf.reveal', this.id);\n        }\n        // Motion UI method of reveal\n        if (this.options.animationIn) {\n          var _this;\n\n          (function () {\n            var afterAnimationFocus = function () {\n              _this.$element.attr({\n                'aria-hidden': false,\n                'tabindex': -1\n              }).focus();\n            };\n\n            _this = _this3;\n\n            if (_this3.options.overlay) {\n              Foundation.Motion.animateIn(_this3.$overlay, 'fade-in');\n            }\n            Foundation.Motion.animateIn(_this3.$element, _this3.options.animationIn, function () {\n              _this3.focusableElements = Foundation.Keyboard.findFocusable(_this3.$element);\n              afterAnimationFocus();\n            });\n          })();\n        }\n        // jQuery method of reveal\n        else {\n            if (this.options.overlay) {\n              this.$overlay.show(0);\n            }\n            this.$element.show(this.options.showDelay);\n          }\n\n        // handle accessibility\n        this.$element.attr({\n          'aria-hidden': false,\n          'tabindex': -1\n        }).focus();\n\n        /**\r\n         * Fires when the modal has successfully opened.\r\n         * @event Reveal#open\r\n         */\n        this.$element.trigger('open.zf.reveal');\n\n        if (this.isMobile) {\n          this.originalScrollPos = window.pageYOffset;\n          $('html, body').addClass('is-reveal-open');\n        } else {\n          $('body').addClass('is-reveal-open');\n        }\n\n        setTimeout(function () {\n          _this3._extraHandlers();\n        }, 0);\n      }\n\n      /**\r\n       * Adds extra event handlers for the body and window if necessary.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_extraHandlers',\n      value: function _extraHandlers() {\n        var _this = this;\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n        if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n          $('body').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n\n        if (this.options.closeOnEsc) {\n          $(window).on('keydown.zf.reveal', function (e) {\n            Foundation.Keyboard.handleKey(e, 'Reveal', {\n              close: function () {\n                if (_this.options.closeOnEsc) {\n                  _this.close();\n                  _this.$anchor.focus();\n                }\n              }\n            });\n          });\n        }\n\n        // lock focus within modal while tabbing\n        this.$element.on('keydown.zf.reveal', function (e) {\n          var $target = $(this);\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Reveal', {\n            tab_forward: function () {\n              _this.focusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) {\n                // left modal downwards, setting focus to first element\n                _this.focusableElements.eq(0).focus();\n                return true;\n              }\n              if (_this.focusableElements.length === 0) {\n                // no focusable elements inside the modal at all, prevent tabbing in general\n                return true;\n              }\n            },\n            tab_backward: function () {\n              _this.focusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) {\n                // left modal upwards, setting focus to last element\n                _this.focusableElements.eq(-1).focus();\n                return true;\n              }\n              if (_this.focusableElements.length === 0) {\n                // no focusable elements inside the modal at all, prevent tabbing in general\n                return true;\n              }\n            },\n            open: function () {\n              if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n                setTimeout(function () {\n                  // set focus back to anchor if close button has been activated\n                  _this.$anchor.focus();\n                }, 1);\n              } else if ($target.is(_this.focusableElements)) {\n                // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n                _this.open();\n              }\n            },\n            close: function () {\n              if (_this.options.closeOnEsc) {\n                _this.close();\n                _this.$anchor.focus();\n              }\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n            }\n          });\n        });\n      }\n\n      /**\r\n       * Closes the modal.\r\n       * @function\r\n       * @fires Reveal#closed\r\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.isActive || !this.$element.is(':visible')) {\n          return false;\n        }\n        var _this = this;\n\n        // Motion UI method of hiding\n        if (this.options.animationOut) {\n          if (this.options.overlay) {\n            Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n          } else {\n            finishUp();\n          }\n\n          Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n        }\n        // jQuery method of hiding\n        else {\n            if (this.options.overlay) {\n              this.$overlay.hide(0, finishUp);\n            } else {\n              finishUp();\n            }\n\n            this.$element.hide(this.options.hideDelay);\n          }\n\n        // Conditionals to remove extra event listeners added on open\n        if (this.options.closeOnEsc) {\n          $(window).off('keydown.zf.reveal');\n        }\n\n        if (!this.options.overlay && this.options.closeOnClick) {\n          $('body').off('click.zf.reveal');\n        }\n\n        this.$element.off('keydown.zf.reveal');\n\n        function finishUp() {\n          if (_this.isMobile) {\n            $('html, body').removeClass('is-reveal-open');\n            if (_this.originalScrollPos) {\n              $('body').scrollTop(_this.originalScrollPos);\n              _this.originalScrollPos = null;\n            }\n          } else {\n            $('body').removeClass('is-reveal-open');\n          }\n\n          _this.$element.attr('aria-hidden', true);\n\n          /**\r\n          * Fires when the modal is done closing.\r\n          * @event Reveal#closed\r\n          */\n          _this.$element.trigger('closed.zf.reveal');\n        }\n\n        /**\r\n        * Resets the modal content\r\n        * This prevents a running video to keep going in the background\r\n        */\n        if (this.options.resetOnClose) {\n          this.$element.html(this.$element.html());\n        }\n\n        this.isActive = false;\n        if (_this.options.deepLink) {\n          if (window.history.replaceState) {\n            window.history.replaceState(\"\", document.title, window.location.pathname);\n          } else {\n            window.location.hash = '';\n          }\n        }\n      }\n\n      /**\r\n       * Toggles the open/closed state of a modal.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n    }, {\n      key: 'destroy',\n\n\n      /**\r\n       * Destroys an instance of a modal.\r\n       * @function\r\n       */\n      value: function destroy() {\n        if (this.options.overlay) {\n          this.$element.appendTo($('body')); // move $element outside of $overlay to prevent error unregisterPlugin()\n          this.$overlay.hide().off().remove();\n        }\n        this.$element.hide().off();\n        this.$anchor.off('.zf');\n        $(window).off('.zf.reveal:' + this.id);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Reveal;\n  }();\n\n  Reveal.defaults = {\n    /**\r\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n     * @option\r\n     * @example 'slide-in-left'\r\n     */\n    animationIn: '',\n    /**\r\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n     * @option\r\n     * @example 'slide-out-right'\r\n     */\n    animationOut: '',\n    /**\r\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\r\n     * @option\r\n     * @example 10\r\n     */\n    showDelay: 0,\n    /**\r\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\r\n     * @option\r\n     * @example 10\r\n     */\n    hideDelay: 0,\n    /**\r\n     * Allows a click on the body/overlay to close the modal.\r\n     * @option\r\n     * @example true\r\n     */\n    closeOnClick: true,\n    /**\r\n     * Allows the modal to close if the user presses the `ESCAPE` key.\r\n     * @option\r\n     * @example true\r\n     */\n    closeOnEsc: true,\n    /**\r\n     * If true, allows multiple modals to be displayed at once.\r\n     * @option\r\n     * @example false\r\n     */\n    multipleOpened: false,\n    /**\r\n     * Distance, in pixels, the modal should push down from the top of the screen.\r\n     * @option\r\n     * @example auto\r\n     */\n    vOffset: 'auto',\n    /**\r\n     * Distance, in pixels, the modal should push in from the side of the screen.\r\n     * @option\r\n     * @example auto\r\n     */\n    hOffset: 'auto',\n    /**\r\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\r\n     * @option\r\n     * @example false\r\n     */\n    fullScreen: false,\n    /**\r\n     * Percentage of screen height the modal should push up from the bottom of the view.\r\n     * @option\r\n     * @example 10\r\n     */\n    btmOffsetPct: 10,\n    /**\r\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\r\n     * @option\r\n     * @example true\r\n     */\n    overlay: true,\n    /**\r\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\r\n     * @option\r\n     * @example false\r\n     */\n    resetOnClose: false,\n    /**\r\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\r\n     * @option\r\n     * @example false\r\n     */\n    deepLink: false\n  };\n\n  // Window exports\n  Foundation.plugin(Reveal, 'Reveal');\n\n  function iPhoneSniff() {\n    return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n    );\n  }\n\n  function androidSniff() {\n    return (/Android/.test(window.navigator.userAgent)\n    );\n  }\n\n  function mobileSniff() {\n    return iPhoneSniff() || androidSniff();\n  }\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Slider module.\r\n   * @module foundation.slider\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.touch\r\n   */\n\n  var Slider = function () {\n    /**\r\n     * Creates a new instance of a drilldown menu.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Slider(element, options) {\n      _classCallCheck(this, Slider);\n\n      this.$element = element;\n      this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Slider');\n      Foundation.Keyboard.register('Slider', {\n        'ltr': {\n          'ARROW_RIGHT': 'increase',\n          'ARROW_UP': 'increase',\n          'ARROW_DOWN': 'decrease',\n          'ARROW_LEFT': 'decrease',\n          'SHIFT_ARROW_RIGHT': 'increase_fast',\n          'SHIFT_ARROW_UP': 'increase_fast',\n          'SHIFT_ARROW_DOWN': 'decrease_fast',\n          'SHIFT_ARROW_LEFT': 'decrease_fast'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'increase',\n          'ARROW_RIGHT': 'decrease',\n          'SHIFT_ARROW_LEFT': 'increase_fast',\n          'SHIFT_ARROW_RIGHT': 'decrease_fast'\n        }\n      });\n    }\n\n    /**\r\n     * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(Slider, [{\n      key: '_init',\n      value: function _init() {\n        this.inputs = this.$element.find('input');\n        this.handles = this.$element.find('[data-slider-handle]');\n\n        this.$handle = this.handles.eq(0);\n        this.$input = this.inputs.length ? this.inputs.eq(0) : $('#' + this.$handle.attr('aria-controls'));\n        this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n        var isDbl = false,\n            _this = this;\n        if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n          this.options.disabled = true;\n          this.$element.addClass(this.options.disabledClass);\n        }\n        if (!this.inputs.length) {\n          this.inputs = $().add(this.$input);\n          this.options.binding = true;\n        }\n        this._setInitAttr(0);\n        this._events(this.$handle);\n\n        if (this.handles[1]) {\n          this.options.doubleSided = true;\n          this.$handle2 = this.handles.eq(1);\n          this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $('#' + this.$handle2.attr('aria-controls'));\n\n          if (!this.inputs[1]) {\n            this.inputs = this.inputs.add(this.$input2);\n          }\n          isDbl = true;\n\n          this._setHandlePos(this.$handle, this.options.initialStart, true, function () {\n\n            _this._setHandlePos(_this.$handle2, _this.options.initialEnd, true);\n          });\n          // this.$handle.triggerHandler('click.zf.slider');\n          this._setInitAttr(1);\n          this._events(this.$handle2);\n        }\n\n        if (!isDbl) {\n          this._setHandlePos(this.$handle, this.options.initialStart, true);\n        }\n      }\n\n      /**\r\n       * Sets the position of the selected handle and fill bar.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $hndl - the selected handle to move.\r\n       * @param {Number} location - floating point between the start and end values of the slider bar.\r\n       * @param {Function} cb - callback function to fire on completion.\r\n       * @fires Slider#moved\r\n       * @fires Slider#changed\r\n       */\n\n    }, {\n      key: '_setHandlePos',\n      value: function _setHandlePos($hndl, location, noInvert, cb) {\n        // don't move if the slider has been disabled since its initialization\n        if (this.$element.hasClass(this.options.disabledClass)) {\n          return;\n        }\n        //might need to alter that slightly for bars that will have odd number selections.\n        location = parseFloat(location); //on input change events, convert string to number...grumble.\n\n        // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n        if (location < this.options.start) {\n          location = this.options.start;\n        } else if (location > this.options.end) {\n          location = this.options.end;\n        }\n\n        var isDbl = this.options.doubleSided;\n\n        if (isDbl) {\n          //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n          if (this.handles.index($hndl) === 0) {\n            var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n            location = location >= h2Val ? h2Val - this.options.step : location;\n          } else {\n            var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n            location = location <= h1Val ? h1Val + this.options.step : location;\n          }\n        }\n\n        //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n        //for click and drag events, it's weird due to the scale(-1, 1) css property\n        if (this.options.vertical && !noInvert) {\n          location = this.options.end - location;\n        }\n\n        var _this = this,\n            vert = this.options.vertical,\n            hOrW = vert ? 'height' : 'width',\n            lOrT = vert ? 'top' : 'left',\n            handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n            elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = percent(location - this.options.start, this.options.end - this.options.start).toFixed(2),\n\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n        var css = {};\n\n        this._setValues($hndl, location);\n\n        // TODO update to calculate based on values set to respective inputs??\n        if (isDbl) {\n          var isLeftHndl = this.handles.index($hndl) === 0,\n\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n\n          //percentage w/h of the handle compared to the slider bar\n          handlePct = ~ ~(percent(handleDim, elemDim) * 100);\n          //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n          if (isLeftHndl) {\n            //left or top percentage value to apply to the fill bar.\n            css[lOrT] = movement + '%';\n            //calculate the new min-height/width for the fill bar.\n            dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n            //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n            //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n            if (cb && typeof cb === 'function') {\n              cb();\n            } //this is only needed for the initialization of 2 handled sliders\n          } else {\n              //just caching the value of the left/bottom handle's left/top property\n              var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n              //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n              //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n              dim = movement - (isNaN(handlePos) ? this.options.initialStart / ((this.options.end - this.options.start) / 100) : handlePos) + handlePct;\n            }\n          // assign the min-height/width to our css object\n          css['min-' + hOrW] = dim + '%';\n        }\n\n        this.$element.one('finished.zf.animate', function () {\n          /**\r\n           * Fires when the handle is done moving.\r\n           * @event Slider#moved\r\n           */\n          _this.$element.trigger('moved.zf.slider', [$hndl]);\n        });\n\n        //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n        var moveTime = this.$element.data('dragging') ? 1000 / 60 : this.options.moveTime;\n\n        Foundation.Move(moveTime, $hndl, function () {\n          //adjusting the left/top property of the handle, based on the percentage calculated above\n          $hndl.css(lOrT, movement + '%');\n\n          if (!_this.options.doubleSided) {\n            //if single-handled, a simple method to expand the fill bar\n            _this.$fill.css(hOrW, pctOfBar * 100 + '%');\n          } else {\n            //otherwise, use the css object we created above\n            _this.$fill.css(css);\n          }\n        });\n\n        /**\r\n         * Fires when the value has not been change for a given time.\r\n         * @event Slider#changed\r\n         */\n        clearTimeout(_this.timeout);\n        _this.timeout = setTimeout(function () {\n          _this.$element.trigger('changed.zf.slider', [$hndl]);\n        }, _this.options.changedDelay);\n      }\n\n      /**\r\n       * Sets the initial attribute for the slider element.\r\n       * @function\r\n       * @private\r\n       * @param {Number} idx - index of the current handle/input to use.\r\n       */\n\n    }, {\n      key: '_setInitAttr',\n      value: function _setInitAttr(idx) {\n        var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\n        this.inputs.eq(idx).attr({\n          'id': id,\n          'max': this.options.end,\n          'min': this.options.start,\n          'step': this.options.step\n        });\n        this.handles.eq(idx).attr({\n          'role': 'slider',\n          'aria-controls': id,\n          'aria-valuemax': this.options.end,\n          'aria-valuemin': this.options.start,\n          'aria-valuenow': idx === 0 ? this.options.initialStart : this.options.initialEnd,\n          'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n          'tabindex': 0\n        });\n      }\n\n      /**\r\n       * Sets the input and `aria-valuenow` values for the slider element.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the currently selected handle.\r\n       * @param {Number} val - floating point of the new value.\r\n       */\n\n    }, {\n      key: '_setValues',\n      value: function _setValues($handle, val) {\n        var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n        this.inputs.eq(idx).val(val);\n        $handle.attr('aria-valuenow', val);\n      }\n\n      /**\r\n       * Handles events on the slider element.\r\n       * Calculates the new location of the current handle.\r\n       * If there are two handles and the bar was clicked, it determines which handle to move.\r\n       * @function\r\n       * @private\r\n       * @param {Object} e - the `event` object passed from the listener.\r\n       * @param {jQuery} $handle - the current handle to calculate for, if selected.\r\n       * @param {Number} val - floating point number for the new value of the slider.\r\n       * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\r\n       */\n\n    }, {\n      key: '_handleEvent',\n      value: function _handleEvent(e, $handle, val) {\n        var value, hasVal;\n        if (!val) {\n          //click or drag events\n          e.preventDefault();\n          var _this = this,\n              vertical = this.options.vertical,\n              param = vertical ? 'height' : 'width',\n              direction = vertical ? 'top' : 'left',\n              eventOffset = vertical ? e.pageY : e.pageX,\n              halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n              barDim = this.$element[0].getBoundingClientRect()[param],\n              windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\n\n          var elemOffset = this.$element.offset()[direction];\n\n          // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\n          // best way to guess this is simulated is if clientY == pageY\n          if (e.clientY === e.pageY) {\n            eventOffset = eventOffset + windowScroll;\n          }\n          var eventFromBar = eventOffset - elemOffset;\n          var barXY;\n          if (eventFromBar < 0) {\n            barXY = 0;\n          } else if (eventFromBar > barDim) {\n            barXY = barDim;\n          } else {\n            barXY = eventFromBar;\n          }\n          var offsetPct = percent(barXY, barDim);\n\n          value = (this.options.end - this.options.start) * offsetPct + this.options.start;\n\n          // turn everything around for RTL, yay math!\n          if (Foundation.rtl() && !this.options.vertical) {\n            value = this.options.end - value;\n          }\n\n          value = _this._adjustValue(null, value);\n          //boolean flag for the setHandlePos fn, specifically for vertical sliders\n          hasVal = false;\n\n          if (!$handle) {\n            //figure out which handle it is, pass it to the next function.\n            var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n                secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n          }\n        } else {\n          //change event on input\n          value = this._adjustValue(null, val);\n          hasVal = true;\n        }\n\n        this._setHandlePos($handle, value, hasVal);\n      }\n\n      /**\r\n       * Adjustes value for handle in regard to step value. returns adjusted value\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the selected handle.\r\n       * @param {Number} value - value to adjust. used if $handle is falsy\r\n       */\n\n    }, {\n      key: '_adjustValue',\n      value: function _adjustValue($handle, value) {\n        var val,\n            step = this.options.step,\n            div = parseFloat(step / 2),\n            left,\n            prev_val,\n            next_val;\n        if (!!$handle) {\n          val = parseFloat($handle.attr('aria-valuenow'));\n        } else {\n          val = value;\n        }\n        left = val % step;\n        prev_val = val - left;\n        next_val = prev_val + step;\n        if (left === 0) {\n          return val;\n        }\n        val = val >= prev_val + div ? next_val : prev_val;\n        return val;\n      }\n\n      /**\r\n       * Adds event listeners to the slider elements.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the current handle to apply listeners to.\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events($handle) {\n        var _this = this,\n            curHandle,\n            timer;\n\n        this.inputs.off('change.zf.slider').on('change.zf.slider', function (e) {\n          var idx = _this.inputs.index($(this));\n          _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n        });\n\n        if (this.options.clickSelect) {\n          this.$element.off('click.zf.slider').on('click.zf.slider', function (e) {\n            if (_this.$element.data('dragging')) {\n              return false;\n            }\n\n            if (!$(e.target).is('[data-slider-handle]')) {\n              if (_this.options.doubleSided) {\n                _this._handleEvent(e);\n              } else {\n                _this._handleEvent(e, _this.$handle);\n              }\n            }\n          });\n        }\n\n        if (this.options.draggable) {\n          this.handles.addTouch();\n\n          var $body = $('body');\n          $handle.off('mousedown.zf.slider').on('mousedown.zf.slider', function (e) {\n            $handle.addClass('is-dragging');\n            _this.$fill.addClass('is-dragging'); //\n            _this.$element.data('dragging', true);\n\n            curHandle = $(e.currentTarget);\n\n            $body.on('mousemove.zf.slider', function (e) {\n              e.preventDefault();\n              _this._handleEvent(e, curHandle);\n            }).on('mouseup.zf.slider', function (e) {\n              _this._handleEvent(e, curHandle);\n\n              $handle.removeClass('is-dragging');\n              _this.$fill.removeClass('is-dragging');\n              _this.$element.data('dragging', false);\n\n              $body.off('mousemove.zf.slider mouseup.zf.slider');\n            });\n          })\n          // prevent events triggered by touch\n          .on('selectstart.zf.slider touchmove.zf.slider', function (e) {\n            e.preventDefault();\n          });\n        }\n\n        $handle.off('keydown.zf.slider').on('keydown.zf.slider', function (e) {\n          var _$handle = $(this),\n              idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n              oldValue = parseFloat(_this.inputs.eq(idx).val()),\n              newValue;\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Slider', {\n            decrease: function () {\n              newValue = oldValue - _this.options.step;\n            },\n            increase: function () {\n              newValue = oldValue + _this.options.step;\n            },\n            decrease_fast: function () {\n              newValue = oldValue - _this.options.step * 10;\n            },\n            increase_fast: function () {\n              newValue = oldValue + _this.options.step * 10;\n            },\n            handled: function () {\n              // only set handle pos when event was handled specially\n              e.preventDefault();\n              _this._setHandlePos(_$handle, newValue, true);\n            }\n          });\n          /*if (newValue) { // if pressed key has special function, update value\r\n            e.preventDefault();\r\n            _this._setHandlePos(_$handle, newValue);\r\n          }*/\n        });\n      }\n\n      /**\r\n       * Destroys the slider plugin.\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.handles.off('.zf.slider');\n        this.inputs.off('.zf.slider');\n        this.$element.off('.zf.slider');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Slider;\n  }();\n\n  Slider.defaults = {\n    /**\r\n     * Minimum value for the slider scale.\r\n     * @option\r\n     * @example 0\r\n     */\n    start: 0,\n    /**\r\n     * Maximum value for the slider scale.\r\n     * @option\r\n     * @example 100\r\n     */\n    end: 100,\n    /**\r\n     * Minimum value change per change event.\r\n     * @option\r\n     * @example 1\r\n     */\n    step: 1,\n    /**\r\n     * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\r\n     * @option\r\n     * @example 0\r\n     */\n    initialStart: 0,\n    /**\r\n     * Value at which the right handle/second input should be set to on initialization.\r\n     * @option\r\n     * @example 100\r\n     */\n    initialEnd: 100,\n    /**\r\n     * Allows the input to be located outside the container and visible. Set to by the JS\r\n     * @option\r\n     * @example false\r\n     */\n    binding: false,\n    /**\r\n     * Allows the user to click/tap on the slider bar to select a value.\r\n     * @option\r\n     * @example true\r\n     */\n    clickSelect: true,\n    /**\r\n     * Set to true and use the `vertical` class to change alignment to vertical.\r\n     * @option\r\n     * @example false\r\n     */\n    vertical: false,\n    /**\r\n     * Allows the user to drag the slider handle(s) to select a value.\r\n     * @option\r\n     * @example true\r\n     */\n    draggable: true,\n    /**\r\n     * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\r\n     * @option\r\n     * @example false\r\n     */\n    disabled: false,\n    /**\r\n     * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\r\n     * @option\r\n     * @example false\r\n     */\n    doubleSided: false,\n    /**\r\n     * Potential future feature.\r\n     */\n    // steps: 100,\n    /**\r\n     * Number of decimal places the plugin should go to for floating point precision.\r\n     * @option\r\n     * @example 2\r\n     */\n    decimal: 2,\n    /**\r\n     * Time delay for dragged elements.\r\n     */\n    // dragDelay: 0,\n    /**\r\n     * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\r\n     * @option\r\n     * @example 200\r\n     */\n    moveTime: 200, //update this if changing the transition time in the sass\n    /**\r\n     * Class applied to disabled sliders.\r\n     * @option\r\n     * @example 'disabled'\r\n     */\n    disabledClass: 'disabled',\n    /**\r\n     * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\r\n     * @option\r\n     * @example false\r\n     */\n    invertVertical: false,\n    /**\r\n     * Milliseconds before the `changed.zf-slider` event is triggered after value change.\r\n     * @option\r\n     * @example 500\r\n     */\n    changedDelay: 500\n  };\n\n  function percent(frac, num) {\n    return frac / num;\n  }\n  function absPosition($handle, dir, clickPos, param) {\n    return Math.abs($handle.position()[dir] + $handle[param]() / 2 - clickPos);\n  }\n\n  // Window exports\n  Foundation.plugin(Slider, 'Slider');\n}(jQuery);\n\n//*********this is in case we go to static, absolute positions instead of dynamic positioning********\n// this.setSteps(function() {\n//   _this._events();\n//   var initStart = _this.options.positions[_this.options.initialStart - 1] || null;\n//   var initEnd = _this.options.initialEnd ? _this.options.position[_this.options.initialEnd - 1] : null;\n//   if (initStart || initEnd) {\n//     _this._handleEvent(initStart, initEnd);\n//   }\n// });\n\n//***********the other part of absolute positions*************\n// Slider.prototype.setSteps = function(cb) {\n//   var posChange = this.$element.outerWidth() / this.options.steps;\n//   var counter = 0\n//   while(counter < this.options.steps) {\n//     if (counter) {\n//       this.options.positions.push(this.options.positions[counter - 1] + posChange);\n//     } else {\n//       this.options.positions.push(posChange);\n//     }\n//     counter++;\n//   }\n//   cb();\n// };\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Sticky module.\r\n   * @module foundation.sticky\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   */\n\n  var Sticky = function () {\n    /**\r\n     * Creates a new instance of a sticky thing.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make sticky.\r\n     * @param {Object} options - options object passed when creating the element programmatically.\r\n     */\n\n    function Sticky(element, options) {\n      _classCallCheck(this, Sticky);\n\n      this.$element = element;\n      this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Sticky');\n    }\n\n    /**\r\n     * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(Sticky, [{\n      key: '_init',\n      value: function _init() {\n        var $parent = this.$element.parent('[data-sticky-container]'),\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n            _this = this;\n\n        if (!$parent.length) {\n          this.wasWrapped = true;\n        }\n        this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n        this.$container.addClass(this.options.containerClass);\n\n        this.$element.addClass(this.options.stickyClass).attr({ 'data-resize': id });\n\n        this.scrollCount = this.options.checkEvery;\n        this.isStuck = false;\n        $(window).one('load.zf.sticky', function () {\n          //We calculate the container height to have correct values for anchor points offset calculation.\n          _this.containerHeight = _this.$element.css(\"display\") == \"none\" ? 0 : _this.$element[0].getBoundingClientRect().height;\n          _this.$container.css('height', _this.containerHeight);\n          _this.elemHeight = _this.containerHeight;\n          if (_this.options.anchor !== '') {\n            _this.$anchor = $('#' + _this.options.anchor);\n          } else {\n            _this._parsePoints();\n          }\n\n          _this._setSizes(function () {\n            _this._calc(false);\n          });\n          _this._events(id.split('-').reverse().join('-'));\n        });\n      }\n\n      /**\r\n       * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_parsePoints',\n      value: function _parsePoints() {\n        var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\n            btm = this.options.btmAnchor == \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\n            pts = [top, btm],\n            breaks = {};\n        for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n          var pt;\n          if (typeof pts[i] === 'number') {\n            pt = pts[i];\n          } else {\n            var place = pts[i].split(':'),\n                anchor = $('#' + place[0]);\n\n            pt = anchor.offset().top;\n            if (place[1] && place[1].toLowerCase() === 'bottom') {\n              pt += anchor[0].getBoundingClientRect().height;\n            }\n          }\n          breaks[i] = pt;\n        }\n\n        this.points = breaks;\n        return;\n      }\n\n      /**\r\n       * Adds event handlers for the scrolling element.\r\n       * @private\r\n       * @param {String} id - psuedo-random id for unique scroll event listener.\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events(id) {\n        var _this = this,\n            scrollListener = this.scrollListener = 'scroll.zf.' + id;\n        if (this.isOn) {\n          return;\n        }\n        if (this.canStick) {\n          this.isOn = true;\n          $(window).off(scrollListener).on(scrollListener, function (e) {\n            if (_this.scrollCount === 0) {\n              _this.scrollCount = _this.options.checkEvery;\n              _this._setSizes(function () {\n                _this._calc(false, window.pageYOffset);\n              });\n            } else {\n              _this.scrollCount--;\n              _this._calc(false, window.pageYOffset);\n            }\n          });\n        }\n\n        this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger', function (e, el) {\n          _this._setSizes(function () {\n            _this._calc(false);\n            if (_this.canStick) {\n              if (!_this.isOn) {\n                _this._events(id);\n              }\n            } else if (_this.isOn) {\n              _this._pauseListeners(scrollListener);\n            }\n          });\n        });\n      }\n\n      /**\r\n       * Removes event handlers for scroll and change events on anchor.\r\n       * @fires Sticky#pause\r\n       * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\r\n       */\n\n    }, {\n      key: '_pauseListeners',\n      value: function _pauseListeners(scrollListener) {\n        this.isOn = false;\n        $(window).off(scrollListener);\n\n        /**\r\n         * Fires when the plugin is paused due to resize event shrinking the view.\r\n         * @event Sticky#pause\r\n         * @private\r\n         */\n        this.$element.trigger('pause.zf.sticky');\n      }\n\n      /**\r\n       * Called on every `scroll` event and on `_init`\r\n       * fires functions based on booleans and cached values\r\n       * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\r\n       * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\r\n       */\n\n    }, {\n      key: '_calc',\n      value: function _calc(checkSizes, scroll) {\n        if (checkSizes) {\n          this._setSizes();\n        }\n\n        if (!this.canStick) {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n          return false;\n        }\n\n        if (!scroll) {\n          scroll = window.pageYOffset;\n        }\n\n        if (scroll >= this.topPoint) {\n          if (scroll <= this.bottomPoint) {\n            if (!this.isStuck) {\n              this._setSticky();\n            }\n          } else {\n            if (this.isStuck) {\n              this._removeSticky(false);\n            }\n          }\n        } else {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n        }\n      }\n\n      /**\r\n       * Causes the $element to become stuck.\r\n       * Adds `position: fixed;`, and helper classes.\r\n       * @fires Sticky#stuckto\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setSticky',\n      value: function _setSticky() {\n        var _this = this,\n            stickTo = this.options.stickTo,\n            mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n            css = {};\n\n        css[mrgn] = this.options[mrgn] + 'em';\n        css[stickTo] = 0;\n        css[notStuckTo] = 'auto';\n        css['left'] = this.$container.offset().left + parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"], 10);\n        this.isStuck = true;\n        this.$element.removeClass('is-anchored is-at-' + notStuckTo).addClass('is-stuck is-at-' + stickTo).css(css)\n        /**\r\n         * Fires when the $element has become `position: fixed;`\r\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\r\n         * @event Sticky#stuckto\r\n         */\n        .trigger('sticky.zf.stuckto:' + stickTo);\n        this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function () {\n          _this._setSizes();\n        });\n      }\n\n      /**\r\n       * Causes the $element to become unstuck.\r\n       * Removes `position: fixed;`, and helper classes.\r\n       * Adds other helper classes.\r\n       * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\r\n       * @fires Sticky#unstuckfrom\r\n       * @private\r\n       */\n\n    }, {\n      key: '_removeSticky',\n      value: function _removeSticky(isTop) {\n        var stickTo = this.options.stickTo,\n            stickToTop = stickTo === 'top',\n            css = {},\n            anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n            mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickToTop ? 'bottom' : 'top',\n            topOrBottom = isTop ? 'top' : 'bottom';\n\n        css[mrgn] = 0;\n\n        css['bottom'] = 'auto';\n        if (isTop) {\n          css['top'] = 0;\n        } else {\n          css['top'] = anchorPt;\n        }\n\n        css['left'] = '';\n        this.isStuck = false;\n        this.$element.removeClass('is-stuck is-at-' + stickTo).addClass('is-anchored is-at-' + topOrBottom).css(css)\n        /**\r\n         * Fires when the $element has become anchored.\r\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\r\n         * @event Sticky#unstuckfrom\r\n         */\n        .trigger('sticky.zf.unstuckfrom:' + topOrBottom);\n      }\n\n      /**\r\n       * Sets the $element and $container sizes for plugin.\r\n       * Calls `_setBreakPoints`.\r\n       * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setSizes',\n      value: function _setSizes(cb) {\n        this.canStick = Foundation.MediaQuery.atLeast(this.options.stickyOn);\n        if (!this.canStick) {\n          if (cb && typeof cb === 'function') {\n            cb();\n          }\n        }\n        var _this = this,\n            newElemWidth = this.$container[0].getBoundingClientRect().width,\n            comp = window.getComputedStyle(this.$container[0]),\n            pdng = parseInt(comp['padding-right'], 10);\n\n        if (this.$anchor && this.$anchor.length) {\n          this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n        } else {\n          this._parsePoints();\n        }\n\n        this.$element.css({\n          'max-width': newElemWidth - pdng + 'px'\n        });\n\n        var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n        if (this.$element.css(\"display\") == \"none\") {\n          newContainerHeight = 0;\n        }\n        this.containerHeight = newContainerHeight;\n        this.$container.css({\n          height: newContainerHeight\n        });\n        this.elemHeight = newContainerHeight;\n\n        if (this.isStuck) {\n          this.$element.css({ \"left\": this.$container.offset().left + parseInt(comp['padding-left'], 10) });\n        } else {\n          if (this.$element.hasClass('is-at-bottom')) {\n            var anchorPt = (this.points ? this.points[1] - this.$container.offset().top : this.anchorHeight) - this.elemHeight;\n            this.$element.css('top', anchorPt);\n          }\n        }\n\n        this._setBreakPoints(newContainerHeight, function () {\n          if (cb && typeof cb === 'function') {\n            cb();\n          }\n        });\n      }\n\n      /**\r\n       * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\r\n       * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\r\n       * @param {Function} cb - optional callback function to be called on completion.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setBreakPoints',\n      value: function _setBreakPoints(elemHeight, cb) {\n        if (!this.canStick) {\n          if (cb && typeof cb === 'function') {\n            cb();\n          } else {\n            return false;\n          }\n        }\n        var mTop = emCalc(this.options.marginTop),\n            mBtm = emCalc(this.options.marginBottom),\n            topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n            bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n\n        // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n        if (this.options.stickTo === 'top') {\n          topPoint -= mTop;\n          bottomPoint -= elemHeight + mTop;\n        } else if (this.options.stickTo === 'bottom') {\n          topPoint -= winHeight - (elemHeight + mBtm);\n          bottomPoint -= winHeight - mBtm;\n        } else {\n          //this would be the stickTo: both option... tricky\n        }\n\n        this.topPoint = topPoint;\n        this.bottomPoint = bottomPoint;\n\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }\n\n      /**\r\n       * Destroys the current sticky element.\r\n       * Resets the element to the top position first.\r\n       * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._removeSticky(true);\n\n        this.$element.removeClass(this.options.stickyClass + ' is-anchored is-at-top').css({\n          height: '',\n          top: '',\n          bottom: '',\n          'max-width': ''\n        }).off('resizeme.zf.trigger');\n        if (this.$anchor && this.$anchor.length) {\n          this.$anchor.off('change.zf.sticky');\n        }\n        $(window).off(this.scrollListener);\n\n        if (this.wasWrapped) {\n          this.$element.unwrap();\n        } else {\n          this.$container.removeClass(this.options.containerClass).css({\n            height: ''\n          });\n        }\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Sticky;\n  }();\n\n  Sticky.defaults = {\n    /**\r\n     * Customizable container template. Add your own classes for styling and sizing.\r\n     * @option\r\n     * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\r\n     */\n    container: '<div data-sticky-container></div>',\n    /**\r\n     * Location in the view the element sticks to.\r\n     * @option\r\n     * @example 'top'\r\n     */\n    stickTo: 'top',\n    /**\r\n     * If anchored to a single element, the id of that element.\r\n     * @option\r\n     * @example 'exampleId'\r\n     */\n    anchor: '',\n    /**\r\n     * If using more than one element as anchor points, the id of the top anchor.\r\n     * @option\r\n     * @example 'exampleId:top'\r\n     */\n    topAnchor: '',\n    /**\r\n     * If using more than one element as anchor points, the id of the bottom anchor.\r\n     * @option\r\n     * @example 'exampleId:bottom'\r\n     */\n    btmAnchor: '',\n    /**\r\n     * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\r\n     * @option\r\n     * @example 1\r\n     */\n    marginTop: 1,\n    /**\r\n     * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\r\n     * @option\r\n     * @example 1\r\n     */\n    marginBottom: 1,\n    /**\r\n     * Breakpoint string that is the minimum screen size an element should become sticky.\r\n     * @option\r\n     * @example 'medium'\r\n     */\n    stickyOn: 'medium',\n    /**\r\n     * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\r\n     * @option\r\n     * @example 'sticky'\r\n     */\n    stickyClass: 'sticky',\n    /**\r\n     * Class applied to sticky container. Foundation defaults to `sticky-container`.\r\n     * @option\r\n     * @example 'sticky-container'\r\n     */\n    containerClass: 'sticky-container',\n    /**\r\n     * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\r\n     * @option\r\n     * @example 50\r\n     */\n    checkEvery: -1\n  };\n\n  /**\r\n   * Helper function to calculate em values\r\n   * @param Number {em} - number of em's to calculate into pixels\r\n   */\n  function emCalc(em) {\n    return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n  }\n\n  // Window exports\n  Foundation.plugin(Sticky, 'Sticky');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Tabs module.\r\n   * @module foundation.tabs\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\r\n   */\n\n  var Tabs = function () {\n    /**\r\n     * Creates a new instance of tabs.\r\n     * @class\r\n     * @fires Tabs#init\r\n     * @param {jQuery} element - jQuery object to make into tabs.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Tabs(element, options) {\n      _classCallCheck(this, Tabs);\n\n      this.$element = element;\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n      this._init();\n      Foundation.registerPlugin(this, 'Tabs');\n      Foundation.Keyboard.register('Tabs', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'previous',\n        'ARROW_DOWN': 'next',\n        'ARROW_LEFT': 'previous'\n        // 'TAB': 'next',\n        // 'SHIFT_TAB': 'previous'\n      });\n    }\n\n    /**\r\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\r\n     * @private\r\n     */\n\n\n    _createClass(Tabs, [{\n      key: '_init',\n      value: function _init() {\n        var _this = this;\n\n        this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n        this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n        this.$tabTitles.each(function () {\n          var $elem = $(this),\n              $link = $elem.find('a'),\n              isActive = $elem.hasClass('is-active'),\n              hash = $link[0].hash.slice(1),\n              linkId = $link[0].id ? $link[0].id : hash + '-label',\n              $tabContent = $('#' + hash);\n\n          $elem.attr({ 'role': 'presentation' });\n\n          $link.attr({\n            'role': 'tab',\n            'aria-controls': hash,\n            'aria-selected': isActive,\n            'id': linkId\n          });\n\n          $tabContent.attr({\n            'role': 'tabpanel',\n            'aria-hidden': !isActive,\n            'aria-labelledby': linkId\n          });\n\n          if (isActive && _this.options.autoFocus) {\n            $link.focus();\n          }\n        });\n\n        if (this.options.matchHeight) {\n          var $images = this.$tabContent.find('img');\n\n          if ($images.length) {\n            Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n          } else {\n            this._setHeight();\n          }\n        }\n\n        this._events();\n      }\n\n      /**\r\n       * Adds event handlers for items within the tabs.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this._addKeyHandler();\n        this._addClickHandler();\n        this._setHeightMqHandler = null;\n\n        if (this.options.matchHeight) {\n          this._setHeightMqHandler = this._setHeight.bind(this);\n\n          $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n        }\n      }\n\n      /**\r\n       * Adds click handlers for items within the tabs.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_addClickHandler',\n      value: function _addClickHandler() {\n        var _this = this;\n\n        this.$element.off('click.zf.tabs').on('click.zf.tabs', '.' + this.options.linkClass, function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          if ($(this).hasClass('is-active')) {\n            return;\n          }\n          _this._handleTabChange($(this));\n        });\n      }\n\n      /**\r\n       * Adds keyboard event handlers for items within the tabs.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_addKeyHandler',\n      value: function _addKeyHandler() {\n        var _this = this;\n        var $firstTab = _this.$element.find('li:first-of-type');\n        var $lastTab = _this.$element.find('li:last-of-type');\n\n        this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n          if (e.which === 9) return;\n\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              if (_this.options.wrapOnKeys) {\n                $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n                $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n              } else {\n                $prevElement = $elements.eq(Math.max(0, i - 1));\n                $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              }\n              return;\n            }\n          });\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Tabs', {\n            open: function () {\n              $element.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($element);\n            },\n            previous: function () {\n              $prevElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($prevElement);\n            },\n            next: function () {\n              $nextElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($nextElement);\n            },\n            handled: function () {\n              e.stopPropagation();\n              e.preventDefault();\n            }\n          });\n        });\n      }\n\n      /**\r\n       * Opens the tab `$targetContent` defined by `$target`.\r\n       * @param {jQuery} $target - Tab to open.\r\n       * @fires Tabs#change\r\n       * @function\r\n       */\n\n    }, {\n      key: '_handleTabChange',\n      value: function _handleTabChange($target) {\n        var $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash),\n            $oldTab = this.$element.find('.' + this.options.linkClass + '.is-active').removeClass('is-active').find('[role=\"tab\"]').attr({ 'aria-selected': 'false' });\n\n        $('#' + $oldTab.attr('aria-controls')).removeClass('is-active').attr({ 'aria-hidden': 'true' });\n\n        $target.addClass('is-active');\n\n        $tabLink.attr({ 'aria-selected': 'true' });\n\n        $targetContent.addClass('is-active').attr({ 'aria-hidden': 'false' });\n\n        /**\r\n         * Fires when the plugin has successfully changed tabs.\r\n         * @event Tabs#change\r\n         */\n        this.$element.trigger('change.zf.tabs', [$target]);\n      }\n\n      /**\r\n       * Public method for selecting a content pane to display.\r\n       * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'selectTab',\n      value: function selectTab(elem) {\n        var idStr;\n\n        if (typeof elem === 'object') {\n          idStr = elem[0].id;\n        } else {\n          idStr = elem;\n        }\n\n        if (idStr.indexOf('#') < 0) {\n          idStr = '#' + idStr;\n        }\n\n        var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n        this._handleTabChange($target);\n      }\n    }, {\n      key: '_setHeight',\n\n      /**\r\n       * Sets the height of each panel to the height of the tallest panel.\r\n       * If enabled in options, gets called on media query change.\r\n       * If loading content via external source, can be called directly or with _reflow.\r\n       * @function\r\n       * @private\r\n       */\n      value: function _setHeight() {\n        var max = 0;\n        this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\n          var panel = $(this),\n              isActive = panel.hasClass('is-active');\n\n          if (!isActive) {\n            panel.css({ 'visibility': 'hidden', 'display': 'block' });\n          }\n\n          var temp = this.getBoundingClientRect().height;\n\n          if (!isActive) {\n            panel.css({\n              'visibility': '',\n              'display': ''\n            });\n          }\n\n          max = temp > max ? temp : max;\n        }).css('height', max + 'px');\n      }\n\n      /**\r\n       * Destroys an instance of an tabs.\r\n       * @fires Tabs#destroyed\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\n\n        if (this.options.matchHeight) {\n          if (this._setHeightMqHandler != null) {\n            $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n          }\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tabs;\n  }();\n\n  Tabs.defaults = {\n    /**\r\n     * Allows the window to scroll to content of active pane on load if set to true.\r\n     * @option\r\n     * @example false\r\n     */\n    autoFocus: false,\n\n    /**\r\n     * Allows keyboard input to 'wrap' around the tab links.\r\n     * @option\r\n     * @example true\r\n     */\n    wrapOnKeys: true,\n\n    /**\r\n     * Allows the tab content panes to match heights if set to true.\r\n     * @option\r\n     * @example false\r\n     */\n    matchHeight: false,\n\n    /**\r\n     * Class applied to `li`'s in tab link list.\r\n     * @option\r\n     * @example 'tabs-title'\r\n     */\n    linkClass: 'tabs-title',\n\n    /**\r\n     * Class applied to the content containers.\r\n     * @option\r\n     * @example 'tabs-panel'\r\n     */\n    panelClass: 'tabs-panel'\n  };\n\n  function checkClass($elem) {\n    return $elem.hasClass('is-active');\n  }\n\n  // Window exports\n  Foundation.plugin(Tabs, 'Tabs');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Toggler module.\r\n   * @module foundation.toggler\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.triggers\r\n   */\n\n  var Toggler = function () {\n    /**\r\n     * Creates a new instance of Toggler.\r\n     * @class\r\n     * @fires Toggler#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Toggler(element, options) {\n      _classCallCheck(this, Toggler);\n\n      this.$element = element;\n      this.options = $.extend({}, Toggler.defaults, element.data(), options);\n      this.className = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Toggler');\n    }\n\n    /**\r\n     * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(Toggler, [{\n      key: '_init',\n      value: function _init() {\n        var input;\n        // Parse animation classes if they were set\n        if (this.options.animate) {\n          input = this.options.animate.split(' ');\n\n          this.animationIn = input[0];\n          this.animationOut = input[1] || null;\n        }\n        // Otherwise, parse toggle class\n        else {\n            input = this.$element.data('toggler');\n            // Allow for a . at the beginning of the string\n            this.className = input[0] === '.' ? input.slice(1) : input;\n          }\n\n        // Add ARIA attributes to triggers\n        var id = this.$element[0].id;\n        $('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-controls', id);\n        // If the target is hidden, add aria-hidden\n        this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n      }\n\n      /**\r\n       * Initializes events for the toggle trigger.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n      }\n\n      /**\r\n       * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\r\n       * @function\r\n       * @fires Toggler#on\r\n       * @fires Toggler#off\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        this[this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n      }\n    }, {\n      key: '_toggleClass',\n      value: function _toggleClass() {\n        this.$element.toggleClass(this.className);\n\n        var isOn = this.$element.hasClass(this.className);\n        if (isOn) {\n          /**\r\n           * Fires if the target element has the class after a toggle.\r\n           * @event Toggler#on\r\n           */\n          this.$element.trigger('on.zf.toggler');\n        } else {\n          /**\r\n           * Fires if the target element does not have the class after a toggle.\r\n           * @event Toggler#off\r\n           */\n          this.$element.trigger('off.zf.toggler');\n        }\n\n        this._updateARIA(isOn);\n      }\n    }, {\n      key: '_toggleAnimate',\n      value: function _toggleAnimate() {\n        var _this = this;\n\n        if (this.$element.is(':hidden')) {\n          Foundation.Motion.animateIn(this.$element, this.animationIn, function () {\n            _this._updateARIA(true);\n            this.trigger('on.zf.toggler');\n          });\n        } else {\n          Foundation.Motion.animateOut(this.$element, this.animationOut, function () {\n            _this._updateARIA(false);\n            this.trigger('off.zf.toggler');\n          });\n        }\n      }\n    }, {\n      key: '_updateARIA',\n      value: function _updateARIA(isOn) {\n        this.$element.attr('aria-expanded', isOn ? true : false);\n      }\n\n      /**\r\n       * Destroys the instance of Toggler on the element.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.toggler');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Toggler;\n  }();\n\n  Toggler.defaults = {\n    /**\r\n     * Tells the plugin if the element should animated when toggled.\r\n     * @option\r\n     * @example false\r\n     */\n    animate: false\n  };\n\n  // Window exports\n  Foundation.plugin(Toggler, 'Toggler');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Tooltip module.\r\n   * @module foundation.tooltip\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.triggers\r\n   */\n\n  var Tooltip = function () {\n    /**\r\n     * Creates a new instance of a Tooltip.\r\n     * @class\r\n     * @fires Tooltip#init\r\n     * @param {jQuery} element - jQuery object to attach a tooltip to.\r\n     * @param {Object} options - object to extend the default configuration.\r\n     */\n\n    function Tooltip(element, options) {\n      _classCallCheck(this, Tooltip);\n\n      this.$element = element;\n      this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n      this.isActive = false;\n      this.isClick = false;\n      this._init();\n\n      Foundation.registerPlugin(this, 'Tooltip');\n    }\n\n    /**\r\n     * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\r\n     * @private\r\n     */\n\n\n    _createClass(Tooltip, [{\n      key: '_init',\n      value: function _init() {\n        var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n        this.options.positionClass = this.options.positionClass || this._getPositionClass(this.$element);\n        this.options.tipText = this.options.tipText || this.$element.attr('title');\n        this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n        this.template.appendTo(document.body).text(this.options.tipText).hide();\n\n        this.$element.attr({\n          'title': '',\n          'aria-describedby': elemId,\n          'data-yeti-box': elemId,\n          'data-toggle': elemId,\n          'data-resize': elemId\n        }).addClass(this.options.triggerClass);\n\n        //helper variables to track movement on collisions\n        this.usedPositions = [];\n        this.counter = 4;\n        this.classChanged = false;\n\n        this._events();\n      }\n\n      /**\r\n       * Grabs the current positioning class, if present, and returns the value or an empty string.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_getPositionClass',\n      value: function _getPositionClass(element) {\n        if (!element) {\n          return '';\n        }\n        // var position = element.attr('class').match(/top|left|right/g);\n        var position = element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n        return position;\n      }\n    }, {\n      key: '_buildTemplate',\n\n      /**\r\n       * builds the tooltip element, adds attributes, and returns the template.\r\n       * @private\r\n       */\n      value: function _buildTemplate(id) {\n        var templateClasses = (this.options.tooltipClass + ' ' + this.options.positionClass + ' ' + this.options.templateClasses).trim();\n        var $template = $('<div></div>').addClass(templateClasses).attr({\n          'role': 'tooltip',\n          'aria-hidden': true,\n          'data-is-active': false,\n          'data-is-focus': false,\n          'id': id\n        });\n        return $template;\n      }\n\n      /**\r\n       * Function that gets called if a collision event is detected.\r\n       * @param {String} position - positioning class to try\r\n       * @private\r\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.template.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.template.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.template.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.template.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.template.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\r\n       * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\r\n       * if the tooltip is larger than the screen width, default to full width - any user selected margin\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        var position = this._getPositionClass(this.template),\n            $tipDims = Foundation.Box.GetDimensions(this.template),\n            $anchorDims = Foundation.Box.GetDimensions(this.$element),\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset,\n            _this = this;\n\n        if ($tipDims.width >= $tipDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.template)) {\n          this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $anchorDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          return false;\n        }\n\n        this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\r\n       * reveals the tooltip, and fires an event to close any other open tooltips on the page\r\n       * @fires Tooltip#closeme\r\n       * @fires Tooltip#show\r\n       * @function\r\n       */\n\n    }, {\n      key: 'show',\n      value: function show() {\n        if (this.options.showOn !== 'all' && !Foundation.MediaQuery.atLeast(this.options.showOn)) {\n          // console.error('The screen is too small to display this tooltip');\n          return false;\n        }\n\n        var _this = this;\n        this.template.css('visibility', 'hidden').show();\n        this._setPosition();\n\n        /**\r\n         * Fires to close all other open tooltips on the page\r\n         * @event Closeme#tooltip\r\n         */\n        this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n        this.template.attr({\n          'data-is-active': true,\n          'aria-hidden': false\n        });\n        _this.isActive = true;\n        // console.log(this.template);\n        this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function () {\n          //maybe do stuff?\n        });\n        /**\r\n         * Fires when the tooltip is shown\r\n         * @event Tooltip#show\r\n         */\n        this.$element.trigger('show.zf.tooltip');\n      }\n\n      /**\r\n       * Hides the current tooltip, and resets the positioning class if it was changed due to collision\r\n       * @fires Tooltip#hide\r\n       * @function\r\n       */\n\n    }, {\n      key: 'hide',\n      value: function hide() {\n        // console.log('hiding', this.$element.data('yeti-box'));\n        var _this = this;\n        this.template.stop().attr({\n          'aria-hidden': true,\n          'data-is-active': false\n        }).fadeOut(this.options.fadeOutDuration, function () {\n          _this.isActive = false;\n          _this.isClick = false;\n          if (_this.classChanged) {\n            _this.template.removeClass(_this._getPositionClass(_this.template)).addClass(_this.options.positionClass);\n\n            _this.usedPositions = [];\n            _this.counter = 4;\n            _this.classChanged = false;\n          }\n        });\n        /**\r\n         * fires when the tooltip is hidden\r\n         * @event Tooltip#hide\r\n         */\n        this.$element.trigger('hide.zf.tooltip');\n      }\n\n      /**\r\n       * adds event listeners for the tooltip and its anchor\r\n       * TODO combine some of the listeners like focus and mouseenter, etc.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        var $template = this.template;\n        var isFocus = false;\n\n        if (!this.options.disableHover) {\n\n          this.$element.on('mouseenter.zf.tooltip', function (e) {\n            if (!_this.isActive) {\n              _this.timeout = setTimeout(function () {\n                _this.show();\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.tooltip', function (e) {\n            clearTimeout(_this.timeout);\n            if (!isFocus || _this.isClick && !_this.options.clickOpen) {\n              _this.hide();\n            }\n          });\n        }\n\n        if (this.options.clickOpen) {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            if (_this.isClick) {\n              //_this.hide();\n              // _this.isClick = false;\n            } else {\n                _this.isClick = true;\n                if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n                  _this.show();\n                }\n              }\n          });\n        } else {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            _this.isClick = true;\n          });\n        }\n\n        if (!this.options.disableForTouch) {\n          this.$element.on('tap.zf.tooltip touchend.zf.tooltip', function (e) {\n            _this.isActive ? _this.hide() : _this.show();\n          });\n        }\n\n        this.$element.on({\n          // 'toggle.zf.trigger': this.toggle.bind(this),\n          // 'close.zf.trigger': this.hide.bind(this)\n          'close.zf.trigger': this.hide.bind(this)\n        });\n\n        this.$element.on('focus.zf.tooltip', function (e) {\n          isFocus = true;\n          if (_this.isClick) {\n            // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\n            // a real focus, otherwise on hover and come back we get bad behavior\n            if (!_this.options.clickOpen) {\n              isFocus = false;\n            }\n            return false;\n          } else {\n            _this.show();\n          }\n        }).on('focusout.zf.tooltip', function (e) {\n          isFocus = false;\n          _this.isClick = false;\n          _this.hide();\n        }).on('resizeme.zf.trigger', function () {\n          if (_this.isActive) {\n            _this._setPosition();\n          }\n        });\n      }\n\n      /**\r\n       * adds a toggle method, in addition to the static show() & hide() functions\r\n       * @function\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n\n      /**\r\n       * Destroys an instance of tooltip, removes template element from the view.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.attr('title', this.template.text()).off('.zf.trigger .zf.tootip')\n        //  .removeClass('has-tip')\n        .removeAttr('aria-describedby').removeAttr('data-yeti-box').removeAttr('data-toggle').removeAttr('data-resize');\n\n        this.template.remove();\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tooltip;\n  }();\n\n  Tooltip.defaults = {\n    disableForTouch: false,\n    /**\r\n     * Time, in ms, before a tooltip should open on hover.\r\n     * @option\r\n     * @example 200\r\n     */\n    hoverDelay: 200,\n    /**\r\n     * Time, in ms, a tooltip should take to fade into view.\r\n     * @option\r\n     * @example 150\r\n     */\n    fadeInDuration: 150,\n    /**\r\n     * Time, in ms, a tooltip should take to fade out of view.\r\n     * @option\r\n     * @example 150\r\n     */\n    fadeOutDuration: 150,\n    /**\r\n     * Disables hover events from opening the tooltip if set to true\r\n     * @option\r\n     * @example false\r\n     */\n    disableHover: false,\n    /**\r\n     * Optional addtional classes to apply to the tooltip template on init.\r\n     * @option\r\n     * @example 'my-cool-tip-class'\r\n     */\n    templateClasses: '',\n    /**\r\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\r\n     * @option\r\n     * @example 'tooltip'\r\n     */\n    tooltipClass: 'tooltip',\n    /**\r\n     * Class applied to the tooltip anchor element.\r\n     * @option\r\n     * @example 'has-tip'\r\n     */\n    triggerClass: 'has-tip',\n    /**\r\n     * Minimum breakpoint size at which to open the tooltip.\r\n     * @option\r\n     * @example 'small'\r\n     */\n    showOn: 'small',\n    /**\r\n     * Custom template to be used to generate markup for tooltip.\r\n     * @option\r\n     * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\r\n     */\n    template: '',\n    /**\r\n     * Text displayed in the tooltip template on open.\r\n     * @option\r\n     * @example 'Some cool space fact here.'\r\n     */\n    tipText: '',\n    touchCloseText: 'Tap to close.',\n    /**\r\n     * Allows the tooltip to remain open if triggered with a click or touch event.\r\n     * @option\r\n     * @example true\r\n     */\n    clickOpen: true,\n    /**\r\n     * Additional positioning classes, set by the JS\r\n     * @option\r\n     * @example 'top'\r\n     */\n    positionClass: '',\n    /**\r\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\r\n     * @option\r\n     * @example 10\r\n     */\n    vOffset: 10,\n    /**\r\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\r\n     * @option\r\n     * @example 12\r\n     */\n    hOffset: 12\n  };\n\n  /**\r\n   * TODO utilize resize event trigger\r\n   */\n\n  // Window exports\n  Foundation.plugin(Tooltip, 'Tooltip');\n}(jQuery);","window.whatInput = (function() {\r\n\r\n  'use strict';\r\n\r\n  /*\r\n    ---------------\r\n    variables\r\n    ---------------\r\n  */\r\n\r\n  // array of actively pressed keys\r\n  var activeKeys = [];\r\n\r\n  // cache document.body\r\n  var body;\r\n\r\n  // boolean: true if touch buffer timer is running\r\n  var buffer = false;\r\n\r\n  // the last used input type\r\n  var currentInput = null;\r\n\r\n  // `input` types that don't accept text\r\n  var nonTypingInputs = [\r\n    'button',\r\n    'checkbox',\r\n    'file',\r\n    'image',\r\n    'radio',\r\n    'reset',\r\n    'submit'\r\n  ];\r\n\r\n  // detect version of mouse wheel event to use\r\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n  var mouseWheel = detectWheel();\r\n\r\n  // list of modifier keys commonly used with the mouse and\r\n  // can be safely ignored to prevent false keyboard detection\r\n  var ignoreMap = [\r\n    16, // shift\r\n    17, // control\r\n    18, // alt\r\n    91, // Windows key / left Apple cmd\r\n    93  // Windows menu / right Apple cmd\r\n  ];\r\n\r\n  // mapping of events to input types\r\n  var inputMap = {\r\n    'keydown': 'keyboard',\r\n    'keyup': 'keyboard',\r\n    'mousedown': 'mouse',\r\n    'mousemove': 'mouse',\r\n    'MSPointerDown': 'pointer',\r\n    'MSPointerMove': 'pointer',\r\n    'pointerdown': 'pointer',\r\n    'pointermove': 'pointer',\r\n    'touchstart': 'touch'\r\n  };\r\n\r\n  // add correct mouse wheel event mapping to `inputMap`\r\n  inputMap[detectWheel()] = 'mouse';\r\n\r\n  // array of all used input types\r\n  var inputTypes = [];\r\n\r\n  // mapping of key codes to a common name\r\n  var keyMap = {\r\n    9: 'tab',\r\n    13: 'enter',\r\n    16: 'shift',\r\n    27: 'esc',\r\n    32: 'space',\r\n    37: 'left',\r\n    38: 'up',\r\n    39: 'right',\r\n    40: 'down'\r\n  };\r\n\r\n  // map of IE 10 pointer events\r\n  var pointerMap = {\r\n    2: 'touch',\r\n    3: 'touch', // treat pen like touch\r\n    4: 'mouse'\r\n  };\r\n\r\n  // touch buffer timer\r\n  var timer;\r\n\r\n\r\n  /*\r\n    ---------------\r\n    functions\r\n    ---------------\r\n  */\r\n\r\n  // allows events that are also triggered to be filtered out for `touchstart`\r\n  function eventBuffer() {\r\n    clearTimer();\r\n    setInput(event);\r\n\r\n    buffer = true;\r\n    timer = window.setTimeout(function() {\r\n      buffer = false;\r\n    }, 650);\r\n  }\r\n\r\n  function bufferedEvent(event) {\r\n    if (!buffer) setInput(event);\r\n  }\r\n\r\n  function unBufferedEvent(event) {\r\n    clearTimer();\r\n    setInput(event);\r\n  }\r\n\r\n  function clearTimer() {\r\n    window.clearTimeout(timer);\r\n  }\r\n\r\n  function setInput(event) {\r\n    var eventKey = key(event);\r\n    var value = inputMap[event.type];\r\n    if (value === 'pointer') value = pointerType(event);\r\n\r\n    // don't do anything if the value matches the input type already set\r\n    if (currentInput !== value) {\r\n      var eventTarget = target(event);\r\n      var eventTargetNode = eventTarget.nodeName.toLowerCase();\r\n      var eventTargetType = (eventTargetNode === 'input') ? eventTarget.getAttribute('type') : null;\r\n\r\n      if (\r\n        (// only if the user flag to allow typing in form fields isn't set\r\n        !body.hasAttribute('data-whatinput-formtyping') &&\r\n\r\n        // only if currentInput has a value\r\n        currentInput &&\r\n\r\n        // only if the input is `keyboard`\r\n        value === 'keyboard' &&\r\n\r\n        // not if the key is `TAB`\r\n        keyMap[eventKey] !== 'tab' &&\r\n\r\n        // only if the target is a form input that accepts text\r\n        (\r\n           eventTargetNode === 'textarea' ||\r\n           eventTargetNode === 'select' ||\r\n           (eventTargetNode === 'input' && nonTypingInputs.indexOf(eventTargetType) < 0)\r\n        )) || (\r\n          // ignore modifier keys\r\n          ignoreMap.indexOf(eventKey) > -1\r\n        )\r\n      ) {\r\n        // ignore keyboard typing\r\n      } else {\r\n        switchInput(value);\r\n      }\r\n    }\r\n\r\n    if (value === 'keyboard') logKeys(eventKey);\r\n  }\r\n\r\n  function switchInput(string) {\r\n    currentInput = string;\r\n    body.setAttribute('data-whatinput', currentInput);\r\n\r\n    if (inputTypes.indexOf(currentInput) === -1) inputTypes.push(currentInput);\r\n  }\r\n\r\n  function key(event) {\r\n    return (event.keyCode) ? event.keyCode : event.which;\r\n  }\r\n\r\n  function target(event) {\r\n    return event.target || event.srcElement;\r\n  }\r\n\r\n  function pointerType(event) {\r\n    if (typeof event.pointerType === 'number') {\r\n      return pointerMap[event.pointerType];\r\n    } else {\r\n      return (event.pointerType === 'pen') ? 'touch' : event.pointerType; // treat pen like touch\r\n    }\r\n  }\r\n\r\n  // keyboard logging\r\n  function logKeys(eventKey) {\r\n    if (activeKeys.indexOf(keyMap[eventKey]) === -1 && keyMap[eventKey]) activeKeys.push(keyMap[eventKey]);\r\n  }\r\n\r\n  function unLogKeys(event) {\r\n    var eventKey = key(event);\r\n    var arrayPos = activeKeys.indexOf(keyMap[eventKey]);\r\n\r\n    if (arrayPos !== -1) activeKeys.splice(arrayPos, 1);\r\n  }\r\n\r\n  function bindEvents() {\r\n    body = document.body;\r\n\r\n    // pointer events (mouse, pen, touch)\r\n    if (window.PointerEvent) {\r\n      body.addEventListener('pointerdown', bufferedEvent);\r\n      body.addEventListener('pointermove', bufferedEvent);\r\n    } else if (window.MSPointerEvent) {\r\n      body.addEventListener('MSPointerDown', bufferedEvent);\r\n      body.addEventListener('MSPointerMove', bufferedEvent);\r\n    } else {\r\n\r\n      // mouse events\r\n      body.addEventListener('mousedown', bufferedEvent);\r\n      body.addEventListener('mousemove', bufferedEvent);\r\n\r\n      // touch events\r\n      if ('ontouchstart' in window) {\r\n        body.addEventListener('touchstart', eventBuffer);\r\n      }\r\n    }\r\n\r\n    // mouse wheel\r\n    body.addEventListener(mouseWheel, bufferedEvent);\r\n\r\n    // keyboard events\r\n    body.addEventListener('keydown', unBufferedEvent);\r\n    body.addEventListener('keyup', unBufferedEvent);\r\n    document.addEventListener('keyup', unLogKeys);\r\n  }\r\n\r\n\r\n  /*\r\n    ---------------\r\n    utilities\r\n    ---------------\r\n  */\r\n\r\n  // detect version of mouse wheel event to use\r\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n  function detectWheel() {\r\n    return mouseWheel = 'onwheel' in document.createElement('div') ?\r\n      'wheel' : // Modern browsers support \"wheel\"\r\n\r\n      document.onmousewheel !== undefined ?\r\n        'mousewheel' : // Webkit and IE support at least \"mousewheel\"\r\n        'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\r\n  }\r\n\r\n\r\n  /*\r\n    ---------------\r\n    init\r\n\r\n    don't start script unless browser cuts the mustard,\r\n    also passes if polyfills are used\r\n    ---------------\r\n  */\r\n\r\n  if (\r\n    'addEventListener' in window &&\r\n    Array.prototype.indexOf\r\n  ) {\r\n\r\n    // if the dom is already ready already (script was placed at bottom of <body>)\r\n    if (document.body) {\r\n      bindEvents();\r\n\r\n    // otherwise wait for the dom to load (script was placed in the <head>)\r\n    } else {\r\n      document.addEventListener('DOMContentLoaded', bindEvents);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n    ---------------\r\n    api\r\n    ---------------\r\n  */\r\n\r\n  return {\r\n\r\n    // returns string: the current input type\r\n    ask: function() { return currentInput; },\r\n\r\n    // returns array: currently pressed keys\r\n    keys: function() { return activeKeys; },\r\n\r\n    // returns array: all the detected input types\r\n    types: function() { return inputTypes; },\r\n\r\n    // accepts string: manually set the input type\r\n    set: switchInput\r\n  };\r\n\r\n}());\r\n","!function($) {\r\n\r\n\"use strict\";\r\n\r\nvar FOUNDATION_VERSION = '6.2.4';\r\n\r\n// Global Foundation object\r\n// This is attached to the window, or used as a module for AMD/Browserify\r\nvar Foundation = {\r\n  version: FOUNDATION_VERSION,\r\n\r\n  /**\r\n   * Stores initialized plugins.\r\n   */\r\n  _plugins: {},\r\n\r\n  /**\r\n   * Stores generated unique ids for plugin instances\r\n   */\r\n  _uuids: [],\r\n\r\n  /**\r\n   * Returns a boolean for RTL support\r\n   */\r\n  rtl: function(){\r\n    return $('html').attr('dir') === 'rtl';\r\n  },\r\n  /**\r\n   * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\r\n   * @param {Object} plugin - The constructor of the plugin.\r\n   */\r\n  plugin: function(plugin, name) {\r\n    // Object key to use when adding to global Foundation object\r\n    // Examples: Foundation.Reveal, Foundation.OffCanvas\r\n    var className = (name || functionName(plugin));\r\n    // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\r\n    // Examples: data-reveal, data-off-canvas\r\n    var attrName  = hyphenate(className);\r\n\r\n    // Add to the Foundation object and the plugins list (for reflowing)\r\n    this._plugins[attrName] = this[className] = plugin;\r\n  },\r\n  /**\r\n   * @function\r\n   * Populates the _uuids array with pointers to each individual plugin instance.\r\n   * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\r\n   * Also fires the initialization event for each plugin, consolidating repetitive code.\r\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n   * @param {String} name - the name of the plugin, passed as a camelCased string.\r\n   * @fires Plugin#init\r\n   */\r\n  registerPlugin: function(plugin, name){\r\n    var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\r\n    plugin.uuid = this.GetYoDigits(6, pluginName);\r\n\r\n    if(!plugin.$element.attr(`data-${pluginName}`)){ plugin.$element.attr(`data-${pluginName}`, plugin.uuid); }\r\n    if(!plugin.$element.data('zfPlugin')){ plugin.$element.data('zfPlugin', plugin); }\r\n          /**\r\n           * Fires when the plugin has initialized.\r\n           * @event Plugin#init\r\n           */\r\n    plugin.$element.trigger(`init.zf.${pluginName}`);\r\n\r\n    this._uuids.push(plugin.uuid);\r\n\r\n    return;\r\n  },\r\n  /**\r\n   * @function\r\n   * Removes the plugins uuid from the _uuids array.\r\n   * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\r\n   * Also fires the destroyed event for the plugin, consolidating repetitive code.\r\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n   * @fires Plugin#destroyed\r\n   */\r\n  unregisterPlugin: function(plugin){\r\n    var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\r\n\r\n    this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\r\n    plugin.$element.removeAttr(`data-${pluginName}`).removeData('zfPlugin')\r\n          /**\r\n           * Fires when the plugin has been destroyed.\r\n           * @event Plugin#destroyed\r\n           */\r\n          .trigger(`destroyed.zf.${pluginName}`);\r\n    for(var prop in plugin){\r\n      plugin[prop] = null;//clean up script to prep for garbage collection.\r\n    }\r\n    return;\r\n  },\r\n\r\n  /**\r\n   * @function\r\n   * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\r\n   * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\r\n   * @default If no argument is passed, reflow all currently active plugins.\r\n   */\r\n   reInit: function(plugins){\r\n     var isJQ = plugins instanceof $;\r\n     try{\r\n       if(isJQ){\r\n         plugins.each(function(){\r\n           $(this).data('zfPlugin')._init();\r\n         });\r\n       }else{\r\n         var type = typeof plugins,\r\n         _this = this,\r\n         fns = {\r\n           'object': function(plgs){\r\n             plgs.forEach(function(p){\r\n               p = hyphenate(p);\r\n               $('[data-'+ p +']').foundation('_init');\r\n             });\r\n           },\r\n           'string': function(){\r\n             plugins = hyphenate(plugins);\r\n             $('[data-'+ plugins +']').foundation('_init');\r\n           },\r\n           'undefined': function(){\r\n             this['object'](Object.keys(_this._plugins));\r\n           }\r\n         };\r\n         fns[type](plugins);\r\n       }\r\n     }catch(err){\r\n       console.error(err);\r\n     }finally{\r\n       return plugins;\r\n     }\r\n   },\r\n\r\n  /**\r\n   * returns a random base-36 uid with namespacing\r\n   * @function\r\n   * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\r\n   * @param {String} namespace - name of plugin to be incorporated in uid, optional.\r\n   * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\r\n   * @returns {String} - unique id\r\n   */\r\n  GetYoDigits: function(length, namespace){\r\n    length = length || 6;\r\n    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1) + (namespace ? `-${namespace}` : '');\r\n  },\r\n  /**\r\n   * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\r\n   * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\r\n   * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\r\n   */\r\n  reflow: function(elem, plugins) {\r\n\r\n    // If plugins is undefined, just grab everything\r\n    if (typeof plugins === 'undefined') {\r\n      plugins = Object.keys(this._plugins);\r\n    }\r\n    // If plugins is a string, convert it to an array with one item\r\n    else if (typeof plugins === 'string') {\r\n      plugins = [plugins];\r\n    }\r\n\r\n    var _this = this;\r\n\r\n    // Iterate through each plugin\r\n    $.each(plugins, function(i, name) {\r\n      // Get the current plugin\r\n      var plugin = _this._plugins[name];\r\n\r\n      // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\r\n      var $elem = $(elem).find('[data-'+name+']').addBack('[data-'+name+']');\r\n\r\n      // For each plugin found, initialize it\r\n      $elem.each(function() {\r\n        var $el = $(this),\r\n            opts = {};\r\n        // Don't double-dip on plugins\r\n        if ($el.data('zfPlugin')) {\r\n          console.warn(\"Tried to initialize \"+name+\" on an element that already has a Foundation plugin.\");\r\n          return;\r\n        }\r\n\r\n        if($el.attr('data-options')){\r\n          var thing = $el.attr('data-options').split(';').forEach(function(e, i){\r\n            var opt = e.split(':').map(function(el){ return el.trim(); });\r\n            if(opt[0]) opts[opt[0]] = parseValue(opt[1]);\r\n          });\r\n        }\r\n        try{\r\n          $el.data('zfPlugin', new plugin($(this), opts));\r\n        }catch(er){\r\n          console.error(er);\r\n        }finally{\r\n          return;\r\n        }\r\n      });\r\n    });\r\n  },\r\n  getFnName: functionName,\r\n  transitionend: function($elem){\r\n    var transitions = {\r\n      'transition': 'transitionend',\r\n      'WebkitTransition': 'webkitTransitionEnd',\r\n      'MozTransition': 'transitionend',\r\n      'OTransition': 'otransitionend'\r\n    };\r\n    var elem = document.createElement('div'),\r\n        end;\r\n\r\n    for (var t in transitions){\r\n      if (typeof elem.style[t] !== 'undefined'){\r\n        end = transitions[t];\r\n      }\r\n    }\r\n    if(end){\r\n      return end;\r\n    }else{\r\n      end = setTimeout(function(){\r\n        $elem.triggerHandler('transitionend', [$elem]);\r\n      }, 1);\r\n      return 'transitionend';\r\n    }\r\n  }\r\n};\r\n\r\nFoundation.util = {\r\n  /**\r\n   * Function for applying a debounce effect to a function call.\r\n   * @function\r\n   * @param {Function} func - Function to be called at end of timeout.\r\n   * @param {Number} delay - Time in ms to delay the call of `func`.\r\n   * @returns function\r\n   */\r\n  throttle: function (func, delay) {\r\n    var timer = null;\r\n\r\n    return function () {\r\n      var context = this, args = arguments;\r\n\r\n      if (timer === null) {\r\n        timer = setTimeout(function () {\r\n          func.apply(context, args);\r\n          timer = null;\r\n        }, delay);\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n// TODO: consider not making this a jQuery function\r\n// TODO: need way to reflow vs. re-initialize\r\n/**\r\n * The Foundation jQuery method.\r\n * @param {String|Array} method - An action to perform on the current jQuery object.\r\n */\r\nvar foundation = function(method) {\r\n  var type = typeof method,\r\n      $meta = $('meta.foundation-mq'),\r\n      $noJS = $('.no-js');\r\n\r\n  if(!$meta.length){\r\n    $('<meta class=\"foundation-mq\">').appendTo(document.head);\r\n  }\r\n  if($noJS.length){\r\n    $noJS.removeClass('no-js');\r\n  }\r\n\r\n  if(type === 'undefined'){//needs to initialize the Foundation object, or an individual plugin.\r\n    Foundation.MediaQuery._init();\r\n    Foundation.reflow(this);\r\n  }else if(type === 'string'){//an individual method to invoke on a plugin or group of plugins\r\n    var args = Array.prototype.slice.call(arguments, 1);//collect all the arguments, if necessary\r\n    var plugClass = this.data('zfPlugin');//determine the class of plugin\r\n\r\n    if(plugClass !== undefined && plugClass[method] !== undefined){//make sure both the class and method exist\r\n      if(this.length === 1){//if there's only one, call it directly.\r\n          plugClass[method].apply(plugClass, args);\r\n      }else{\r\n        this.each(function(i, el){//otherwise loop through the jQuery collection and invoke the method on each\r\n          plugClass[method].apply($(el).data('zfPlugin'), args);\r\n        });\r\n      }\r\n    }else{//error for no class or no method\r\n      throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\r\n    }\r\n  }else{//error for invalid argument type\r\n    throw new TypeError(`We're sorry, ${type} is not a valid parameter. You must use a string representing the method you wish to invoke.`);\r\n  }\r\n  return this;\r\n};\r\n\r\nwindow.Foundation = Foundation;\r\n$.fn.foundation = foundation;\r\n\r\n// Polyfill for requestAnimationFrame\r\n(function() {\r\n  if (!Date.now || !window.Date.now)\r\n    window.Date.now = Date.now = function() { return new Date().getTime(); };\r\n\r\n  var vendors = ['webkit', 'moz'];\r\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\r\n      var vp = vendors[i];\r\n      window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\r\n      window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\r\n                                 || window[vp+'CancelRequestAnimationFrame']);\r\n  }\r\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)\r\n    || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\r\n    var lastTime = 0;\r\n    window.requestAnimationFrame = function(callback) {\r\n        var now = Date.now();\r\n        var nextTime = Math.max(lastTime + 16, now);\r\n        return setTimeout(function() { callback(lastTime = nextTime); },\r\n                          nextTime - now);\r\n    };\r\n    window.cancelAnimationFrame = clearTimeout;\r\n  }\r\n  /**\r\n   * Polyfill for performance.now, required by rAF\r\n   */\r\n  if(!window.performance || !window.performance.now){\r\n    window.performance = {\r\n      start: Date.now(),\r\n      now: function(){ return Date.now() - this.start; }\r\n    };\r\n  }\r\n})();\r\nif (!Function.prototype.bind) {\r\n  Function.prototype.bind = function(oThis) {\r\n    if (typeof this !== 'function') {\r\n      // closest thing possible to the ECMAScript 5\r\n      // internal IsCallable function\r\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n    }\r\n\r\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\r\n        fToBind = this,\r\n        fNOP    = function() {},\r\n        fBound  = function() {\r\n          return fToBind.apply(this instanceof fNOP\r\n                 ? this\r\n                 : oThis,\r\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\r\n        };\r\n\r\n    if (this.prototype) {\r\n      // native functions don't have a prototype\r\n      fNOP.prototype = this.prototype;\r\n    }\r\n    fBound.prototype = new fNOP();\r\n\r\n    return fBound;\r\n  };\r\n}\r\n// Polyfill to get the name of a function in IE9\r\nfunction functionName(fn) {\r\n  if (Function.prototype.name === undefined) {\r\n    var funcNameRegex = /function\\s([^(]{1,})\\(/;\r\n    var results = (funcNameRegex).exec((fn).toString());\r\n    return (results && results.length > 1) ? results[1].trim() : \"\";\r\n  }\r\n  else if (fn.prototype === undefined) {\r\n    return fn.constructor.name;\r\n  }\r\n  else {\r\n    return fn.prototype.constructor.name;\r\n  }\r\n}\r\nfunction parseValue(str){\r\n  if(/true/.test(str)) return true;\r\n  else if(/false/.test(str)) return false;\r\n  else if(!isNaN(str * 1)) return parseFloat(str);\r\n  return str;\r\n}\r\n// Convert PascalCase to kebab-case\r\n// Thank you: http://stackoverflow.com/a/8955580\r\nfunction hyphenate(str) {\r\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\nFoundation.Box = {\r\n  ImNotTouchingYou: ImNotTouchingYou,\r\n  GetDimensions: GetDimensions,\r\n  GetOffsets: GetOffsets\r\n}\r\n\r\n/**\r\n * Compares the dimensions of an element to a container and determines collision events with container.\r\n * @function\r\n * @param {jQuery} element - jQuery object to test for collisions.\r\n * @param {jQuery} parent - jQuery object to use as bounding container.\r\n * @param {Boolean} lrOnly - set to true to check left and right values only.\r\n * @param {Boolean} tbOnly - set to true to check top and bottom values only.\r\n * @default if no parent object passed, detects collisions with `window`.\r\n * @returns {Boolean} - true if collision free, false if a collision in any direction.\r\n */\r\nfunction ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\r\n  var eleDims = GetDimensions(element),\r\n      top, bottom, left, right;\r\n\r\n  if (parent) {\r\n    var parDims = GetDimensions(parent);\r\n\r\n    bottom = (eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top);\r\n    top    = (eleDims.offset.top >= parDims.offset.top);\r\n    left   = (eleDims.offset.left >= parDims.offset.left);\r\n    right  = (eleDims.offset.left + eleDims.width <= parDims.width + parDims.offset.left);\r\n  }\r\n  else {\r\n    bottom = (eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top);\r\n    top    = (eleDims.offset.top >= eleDims.windowDims.offset.top);\r\n    left   = (eleDims.offset.left >= eleDims.windowDims.offset.left);\r\n    right  = (eleDims.offset.left + eleDims.width <= eleDims.windowDims.width);\r\n  }\r\n\r\n  var allDirs = [bottom, top, left, right];\r\n\r\n  if (lrOnly) {\r\n    return left === right === true;\r\n  }\r\n\r\n  if (tbOnly) {\r\n    return top === bottom === true;\r\n  }\r\n\r\n  return allDirs.indexOf(false) === -1;\r\n};\r\n\r\n/**\r\n * Uses native methods to return an object of dimension values.\r\n * @function\r\n * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\r\n * @returns {Object} - nested object of integer pixel values\r\n * TODO - if element is window, return only those values.\r\n */\r\nfunction GetDimensions(elem, test){\r\n  elem = elem.length ? elem[0] : elem;\r\n\r\n  if (elem === window || elem === document) {\r\n    throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\r\n  }\r\n\r\n  var rect = elem.getBoundingClientRect(),\r\n      parRect = elem.parentNode.getBoundingClientRect(),\r\n      winRect = document.body.getBoundingClientRect(),\r\n      winY = window.pageYOffset,\r\n      winX = window.pageXOffset;\r\n\r\n  return {\r\n    width: rect.width,\r\n    height: rect.height,\r\n    offset: {\r\n      top: rect.top + winY,\r\n      left: rect.left + winX\r\n    },\r\n    parentDims: {\r\n      width: parRect.width,\r\n      height: parRect.height,\r\n      offset: {\r\n        top: parRect.top + winY,\r\n        left: parRect.left + winX\r\n      }\r\n    },\r\n    windowDims: {\r\n      width: winRect.width,\r\n      height: winRect.height,\r\n      offset: {\r\n        top: winY,\r\n        left: winX\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an object of top and left integer pixel values for dynamically rendered elements,\r\n * such as: Tooltip, Reveal, and Dropdown\r\n * @function\r\n * @param {jQuery} element - jQuery object for the element being positioned.\r\n * @param {jQuery} anchor - jQuery object for the element's anchor point.\r\n * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\r\n * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\r\n * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\r\n * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\r\n * TODO alter/rewrite to work with `em` values as well/instead of pixels\r\n */\r\nfunction GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\r\n  var $eleDims = GetDimensions(element),\r\n      $anchorDims = anchor ? GetDimensions(anchor) : null;\r\n\r\n  switch (position) {\r\n    case 'top':\r\n      return {\r\n        left: (Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left),\r\n        top: $anchorDims.offset.top - ($eleDims.height + vOffset)\r\n      }\r\n      break;\r\n    case 'left':\r\n      return {\r\n        left: $anchorDims.offset.left - ($eleDims.width + hOffset),\r\n        top: $anchorDims.offset.top\r\n      }\r\n      break;\r\n    case 'right':\r\n      return {\r\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset,\r\n        top: $anchorDims.offset.top\r\n      }\r\n      break;\r\n    case 'center top':\r\n      return {\r\n        left: ($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2),\r\n        top: $anchorDims.offset.top - ($eleDims.height + vOffset)\r\n      }\r\n      break;\r\n    case 'center bottom':\r\n      return {\r\n        left: isOverflow ? hOffset : (($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2)),\r\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\r\n      }\r\n      break;\r\n    case 'center left':\r\n      return {\r\n        left: $anchorDims.offset.left - ($eleDims.width + hOffset),\r\n        top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\r\n      }\r\n      break;\r\n    case 'center right':\r\n      return {\r\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\r\n        top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\r\n      }\r\n      break;\r\n    case 'center':\r\n      return {\r\n        left: ($eleDims.windowDims.offset.left + ($eleDims.windowDims.width / 2)) - ($eleDims.width / 2),\r\n        top: ($eleDims.windowDims.offset.top + ($eleDims.windowDims.height / 2)) - ($eleDims.height / 2)\r\n      }\r\n      break;\r\n    case 'reveal':\r\n      return {\r\n        left: ($eleDims.windowDims.width - $eleDims.width) / 2,\r\n        top: $eleDims.windowDims.offset.top + vOffset\r\n      }\r\n    case 'reveal full':\r\n      return {\r\n        left: $eleDims.windowDims.offset.left,\r\n        top: $eleDims.windowDims.offset.top\r\n      }\r\n      break;\r\n    case 'left bottom':\r\n      return {\r\n        left: $anchorDims.offset.left,\r\n        top: $anchorDims.offset.top + $anchorDims.height\r\n      };\r\n      break;\r\n    case 'right bottom':\r\n      return {\r\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset - $eleDims.width,\r\n        top: $anchorDims.offset.top + $anchorDims.height\r\n      };\r\n      break;\r\n    default:\r\n      return {\r\n        left: (Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left + hOffset),\r\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\r\n      }\r\n  }\r\n}\r\n\r\n}(jQuery);\r\n","/*******************************************\r\n *                                         *\r\n * This util was created by Marius Olbertz *\r\n * Please thank Marius on GitHub /owlbertz *\r\n * or the web http://www.mariusolbertz.de/ *\r\n *                                         *\r\n ******************************************/\r\n\r\n'use strict';\r\n\r\n!function($) {\r\n\r\nconst keyCodes = {\r\n  9: 'TAB',\r\n  13: 'ENTER',\r\n  27: 'ESCAPE',\r\n  32: 'SPACE',\r\n  37: 'ARROW_LEFT',\r\n  38: 'ARROW_UP',\r\n  39: 'ARROW_RIGHT',\r\n  40: 'ARROW_DOWN'\r\n}\r\n\r\nvar commands = {}\r\n\r\nvar Keyboard = {\r\n  keys: getKeyCodes(keyCodes),\r\n\r\n  /**\r\n   * Parses the (keyboard) event and returns a String that represents its key\r\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n   * @param {Event} event - the event generated by the event handler\r\n   * @return String key - String that represents the key pressed\r\n   */\r\n  parseKey(event) {\r\n    var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\r\n    if (event.shiftKey) key = `SHIFT_${key}`;\r\n    if (event.ctrlKey) key = `CTRL_${key}`;\r\n    if (event.altKey) key = `ALT_${key}`;\r\n    return key;\r\n  },\r\n\r\n  /**\r\n   * Handles the given (keyboard) event\r\n   * @param {Event} event - the event generated by the event handler\r\n   * @param {String} component - Foundation component's name, e.g. Slider or Reveal\r\n   * @param {Objects} functions - collection of functions that are to be executed\r\n   */\r\n  handleKey(event, component, functions) {\r\n    var commandList = commands[component],\r\n      keyCode = this.parseKey(event),\r\n      cmds,\r\n      command,\r\n      fn;\r\n\r\n    if (!commandList) return console.warn('Component not defined!');\r\n\r\n    if (typeof commandList.ltr === 'undefined') { // this component does not differentiate between ltr and rtl\r\n        cmds = commandList; // use plain list\r\n    } else { // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\r\n        if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);\r\n\r\n        else cmds = $.extend({}, commandList.rtl, commandList.ltr);\r\n    }\r\n    command = cmds[keyCode];\r\n\r\n    fn = functions[command];\r\n    if (fn && typeof fn === 'function') { // execute function  if exists\r\n      var returnValue = fn.apply();\r\n      if (functions.handled || typeof functions.handled === 'function') { // execute function when event was handled\r\n          functions.handled(returnValue);\r\n      }\r\n    } else {\r\n      if (functions.unhandled || typeof functions.unhandled === 'function') { // execute function when event was not handled\r\n          functions.unhandled();\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Finds all focusable elements within the given `$element`\r\n   * @param {jQuery} $element - jQuery object to search within\r\n   * @return {jQuery} $focusable - all focusable elements within `$element`\r\n   */\r\n  findFocusable($element) {\r\n    return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function() {\r\n      if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) { return false; } //only have visible elements and those that have a tabindex greater or equal 0\r\n      return true;\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Returns the component name name\r\n   * @param {Object} component - Foundation component, e.g. Slider or Reveal\r\n   * @return String componentName\r\n   */\r\n\r\n  register(componentName, cmds) {\r\n    commands[componentName] = cmds;\r\n  }\r\n}\r\n\r\n/*\r\n * Constants for easier comparing.\r\n * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n */\r\nfunction getKeyCodes(kcs) {\r\n  var k = {};\r\n  for (var kc in kcs) k[kcs[kc]] = kcs[kc];\r\n  return k;\r\n}\r\n\r\nFoundation.Keyboard = Keyboard;\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n// Default set of media queries\r\nconst defaultQueries = {\r\n  'default' : 'only screen',\r\n  landscape : 'only screen and (orientation: landscape)',\r\n  portrait : 'only screen and (orientation: portrait)',\r\n  retina : 'only screen and (-webkit-min-device-pixel-ratio: 2),' +\r\n    'only screen and (min--moz-device-pixel-ratio: 2),' +\r\n    'only screen and (-o-min-device-pixel-ratio: 2/1),' +\r\n    'only screen and (min-device-pixel-ratio: 2),' +\r\n    'only screen and (min-resolution: 192dpi),' +\r\n    'only screen and (min-resolution: 2dppx)'\r\n};\r\n\r\nvar MediaQuery = {\r\n  queries: [],\r\n\r\n  current: '',\r\n\r\n  /**\r\n   * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var self = this;\r\n    var extractedStyles = $('.foundation-mq').css('font-family');\r\n    var namedQueries;\r\n\r\n    namedQueries = parseStyleToObject(extractedStyles);\r\n\r\n    for (var key in namedQueries) {\r\n      if(namedQueries.hasOwnProperty(key)) {\r\n        self.queries.push({\r\n          name: key,\r\n          value: `only screen and (min-width: ${namedQueries[key]})`\r\n        });\r\n      }\r\n    }\r\n\r\n    this.current = this._getCurrentSize();\r\n\r\n    this._watcher();\r\n  },\r\n\r\n  /**\r\n   * Checks if the screen is at least as wide as a breakpoint.\r\n   * @function\r\n   * @param {String} size - Name of the breakpoint to check.\r\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\r\n   */\r\n  atLeast(size) {\r\n    var query = this.get(size);\r\n\r\n    if (query) {\r\n      return window.matchMedia(query).matches;\r\n    }\r\n\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Gets the media query of a breakpoint.\r\n   * @function\r\n   * @param {String} size - Name of the breakpoint to get.\r\n   * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\r\n   */\r\n  get(size) {\r\n    for (var i in this.queries) {\r\n      if(this.queries.hasOwnProperty(i)) {\r\n        var query = this.queries[i];\r\n        if (size === query.name) return query.value;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  /**\r\n   * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\r\n   * @function\r\n   * @private\r\n   * @returns {String} Name of the current breakpoint.\r\n   */\r\n  _getCurrentSize() {\r\n    var matched;\r\n\r\n    for (var i = 0; i < this.queries.length; i++) {\r\n      var query = this.queries[i];\r\n\r\n      if (window.matchMedia(query.value).matches) {\r\n        matched = query;\r\n      }\r\n    }\r\n\r\n    if (typeof matched === 'object') {\r\n      return matched.name;\r\n    } else {\r\n      return matched;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\r\n   * @function\r\n   * @private\r\n   */\r\n  _watcher() {\r\n    $(window).on('resize.zf.mediaquery', () => {\r\n      var newSize = this._getCurrentSize(), currentSize = this.current;\r\n\r\n      if (newSize !== currentSize) {\r\n        // Change the current media query\r\n        this.current = newSize;\r\n\r\n        // Broadcast the media query change on the window\r\n        $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nFoundation.MediaQuery = MediaQuery;\r\n\r\n// matchMedia() polyfill - Test a CSS media type/query in JS.\r\n// Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\r\nwindow.matchMedia || (window.matchMedia = function() {\r\n  'use strict';\r\n\r\n  // For browsers that support matchMedium api such as IE 9 and webkit\r\n  var styleMedia = (window.styleMedia || window.media);\r\n\r\n  // For those that don't support matchMedium\r\n  if (!styleMedia) {\r\n    var style   = document.createElement('style'),\r\n    script      = document.getElementsByTagName('script')[0],\r\n    info        = null;\r\n\r\n    style.type  = 'text/css';\r\n    style.id    = 'matchmediajs-test';\r\n\r\n    script && script.parentNode && script.parentNode.insertBefore(style, script);\r\n\r\n    // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\r\n    info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\r\n\r\n    styleMedia = {\r\n      matchMedium(media) {\r\n        var text = `@media ${media}{ #matchmediajs-test { width: 1px; } }`;\r\n\r\n        // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\r\n        if (style.styleSheet) {\r\n          style.styleSheet.cssText = text;\r\n        } else {\r\n          style.textContent = text;\r\n        }\r\n\r\n        // Test if media query is true or false\r\n        return info.width === '1px';\r\n      }\r\n    }\r\n  }\r\n\r\n  return function(media) {\r\n    return {\r\n      matches: styleMedia.matchMedium(media || 'all'),\r\n      media: media || 'all'\r\n    };\r\n  }\r\n}());\r\n\r\n// Thank you: https://github.com/sindresorhus/query-string\r\nfunction parseStyleToObject(str) {\r\n  var styleObject = {};\r\n\r\n  if (typeof str !== 'string') {\r\n    return styleObject;\r\n  }\r\n\r\n  str = str.trim().slice(1, -1); // browsers re-quote string style values\r\n\r\n  if (!str) {\r\n    return styleObject;\r\n  }\r\n\r\n  styleObject = str.split('&').reduce(function(ret, param) {\r\n    var parts = param.replace(/\\+/g, ' ').split('=');\r\n    var key = parts[0];\r\n    var val = parts[1];\r\n    key = decodeURIComponent(key);\r\n\r\n    // missing `=` should be `null`:\r\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\r\n    val = val === undefined ? null : decodeURIComponent(val);\r\n\r\n    if (!ret.hasOwnProperty(key)) {\r\n      ret[key] = val;\r\n    } else if (Array.isArray(ret[key])) {\r\n      ret[key].push(val);\r\n    } else {\r\n      ret[key] = [ret[key], val];\r\n    }\r\n    return ret;\r\n  }, {});\r\n\r\n  return styleObject;\r\n}\r\n\r\nFoundation.MediaQuery = MediaQuery;\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Motion module.\r\n * @module foundation.motion\r\n */\r\n\r\nconst initClasses   = ['mui-enter', 'mui-leave'];\r\nconst activeClasses = ['mui-enter-active', 'mui-leave-active'];\r\n\r\nconst Motion = {\r\n  animateIn: function(element, animation, cb) {\r\n    animate(true, element, animation, cb);\r\n  },\r\n\r\n  animateOut: function(element, animation, cb) {\r\n    animate(false, element, animation, cb);\r\n  }\r\n}\r\n\r\nfunction Move(duration, elem, fn){\r\n  var anim, prog, start = null;\r\n  // console.log('called');\r\n\r\n  function move(ts){\r\n    if(!start) start = window.performance.now();\r\n    // console.log(start, ts);\r\n    prog = ts - start;\r\n    fn.apply(elem);\r\n\r\n    if(prog < duration){ anim = window.requestAnimationFrame(move, elem); }\r\n    else{\r\n      window.cancelAnimationFrame(anim);\r\n      elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\r\n    }\r\n  }\r\n  anim = window.requestAnimationFrame(move);\r\n}\r\n\r\n/**\r\n * Animates an element in or out using a CSS transition class.\r\n * @function\r\n * @private\r\n * @param {Boolean} isIn - Defines if the animation is in or out.\r\n * @param {Object} element - jQuery or HTML object to animate.\r\n * @param {String} animation - CSS class to use.\r\n * @param {Function} cb - Callback to run when animation is finished.\r\n */\r\nfunction animate(isIn, element, animation, cb) {\r\n  element = $(element).eq(0);\r\n\r\n  if (!element.length) return;\r\n\r\n  var initClass = isIn ? initClasses[0] : initClasses[1];\r\n  var activeClass = isIn ? activeClasses[0] : activeClasses[1];\r\n\r\n  // Set up the animation\r\n  reset();\r\n\r\n  element\r\n    .addClass(animation)\r\n    .css('transition', 'none');\r\n\r\n  requestAnimationFrame(() => {\r\n    element.addClass(initClass);\r\n    if (isIn) element.show();\r\n  });\r\n\r\n  // Start the animation\r\n  requestAnimationFrame(() => {\r\n    element[0].offsetWidth;\r\n    element\r\n      .css('transition', '')\r\n      .addClass(activeClass);\r\n  });\r\n\r\n  // Clean up the animation when it finishes\r\n  element.one(Foundation.transitionend(element), finish);\r\n\r\n  // Hides the element (for out animations), resets the element, and runs a callback\r\n  function finish() {\r\n    if (!isIn) element.hide();\r\n    reset();\r\n    if (cb) cb.apply(element);\r\n  }\r\n\r\n  // Resets transitions and removes motion-specific classes\r\n  function reset() {\r\n    element[0].style.transitionDuration = 0;\r\n    element.removeClass(`${initClass} ${activeClass} ${animation}`);\r\n  }\r\n}\r\n\r\nFoundation.Move = Move;\r\nFoundation.Motion = Motion;\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\nconst Nest = {\r\n  Feather(menu, type = 'zf') {\r\n    menu.attr('role', 'menubar');\r\n\r\n    var items = menu.find('li').attr({'role': 'menuitem'}),\r\n        subMenuClass = `is-${type}-submenu`,\r\n        subItemClass = `${subMenuClass}-item`,\r\n        hasSubClass = `is-${type}-submenu-parent`;\r\n\r\n    menu.find('a:first').attr('tabindex', 0);\r\n\r\n    items.each(function() {\r\n      var $item = $(this),\r\n          $sub = $item.children('ul');\r\n\r\n      if ($sub.length) {\r\n        $item\r\n          .addClass(hasSubClass)\r\n          .attr({\r\n            'aria-haspopup': true,\r\n            'aria-expanded': false,\r\n            'aria-label': $item.children('a:first').text()\r\n          });\r\n\r\n        $sub\r\n          .addClass(`submenu ${subMenuClass}`)\r\n          .attr({\r\n            'data-submenu': '',\r\n            'aria-hidden': true,\r\n            'role': 'menu'\r\n          });\r\n      }\r\n\r\n      if ($item.parent('[data-submenu]').length) {\r\n        $item.addClass(`is-submenu-item ${subItemClass}`);\r\n      }\r\n    });\r\n\r\n    return;\r\n  },\r\n\r\n  Burn(menu, type) {\r\n    var items = menu.find('li').removeAttr('tabindex'),\r\n        subMenuClass = `is-${type}-submenu`,\r\n        subItemClass = `${subMenuClass}-item`,\r\n        hasSubClass = `is-${type}-submenu-parent`;\r\n\r\n    menu\r\n      .find('>li, .menu, .menu > li')\r\n      .removeClass(`${subMenuClass} ${subItemClass} ${hasSubClass} is-submenu-item submenu is-active`)\r\n      .removeAttr('data-submenu').css('display', '');\r\n\r\n    // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\r\n    //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\r\n    //           .removeAttr('data-submenu'));\r\n    // items.each(function(){\r\n    //   var $item = $(this),\r\n    //       $sub = $item.children('ul');\r\n    //   if($item.parent('[data-submenu]').length){\r\n    //     $item.removeClass('is-submenu-item ' + subItemClass);\r\n    //   }\r\n    //   if($sub.length){\r\n    //     $item.removeClass('has-submenu');\r\n    //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\r\n    //   }\r\n    // });\r\n  }\r\n}\r\n\r\nFoundation.Nest = Nest;\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\nfunction Timer(elem, options, cb) {\r\n  var _this = this,\r\n      duration = options.duration,//options is an object for easily adding features later.\r\n      nameSpace = Object.keys(elem.data())[0] || 'timer',\r\n      remain = -1,\r\n      start,\r\n      timer;\r\n\r\n  this.isPaused = false;\r\n\r\n  this.restart = function() {\r\n    remain = -1;\r\n    clearTimeout(timer);\r\n    this.start();\r\n  }\r\n\r\n  this.start = function() {\r\n    this.isPaused = false;\r\n    // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\r\n    clearTimeout(timer);\r\n    remain = remain <= 0 ? duration : remain;\r\n    elem.data('paused', false);\r\n    start = Date.now();\r\n    timer = setTimeout(function(){\r\n      if(options.infinite){\r\n        _this.restart();//rerun the timer.\r\n      }\r\n      if (cb && typeof cb === 'function') { cb(); }\r\n    }, remain);\r\n    elem.trigger(`timerstart.zf.${nameSpace}`);\r\n  }\r\n\r\n  this.pause = function() {\r\n    this.isPaused = true;\r\n    //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\r\n    clearTimeout(timer);\r\n    elem.data('paused', true);\r\n    var end = Date.now();\r\n    remain = remain - (end - start);\r\n    elem.trigger(`timerpaused.zf.${nameSpace}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Runs a callback function when images are fully loaded.\r\n * @param {Object} images - Image(s) to check if loaded.\r\n * @param {Func} callback - Function to execute when image is fully loaded.\r\n */\r\nfunction onImagesLoaded(images, callback){\r\n  var self = this,\r\n      unloaded = images.length;\r\n\r\n  if (unloaded === 0) {\r\n    callback();\r\n  }\r\n\r\n  images.each(function() {\r\n    if (this.complete) {\r\n      singleImageLoaded();\r\n    }\r\n    else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\r\n      singleImageLoaded();\r\n    }\r\n    else {\r\n      $(this).one('load', function() {\r\n        singleImageLoaded();\r\n      });\r\n    }\r\n  });\r\n\r\n  function singleImageLoaded() {\r\n    unloaded--;\r\n    if (unloaded === 0) {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\nFoundation.Timer = Timer;\r\nFoundation.onImagesLoaded = onImagesLoaded;\r\n\r\n}(jQuery);\r\n","//**************************************************\r\n//**Work inspired by multiple jquery swipe plugins**\r\n//**Done by Yohai Ararat ***************************\r\n//**************************************************\r\n(function($) {\r\n\r\n  $.spotSwipe = {\r\n    version: '1.0.0',\r\n    enabled: 'ontouchstart' in document.documentElement,\r\n    preventDefault: false,\r\n    moveThreshold: 75,\r\n    timeThreshold: 200\r\n  };\r\n\r\n  var   startPosX,\r\n        startPosY,\r\n        startTime,\r\n        elapsedTime,\r\n        isMoving = false;\r\n\r\n  function onTouchEnd() {\r\n    //  alert(this);\r\n    this.removeEventListener('touchmove', onTouchMove);\r\n    this.removeEventListener('touchend', onTouchEnd);\r\n    isMoving = false;\r\n  }\r\n\r\n  function onTouchMove(e) {\r\n    if ($.spotSwipe.preventDefault) { e.preventDefault(); }\r\n    if(isMoving) {\r\n      var x = e.touches[0].pageX;\r\n      var y = e.touches[0].pageY;\r\n      var dx = startPosX - x;\r\n      var dy = startPosY - y;\r\n      var dir;\r\n      elapsedTime = new Date().getTime() - startTime;\r\n      if(Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\r\n        dir = dx > 0 ? 'left' : 'right';\r\n      }\r\n      // else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\r\n      //   dir = dy > 0 ? 'down' : 'up';\r\n      // }\r\n      if(dir) {\r\n        e.preventDefault();\r\n        onTouchEnd.call(this);\r\n        $(this).trigger('swipe', dir).trigger(`swipe${dir}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  function onTouchStart(e) {\r\n    if (e.touches.length == 1) {\r\n      startPosX = e.touches[0].pageX;\r\n      startPosY = e.touches[0].pageY;\r\n      isMoving = true;\r\n      startTime = new Date().getTime();\r\n      this.addEventListener('touchmove', onTouchMove, false);\r\n      this.addEventListener('touchend', onTouchEnd, false);\r\n    }\r\n  }\r\n\r\n  function init() {\r\n    this.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\r\n  }\r\n\r\n  function teardown() {\r\n    this.removeEventListener('touchstart', onTouchStart);\r\n  }\r\n\r\n  $.event.special.swipe = { setup: init };\r\n\r\n  $.each(['left', 'up', 'down', 'right'], function () {\r\n    $.event.special[`swipe${this}`] = { setup: function(){\r\n      $(this).on('swipe', $.noop);\r\n    } };\r\n  });\r\n})(jQuery);\r\n/****************************************************\r\n * Method for adding psuedo drag events to elements *\r\n ***************************************************/\r\n!function($){\r\n  $.fn.addTouch = function(){\r\n    this.each(function(i,el){\r\n      $(el).bind('touchstart touchmove touchend touchcancel',function(){\r\n        //we pass the original event object because the jQuery event\r\n        //object is normalized to w3c specs and does not provide the TouchList\r\n        handleTouch(event);\r\n      });\r\n    });\r\n\r\n    var handleTouch = function(event){\r\n      var touches = event.changedTouches,\r\n          first = touches[0],\r\n          eventTypes = {\r\n            touchstart: 'mousedown',\r\n            touchmove: 'mousemove',\r\n            touchend: 'mouseup'\r\n          },\r\n          type = eventTypes[event.type],\r\n          simulatedEvent\r\n        ;\r\n\r\n      if('MouseEvent' in window && typeof window.MouseEvent === 'function') {\r\n        simulatedEvent = new window.MouseEvent(type, {\r\n          'bubbles': true,\r\n          'cancelable': true,\r\n          'screenX': first.screenX,\r\n          'screenY': first.screenY,\r\n          'clientX': first.clientX,\r\n          'clientY': first.clientY\r\n        });\r\n      } else {\r\n        simulatedEvent = document.createEvent('MouseEvent');\r\n        simulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0/*left*/, null);\r\n      }\r\n      first.target.dispatchEvent(simulatedEvent);\r\n    };\r\n  };\r\n}(jQuery);\r\n\r\n\r\n//**********************************\r\n//**From the jQuery Mobile Library**\r\n//**need to recreate functionality**\r\n//**and try to improve if possible**\r\n//**********************************\r\n\r\n/* Removing the jQuery function ****\r\n************************************\r\n\r\n(function( $, window, undefined ) {\r\n\r\n\tvar $document = $( document ),\r\n\t\t// supportTouch = $.mobile.support.touch,\r\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\r\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\r\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\r\n\r\n\t// setup new event shortcuts\r\n\t$.each( ( \"touchstart touchmove touchend \" +\r\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\r\n\r\n\t\t$.fn[ name ] = function( fn ) {\r\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\r\n\t\t};\r\n\r\n\t\t// jQuery < 1.8\r\n\t\tif ( $.attrFn ) {\r\n\t\t\t$.attrFn[ name ] = true;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\r\n\t\tvar originalType = event.type;\r\n\t\tevent.type = eventType;\r\n\t\tif ( bubble ) {\r\n\t\t\t$.event.trigger( event, undefined, obj );\r\n\t\t} else {\r\n\t\t\t$.event.dispatch.call( obj, event );\r\n\t\t}\r\n\t\tevent.type = originalType;\r\n\t}\r\n\r\n\t// also handles taphold\r\n\r\n\t// Also handles swipeleft, swiperight\r\n\t$.event.special.swipe = {\r\n\r\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\r\n\t\tscrollSupressionThreshold: 30,\r\n\r\n\t\t// More time than this, and it isn't a swipe.\r\n\t\tdurationThreshold: 1000,\r\n\r\n\t\t// Swipe horizontal displacement must be more than this.\r\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\t// Swipe vertical displacement must be less than this.\r\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\tgetLocation: function ( event ) {\r\n\t\t\tvar winPageX = window.pageXOffset,\r\n\t\t\t\twinPageY = window.pageYOffset,\r\n\t\t\t\tx = event.clientX,\r\n\t\t\t\ty = event.clientY;\r\n\r\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\r\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\r\n\r\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\r\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\r\n\t\t\t\tx = x - winPageX;\r\n\t\t\t\ty = y - winPageY;\r\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\r\n\r\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\r\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\r\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\r\n\t\t\t\tx = event.pageX - winPageX;\r\n\t\t\t\ty = event.pageY - winPageY;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tstart: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\r\n\t\t\t\t\t\torigin: $( event.target )\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\tstop: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\r\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\r\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\r\n\r\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\r\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t// This serves as a flag to ensure that at most one swipe event event is\r\n\t\t// in work at any given time\r\n\t\teventInProgress: false,\r\n\r\n\t\tsetup: function() {\r\n\t\t\tvar events,\r\n\t\t\t\tthisObject = this,\r\n\t\t\t\t$this = $( thisObject ),\r\n\t\t\t\tcontext = {};\r\n\r\n\t\t\t// Retrieve the events data for this element and add the swipe context\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( !events ) {\r\n\t\t\t\tevents = { length: 0 };\r\n\t\t\t\t$.data( this, \"mobile-events\", events );\r\n\t\t\t}\r\n\t\t\tevents.length++;\r\n\t\t\tevents.swipe = context;\r\n\r\n\t\t\tcontext.start = function( event ) {\r\n\r\n\t\t\t\t// Bail if we're already working on a swipe event\r\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\r\n\r\n\t\t\t\tvar stop,\r\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\r\n\t\t\t\t\torigTarget = event.target,\r\n\t\t\t\t\temitted = false;\r\n\r\n\t\t\t\tcontext.move = function( event ) {\r\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\r\n\t\t\t\t\tif ( !emitted ) {\r\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\r\n\t\t\t\t\t\tif ( emitted ) {\r\n\r\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// prevent scrolling\r\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcontext.stop = function() {\r\n\t\t\t\t\t\temitted = true;\r\n\r\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t\t\tcontext.move = null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$document.on( touchMoveEvent, context.move )\r\n\t\t\t\t\t.one( touchStopEvent, context.stop );\r\n\t\t\t};\r\n\t\t\t$this.on( touchStartEvent, context.start );\r\n\t\t},\r\n\r\n\t\tteardown: function() {\r\n\t\t\tvar events, context;\r\n\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( events ) {\r\n\t\t\t\tcontext = events.swipe;\r\n\t\t\t\tdelete events.swipe;\r\n\t\t\t\tevents.length--;\r\n\t\t\t\tif ( events.length === 0 ) {\r\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( context ) {\r\n\t\t\t\tif ( context.start ) {\r\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.move ) {\r\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.stop ) {\r\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t$.each({\r\n\t\tswipeleft: \"swipe.left\",\r\n\t\tswiperight: \"swipe.right\"\r\n\t}, function( event, sourceEvent ) {\r\n\r\n\t\t$.event.special[ event ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\t$( this ).unbind( sourceEvent );\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n})( jQuery, this );\r\n*/\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\nconst MutationObserver = (function () {\r\n  var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\r\n  for (var i=0; i < prefixes.length; i++) {\r\n    if (`${prefixes[i]}MutationObserver` in window) {\r\n      return window[`${prefixes[i]}MutationObserver`];\r\n    }\r\n  }\r\n  return false;\r\n}());\r\n\r\nconst triggers = (el, type) => {\r\n  el.data(type).split(' ').forEach(id => {\r\n    $(`#${id}`)[ type === 'close' ? 'trigger' : 'triggerHandler'](`${type}.zf.trigger`, [el]);\r\n  });\r\n};\r\n// Elements with [data-open] will reveal a plugin that supports it when clicked.\r\n$(document).on('click.zf.trigger', '[data-open]', function() {\r\n  triggers($(this), 'open');\r\n});\r\n\r\n// Elements with [data-close] will close a plugin that supports it when clicked.\r\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\r\n$(document).on('click.zf.trigger', '[data-close]', function() {\r\n  let id = $(this).data('close');\r\n  if (id) {\r\n    triggers($(this), 'close');\r\n  }\r\n  else {\r\n    $(this).trigger('close.zf.trigger');\r\n  }\r\n});\r\n\r\n// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\r\n$(document).on('click.zf.trigger', '[data-toggle]', function() {\r\n  triggers($(this), 'toggle');\r\n});\r\n\r\n// Elements with [data-closable] will respond to close.zf.trigger events.\r\n$(document).on('close.zf.trigger', '[data-closable]', function(e){\r\n  e.stopPropagation();\r\n  let animation = $(this).data('closable');\r\n\r\n  if(animation !== ''){\r\n    Foundation.Motion.animateOut($(this), animation, function() {\r\n      $(this).trigger('closed.zf');\r\n    });\r\n  }else{\r\n    $(this).fadeOut().trigger('closed.zf');\r\n  }\r\n});\r\n\r\n$(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function() {\r\n  let id = $(this).data('toggle-focus');\r\n  $(`#${id}`).triggerHandler('toggle.zf.trigger', [$(this)]);\r\n});\r\n\r\n/**\r\n* Fires once after all other scripts have loaded\r\n* @function\r\n* @private\r\n*/\r\n$(window).on('load', () => {\r\n  checkListeners();\r\n});\r\n\r\nfunction checkListeners() {\r\n  eventsListener();\r\n  resizeListener();\r\n  scrollListener();\r\n  closemeListener();\r\n}\r\n\r\n//******** only fires this function once on load, if there's something to watch ********\r\nfunction closemeListener(pluginName) {\r\n  var yetiBoxes = $('[data-yeti-box]'),\r\n      plugNames = ['dropdown', 'tooltip', 'reveal'];\r\n\r\n  if(pluginName){\r\n    if(typeof pluginName === 'string'){\r\n      plugNames.push(pluginName);\r\n    }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\r\n      plugNames.concat(pluginName);\r\n    }else{\r\n      console.error('Plugin names must be strings');\r\n    }\r\n  }\r\n  if(yetiBoxes.length){\r\n    let listeners = plugNames.map((name) => {\r\n      return `closeme.zf.${name}`;\r\n    }).join(' ');\r\n\r\n    $(window).off(listeners).on(listeners, function(e, pluginId){\r\n      let plugin = e.namespace.split('.')[0];\r\n      let plugins = $(`[data-${plugin}]`).not(`[data-yeti-box=\"${pluginId}\"]`);\r\n\r\n      plugins.each(function(){\r\n        let _this = $(this);\r\n\r\n        _this.triggerHandler('close.zf.trigger', [_this]);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction resizeListener(debounce){\r\n  let timer,\r\n      $nodes = $('[data-resize]');\r\n  if($nodes.length){\r\n    $(window).off('resize.zf.trigger')\r\n    .on('resize.zf.trigger', function(e) {\r\n      if (timer) { clearTimeout(timer); }\r\n\r\n      timer = setTimeout(function(){\r\n\r\n        if(!MutationObserver){//fallback for IE 9\r\n          $nodes.each(function(){\r\n            $(this).triggerHandler('resizeme.zf.trigger');\r\n          });\r\n        }\r\n        //trigger all listening elements and signal a resize event\r\n        $nodes.attr('data-events', \"resize\");\r\n      }, debounce || 10);//default time to emit resize event\r\n    });\r\n  }\r\n}\r\n\r\nfunction scrollListener(debounce){\r\n  let timer,\r\n      $nodes = $('[data-scroll]');\r\n  if($nodes.length){\r\n    $(window).off('scroll.zf.trigger')\r\n    .on('scroll.zf.trigger', function(e){\r\n      if(timer){ clearTimeout(timer); }\r\n\r\n      timer = setTimeout(function(){\r\n\r\n        if(!MutationObserver){//fallback for IE 9\r\n          $nodes.each(function(){\r\n            $(this).triggerHandler('scrollme.zf.trigger');\r\n          });\r\n        }\r\n        //trigger all listening elements and signal a scroll event\r\n        $nodes.attr('data-events', \"scroll\");\r\n      }, debounce || 10);//default time to emit scroll event\r\n    });\r\n  }\r\n}\r\n\r\nfunction eventsListener() {\r\n  if(!MutationObserver){ return false; }\r\n  let nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\r\n\r\n  //element callback\r\n  var listeningElementsMutation = function(mutationRecordsList) {\r\n    var $target = $(mutationRecordsList[0].target);\r\n    //trigger the event handler for the element depending on type\r\n    switch ($target.attr(\"data-events\")) {\r\n\r\n      case \"resize\" :\r\n      $target.triggerHandler('resizeme.zf.trigger', [$target]);\r\n      break;\r\n\r\n      case \"scroll\" :\r\n      $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\r\n      break;\r\n\r\n      // case \"mutate\" :\r\n      // console.log('mutate', $target);\r\n      // $target.triggerHandler('mutate.zf.trigger');\r\n      //\r\n      // //make sure we don't get stuck in an infinite loop from sloppy codeing\r\n      // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\r\n      //   domMutationObserver();\r\n      // }\r\n      // break;\r\n\r\n      default :\r\n      return false;\r\n      //nothing\r\n    }\r\n  }\r\n\r\n  if(nodes.length){\r\n    //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\r\n    for (var i = 0; i <= nodes.length-1; i++) {\r\n      let elementObserver = new MutationObserver(listeningElementsMutation);\r\n      elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree:false, attributeFilter:[\"data-events\"]});\r\n    }\r\n  }\r\n}\r\n\r\n// ------------------------------------\r\n\r\n// [PH]\r\n// Foundation.CheckWatchers = checkWatchers;\r\nFoundation.IHearYou = checkListeners;\r\n// Foundation.ISeeYou = scrollListener;\r\n// Foundation.IFeelYou = closemeListener;\r\n\r\n}(jQuery);\r\n\r\n// function domMutationObserver(debounce) {\r\n//   // !!! This is coming soon and needs more work; not active  !!! //\r\n//   var timer,\r\n//   nodes = document.querySelectorAll('[data-mutate]');\r\n//   //\r\n//   if (nodes.length) {\r\n//     // var MutationObserver = (function () {\r\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\r\n//     //   for (var i=0; i < prefixes.length; i++) {\r\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\r\n//     //       return window[prefixes[i] + 'MutationObserver'];\r\n//     //     }\r\n//     //   }\r\n//     //   return false;\r\n//     // }());\r\n//\r\n//\r\n//     //for the body, we need to listen for all changes effecting the style and class attributes\r\n//     var bodyObserver = new MutationObserver(bodyMutation);\r\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\r\n//\r\n//\r\n//     //body callback\r\n//     function bodyMutation(mutate) {\r\n//       //trigger all listening elements and signal a mutation event\r\n//       if (timer) { clearTimeout(timer); }\r\n//\r\n//       timer = setTimeout(function() {\r\n//         bodyObserver.disconnect();\r\n//         $('[data-mutate]').attr('data-events',\"mutate\");\r\n//       }, debounce || 150);\r\n//     }\r\n//   }\r\n// }\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Abide module.\r\n * @module foundation.abide\r\n */\r\n\r\nclass Abide {\r\n  /**\r\n   * Creates a new instance of Abide.\r\n   * @class\r\n   * @fires Abide#init\r\n   * @param {Object} element - jQuery object to add the trigger to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options = {}) {\r\n    this.$element = element;\r\n    this.options  = $.extend({}, Abide.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Abide');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Abide plugin and calls functions to get Abide functioning on load.\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.$inputs = this.$element.find('input, textarea, select');\r\n\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Initializes events for Abide.\r\n   * @private\r\n   */\r\n  _events() {\r\n    this.$element.off('.abide')\r\n      .on('reset.zf.abide', () => {\r\n        this.resetForm();\r\n      })\r\n      .on('submit.zf.abide', () => {\r\n        return this.validateForm();\r\n      });\r\n\r\n    if (this.options.validateOn === 'fieldChange') {\r\n      this.$inputs\r\n        .off('change.zf.abide')\r\n        .on('change.zf.abide', (e) => {\r\n          this.validateInput($(e.target));\r\n        });\r\n    }\r\n\r\n    if (this.options.liveValidate) {\r\n      this.$inputs\r\n        .off('input.zf.abide')\r\n        .on('input.zf.abide', (e) => {\r\n          this.validateInput($(e.target));\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calls necessary functions to update Abide upon DOM change\r\n   * @private\r\n   */\r\n  _reflow() {\r\n    this._init();\r\n  }\r\n\r\n  /**\r\n   * Checks whether or not a form element has the required attribute and if it's checked or not\r\n   * @param {Object} element - jQuery object to check for required attribute\r\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n   */\r\n  requiredCheck($el) {\r\n    if (!$el.attr('required')) return true;\r\n\r\n    var isGood = true;\r\n\r\n    switch ($el[0].type) {\r\n      case 'checkbox':\r\n        isGood = $el[0].checked;\r\n        break;\r\n\r\n      case 'select':\r\n      case 'select-one':\r\n      case 'select-multiple':\r\n        var opt = $el.find('option:selected');\r\n        if (!opt.length || !opt.val()) isGood = false;\r\n        break;\r\n\r\n      default:\r\n        if(!$el.val() || !$el.val().length) isGood = false;\r\n    }\r\n\r\n    return isGood;\r\n  }\r\n\r\n  /**\r\n   * Based on $el, get the first element with selector in this order:\r\n   * 1. The element's direct sibling('s).\r\n   * 3. The element's parent's children.\r\n   *\r\n   * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\r\n   *\r\n   * @param {Object} $el - jQuery object to use as reference to find the form error selector.\r\n   * @returns {Object} jQuery object with the selector.\r\n   */\r\n  findFormError($el) {\r\n    var $error = $el.siblings(this.options.formErrorSelector);\r\n\r\n    if (!$error.length) {\r\n      $error = $el.parent().find(this.options.formErrorSelector);\r\n    }\r\n\r\n    return $error;\r\n  }\r\n\r\n  /**\r\n   * Get the first element in this order:\r\n   * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n   * 3. The `.closest()` <label>\r\n   *\r\n   * @param {Object} $el - jQuery object to check for required attribute\r\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n   */\r\n  findLabel($el) {\r\n    var id = $el[0].id;\r\n    var $label = this.$element.find(`label[for=\"${id}\"]`);\r\n\r\n    if (!$label.length) {\r\n      return $el.closest('label');\r\n    }\r\n\r\n    return $label;\r\n  }\r\n\r\n  /**\r\n   * Get the set of labels associated with a set of radio els in this order\r\n   * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n   * 3. The `.closest()` <label>\r\n   *\r\n   * @param {Object} $el - jQuery object to check for required attribute\r\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n   */\r\n  findRadioLabels($els) {\r\n    var labels = $els.map((i, el) => {\r\n      var id = el.id;\r\n      var $label = this.$element.find(`label[for=\"${id}\"]`);\r\n\r\n      if (!$label.length) {\r\n        $label = $(el).closest('label');\r\n      }\r\n      return $label[0];\r\n    });\r\n\r\n    return $(labels);\r\n  }\r\n\r\n  /**\r\n   * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\r\n   * @param {Object} $el - jQuery object to add the class to\r\n   */\r\n  addErrorClasses($el) {\r\n    var $label = this.findLabel($el);\r\n    var $formError = this.findFormError($el);\r\n\r\n    if ($label.length) {\r\n      $label.addClass(this.options.labelErrorClass);\r\n    }\r\n\r\n    if ($formError.length) {\r\n      $formError.addClass(this.options.formErrorClass);\r\n    }\r\n\r\n    $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\r\n  }\r\n\r\n  /**\r\n   * Remove CSS error classes etc from an entire radio button group\r\n   * @param {String} groupName - A string that specifies the name of a radio button group\r\n   *\r\n   */\r\n\r\n  removeRadioErrorClasses(groupName) {\r\n    var $els = this.$element.find(`:radio[name=\"${groupName}\"]`);\r\n    var $labels = this.findRadioLabels($els);\r\n    var $formErrors = this.findFormError($els);\r\n\r\n    if ($labels.length) {\r\n      $labels.removeClass(this.options.labelErrorClass);\r\n    }\r\n\r\n    if ($formErrors.length) {\r\n      $formErrors.removeClass(this.options.formErrorClass);\r\n    }\r\n\r\n    $els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\r\n\r\n  }\r\n\r\n  /**\r\n   * Removes CSS error class as specified by the Abide settings from the label, input, and the form\r\n   * @param {Object} $el - jQuery object to remove the class from\r\n   */\r\n  removeErrorClasses($el) {\r\n    // radios need to clear all of the els\r\n    if($el[0].type == 'radio') {\r\n      return this.removeRadioErrorClasses($el.attr('name'));\r\n    }\r\n\r\n    var $label = this.findLabel($el);\r\n    var $formError = this.findFormError($el);\r\n\r\n    if ($label.length) {\r\n      $label.removeClass(this.options.labelErrorClass);\r\n    }\r\n\r\n    if ($formError.length) {\r\n      $formError.removeClass(this.options.formErrorClass);\r\n    }\r\n\r\n    $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\r\n  }\r\n\r\n  /**\r\n   * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\r\n   * @fires Abide#invalid\r\n   * @fires Abide#valid\r\n   * @param {Object} element - jQuery object to validate, should be an HTML input\r\n   * @returns {Boolean} goodToGo - If the input is valid or not.\r\n   */\r\n  validateInput($el) {\r\n    var clearRequire = this.requiredCheck($el),\r\n        validated = false,\r\n        customValidator = true,\r\n        validator = $el.attr('data-validator'),\r\n        equalTo = true;\r\n\r\n    // don't validate ignored inputs or hidden inputs\r\n    if ($el.is('[data-abide-ignore]') || $el.is('[type=\"hidden\"]')) {\r\n      return true;\r\n    }\r\n\r\n    switch ($el[0].type) {\r\n      case 'radio':\r\n        validated = this.validateRadio($el.attr('name'));\r\n        break;\r\n\r\n      case 'checkbox':\r\n        validated = clearRequire;\r\n        break;\r\n\r\n      case 'select':\r\n      case 'select-one':\r\n      case 'select-multiple':\r\n        validated = clearRequire;\r\n        break;\r\n\r\n      default:\r\n        validated = this.validateText($el);\r\n    }\r\n\r\n    if (validator) {\r\n      customValidator = this.matchValidation($el, validator, $el.attr('required'));\r\n    }\r\n\r\n    if ($el.attr('data-equalto')) {\r\n      equalTo = this.options.validators.equalTo($el);\r\n    }\r\n\r\n\r\n    var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\r\n    var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\r\n\r\n    this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\r\n\r\n    /**\r\n     * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\r\n     * Trigger includes the DOM element of the input.\r\n     * @event Abide#valid\r\n     * @event Abide#invalid\r\n     */\r\n    $el.trigger(message, [$el]);\r\n\r\n    return goodToGo;\r\n  }\r\n\r\n  /**\r\n   * Goes through a form and if there are any invalid inputs, it will display the form error element\r\n   * @returns {Boolean} noError - true if no errors were detected...\r\n   * @fires Abide#formvalid\r\n   * @fires Abide#forminvalid\r\n   */\r\n  validateForm() {\r\n    var acc = [];\r\n    var _this = this;\r\n\r\n    this.$inputs.each(function() {\r\n      acc.push(_this.validateInput($(this)));\r\n    });\r\n\r\n    var noError = acc.indexOf(false) === -1;\r\n\r\n    this.$element.find('[data-abide-error]').css('display', (noError ? 'none' : 'block'));\r\n\r\n    /**\r\n     * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\r\n     * Trigger includes the element of the form.\r\n     * @event Abide#formvalid\r\n     * @event Abide#forminvalid\r\n     */\r\n    this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\r\n\r\n    return noError;\r\n  }\r\n\r\n  /**\r\n   * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\r\n   * @param {Object} $el - jQuery object to validate, should be a text input HTML element\r\n   * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\r\n   * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\r\n   */\r\n  validateText($el, pattern) {\r\n    // A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute\r\n    pattern = (pattern || $el.attr('pattern') || $el.attr('type'));\r\n    var inputText = $el.val();\r\n    var valid = false;\r\n\r\n    if (inputText.length) {\r\n      // If the pattern attribute on the element is in Abide's list of patterns, then test that regexp\r\n      if (this.options.patterns.hasOwnProperty(pattern)) {\r\n        valid = this.options.patterns[pattern].test(inputText);\r\n      }\r\n      // If the pattern name isn't also the type attribute of the field, then test it as a regexp\r\n      else if (pattern !== $el.attr('type')) {\r\n        valid = new RegExp(pattern).test(inputText);\r\n      }\r\n      else {\r\n        valid = true;\r\n      }\r\n    }\r\n    // An empty field is valid if it's not required\r\n    else if (!$el.prop('required')) {\r\n      valid = true;\r\n    }\r\n\r\n    return valid;\r\n   }\r\n\r\n  /**\r\n   * Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\r\n   * @param {String} groupName - A string that specifies the name of a radio button group\r\n   * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\r\n   */\r\n  validateRadio(groupName) {\r\n    // If at least one radio in the group has the `required` attribute, the group is considered required\r\n    // Per W3C spec, all radio buttons in a group should have `required`, but we're being nice\r\n    var $group = this.$element.find(`:radio[name=\"${groupName}\"]`);\r\n    var valid = false, required = false;\r\n\r\n    // For the group to be required, at least one radio needs to be required\r\n    $group.each((i, e) => {\r\n      if ($(e).attr('required')) {\r\n        required = true;\r\n      }\r\n    });\r\n    if(!required) valid=true;\r\n\r\n    if (!valid) {\r\n      // For the group to be valid, at least one radio needs to be checked\r\n      $group.each((i, e) => {\r\n        if ($(e).prop('checked')) {\r\n          valid = true;\r\n        }\r\n      });\r\n    };\r\n\r\n    return valid;\r\n  }\r\n\r\n  /**\r\n   * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\r\n   * @param {Object} $el - jQuery input element.\r\n   * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\r\n   * @param {Boolean} required - self explanatory?\r\n   * @returns {Boolean} - true if validations passed.\r\n   */\r\n  matchValidation($el, validators, required) {\r\n    required = required ? true : false;\r\n\r\n    var clear = validators.split(' ').map((v) => {\r\n      return this.options.validators[v]($el, required, $el.parent());\r\n    });\r\n    return clear.indexOf(false) === -1;\r\n  }\r\n\r\n  /**\r\n   * Resets form inputs and styles\r\n   * @fires Abide#formreset\r\n   */\r\n  resetForm() {\r\n    var $form = this.$element,\r\n        opts = this.options;\r\n\r\n    $(`.${opts.labelErrorClass}`, $form).not('small').removeClass(opts.labelErrorClass);\r\n    $(`.${opts.inputErrorClass}`, $form).not('small').removeClass(opts.inputErrorClass);\r\n    $(`${opts.formErrorSelector}.${opts.formErrorClass}`).removeClass(opts.formErrorClass);\r\n    $form.find('[data-abide-error]').css('display', 'none');\r\n    $(':input', $form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');\r\n    $(':input:radio', $form).not('[data-abide-ignore]').prop('checked',false).removeAttr('data-invalid');\r\n    $(':input:checkbox', $form).not('[data-abide-ignore]').prop('checked',false).removeAttr('data-invalid');\r\n    /**\r\n     * Fires when the form has been reset.\r\n     * @event Abide#formreset\r\n     */\r\n    $form.trigger('formreset.zf.abide', [$form]);\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of Abide.\r\n   * Removes error styles and classes from elements, without resetting their values.\r\n   */\r\n  destroy() {\r\n    var _this = this;\r\n    this.$element\r\n      .off('.abide')\r\n      .find('[data-abide-error]')\r\n        .css('display', 'none');\r\n\r\n    this.$inputs\r\n      .off('.abide')\r\n      .each(function() {\r\n        _this.removeErrorClasses($(this));\r\n      });\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\n/**\r\n * Default settings for plugin\r\n */\r\nAbide.defaults = {\r\n  /**\r\n   * The default event to validate inputs. Checkboxes and radios validate immediately.\r\n   * Remove or change this value for manual validation.\r\n   * @option\r\n   * @example 'fieldChange'\r\n   */\r\n  validateOn: 'fieldChange',\r\n\r\n  /**\r\n   * Class to be applied to input labels on failed validation.\r\n   * @option\r\n   * @example 'is-invalid-label'\r\n   */\r\n  labelErrorClass: 'is-invalid-label',\r\n\r\n  /**\r\n   * Class to be applied to inputs on failed validation.\r\n   * @option\r\n   * @example 'is-invalid-input'\r\n   */\r\n  inputErrorClass: 'is-invalid-input',\r\n\r\n  /**\r\n   * Class selector to use to target Form Errors for show/hide.\r\n   * @option\r\n   * @example '.form-error'\r\n   */\r\n  formErrorSelector: '.form-error',\r\n\r\n  /**\r\n   * Class added to Form Errors on failed validation.\r\n   * @option\r\n   * @example 'is-visible'\r\n   */\r\n  formErrorClass: 'is-visible',\r\n\r\n  /**\r\n   * Set to true to validate text inputs on any value change.\r\n   * @option\r\n   * @example false\r\n   */\r\n  liveValidate: false,\r\n\r\n  patterns: {\r\n    alpha : /^[a-zA-Z]+$/,\r\n    alpha_numeric : /^[a-zA-Z0-9]+$/,\r\n    integer : /^[-+]?\\d+$/,\r\n    number : /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\r\n\r\n    // amex, visa, diners\r\n    card : /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\r\n    cvv : /^([0-9]){3,4}$/,\r\n\r\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\r\n    email : /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\r\n\r\n    url : /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\r\n    // abc.de\r\n    domain : /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\r\n\r\n    datetime : /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\r\n    // YYYY-MM-DD\r\n    date : /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\r\n    // HH:MM:SS\r\n    time : /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\r\n    dateISO : /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\r\n    // MM/DD/YYYY\r\n    month_day_year : /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\r\n    // DD/MM/YYYY\r\n    day_month_year : /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\r\n\r\n    // #FFF or #FFFFFF\r\n    color : /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\r\n  },\r\n\r\n  /**\r\n   * Optional validation functions to be used. `equalTo` being the only default included function.\r\n   * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\r\n   * el : The jQuery element to validate.\r\n   * required : Boolean value of the required attribute be present or not.\r\n   * parent : The direct parent of the input.\r\n   * @option\r\n   */\r\n  validators: {\r\n    equalTo: function (el, required, parent) {\r\n      return $(`#${el.attr('data-equalto')}`).val() === el.val();\r\n    }\r\n  }\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Abide, 'Abide');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Accordion module.\r\n * @module foundation.accordion\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.motion\r\n */\r\n\r\nclass Accordion {\r\n  /**\r\n   * Creates a new instance of an accordion.\r\n   * @class\r\n   * @fires Accordion#init\r\n   * @param {jQuery} element - jQuery object to make into an accordion.\r\n   * @param {Object} options - a plain object with settings to override the default options.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Accordion');\r\n    Foundation.Keyboard.register('Accordion', {\r\n      'ENTER': 'toggle',\r\n      'SPACE': 'toggle',\r\n      'ARROW_DOWN': 'next',\r\n      'ARROW_UP': 'previous'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the accordion by animating the preset active pane(s).\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.$element.attr('role', 'tablist');\r\n    this.$tabs = this.$element.children('li, [data-accordion-item]');\r\n\r\n    this.$tabs.each(function(idx, el) {\r\n      var $el = $(el),\r\n          $content = $el.children('[data-tab-content]'),\r\n          id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\r\n          linkId = el.id || `${id}-label`;\r\n\r\n      $el.find('a:first').attr({\r\n        'aria-controls': id,\r\n        'role': 'tab',\r\n        'id': linkId,\r\n        'aria-expanded': false,\r\n        'aria-selected': false\r\n      });\r\n\r\n      $content.attr({'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id});\r\n    });\r\n    var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\r\n    if($initActive.length){\r\n      this.down($initActive, true);\r\n    }\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers for items within the accordion.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    this.$tabs.each(function() {\r\n      var $elem = $(this);\r\n      var $tabContent = $elem.children('[data-tab-content]');\r\n      if ($tabContent.length) {\r\n        $elem.children('a').off('click.zf.accordion keydown.zf.accordion')\r\n               .on('click.zf.accordion', function(e) {\r\n          e.preventDefault();\r\n          _this.toggle($tabContent);\r\n        }).on('keydown.zf.accordion', function(e){\r\n          Foundation.Keyboard.handleKey(e, 'Accordion', {\r\n            toggle: function() {\r\n              _this.toggle($tabContent);\r\n            },\r\n            next: function() {\r\n              var $a = $elem.next().find('a').focus();\r\n              if (!_this.options.multiExpand) {\r\n                $a.trigger('click.zf.accordion')\r\n              }\r\n            },\r\n            previous: function() {\r\n              var $a = $elem.prev().find('a').focus();\r\n              if (!_this.options.multiExpand) {\r\n                $a.trigger('click.zf.accordion')\r\n              }\r\n            },\r\n            handled: function() {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggles the selected content pane's open/close state.\r\n   * @param {jQuery} $target - jQuery object of the pane to toggle (`.accordion-content`).\r\n   * @function\r\n   */\r\n  toggle($target) {\r\n    if($target.parent().hasClass('is-active')) {\r\n      this.up($target);\r\n    } else {\r\n      this.down($target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the accordion tab defined by `$target`.\r\n   * @param {jQuery} $target - Accordion pane to open (`.accordion-content`).\r\n   * @param {Boolean} firstTime - flag to determine if reflow should happen.\r\n   * @fires Accordion#down\r\n   * @function\r\n   */\r\n  down($target, firstTime) {\r\n    $target\r\n      .attr('aria-hidden', false)\r\n      .parent('[data-tab-content]')\r\n      .addBack()\r\n      .parent().addClass('is-active');\r\n\r\n    if (!this.options.multiExpand && !firstTime) {\r\n      var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\r\n      if ($currentActive.length) {\r\n        this.up($currentActive.not($target));\r\n      }\r\n    }\r\n\r\n    $target.slideDown(this.options.slideSpeed, () => {\r\n      /**\r\n       * Fires when the tab is done opening.\r\n       * @event Accordion#down\r\n       */\r\n      this.$element.trigger('down.zf.accordion', [$target]);\r\n    });\r\n\r\n    $(`#${$target.attr('aria-labelledby')}`).attr({\r\n      'aria-expanded': true,\r\n      'aria-selected': true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Closes the tab defined by `$target`.\r\n   * @param {jQuery} $target - Accordion tab to close (`.accordion-content`).\r\n   * @fires Accordion#up\r\n   * @function\r\n   */\r\n  up($target) {\r\n    var $aunts = $target.parent().siblings(),\r\n        _this = this;\r\n\r\n    if((!this.options.allowAllClosed && !$aunts.hasClass('is-active')) || !$target.parent().hasClass('is-active')) {\r\n      return;\r\n    }\r\n\r\n    // Foundation.Move(this.options.slideSpeed, $target, function(){\r\n      $target.slideUp(_this.options.slideSpeed, function () {\r\n        /**\r\n         * Fires when the tab is done collapsing up.\r\n         * @event Accordion#up\r\n         */\r\n        _this.$element.trigger('up.zf.accordion', [$target]);\r\n      });\r\n    // });\r\n\r\n    $target.attr('aria-hidden', true)\r\n           .parent().removeClass('is-active');\r\n\r\n    $(`#${$target.attr('aria-labelledby')}`).attr({\r\n     'aria-expanded': false,\r\n     'aria-selected': false\r\n   });\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of an accordion.\r\n   * @fires Accordion#destroyed\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\r\n    this.$element.find('a').off('.zf.accordion');\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nAccordion.defaults = {\r\n  /**\r\n   * Amount of time to animate the opening of an accordion pane.\r\n   * @option\r\n   * @example 250\r\n   */\r\n  slideSpeed: 250,\r\n  /**\r\n   * Allow the accordion to have multiple open panes.\r\n   * @option\r\n   * @example false\r\n   */\r\n  multiExpand: false,\r\n  /**\r\n   * Allow the accordion to close all panes.\r\n   * @option\r\n   * @example false\r\n   */\r\n  allowAllClosed: false\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Accordion, 'Accordion');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * AccordionMenu module.\r\n * @module foundation.accordionMenu\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.motion\r\n * @requires foundation.util.nest\r\n */\r\n\r\nclass AccordionMenu {\r\n  /**\r\n   * Creates a new instance of an accordion menu.\r\n   * @class\r\n   * @fires AccordionMenu#init\r\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\r\n\r\n    Foundation.Nest.Feather(this.$element, 'accordion');\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'AccordionMenu');\r\n    Foundation.Keyboard.register('AccordionMenu', {\r\n      'ENTER': 'toggle',\r\n      'SPACE': 'toggle',\r\n      'ARROW_RIGHT': 'open',\r\n      'ARROW_UP': 'up',\r\n      'ARROW_DOWN': 'down',\r\n      'ARROW_LEFT': 'close',\r\n      'ESCAPE': 'closeAll'\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Initializes the accordion menu by hiding all nested menus.\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.$element.find('[data-submenu]').not('.is-active').slideUp(0);//.find('a').css('padding-left', '1rem');\r\n    this.$element.attr({\r\n      'role': 'menu',\r\n      'aria-multiselectable': this.options.multiOpen\r\n    });\r\n\r\n    this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\r\n    this.$menuLinks.each(function(){\r\n      var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\r\n          $elem = $(this),\r\n          $sub = $elem.children('[data-submenu]'),\r\n          subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\r\n          isActive = $sub.hasClass('is-active');\r\n      $elem.attr({\r\n        'aria-controls': subId,\r\n        'aria-expanded': isActive,\r\n        'role': 'menuitem',\r\n        'id': linkId\r\n      });\r\n      $sub.attr({\r\n        'aria-labelledby': linkId,\r\n        'aria-hidden': !isActive,\r\n        'role': 'menu',\r\n        'id': subId\r\n      });\r\n    });\r\n    var initPanes = this.$element.find('.is-active');\r\n    if(initPanes.length){\r\n      var _this = this;\r\n      initPanes.each(function(){\r\n        _this.down($(this));\r\n      });\r\n    }\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers for items within the menu.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    this.$element.find('li').each(function() {\r\n      var $submenu = $(this).children('[data-submenu]');\r\n\r\n      if ($submenu.length) {\r\n        $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function(e) {\r\n          e.preventDefault();\r\n\r\n          _this.toggle($submenu);\r\n        });\r\n      }\r\n    }).on('keydown.zf.accordionmenu', function(e){\r\n      var $element = $(this),\r\n          $elements = $element.parent('ul').children('li'),\r\n          $prevElement,\r\n          $nextElement,\r\n          $target = $element.children('[data-submenu]');\r\n\r\n      $elements.each(function(i) {\r\n        if ($(this).is($element)) {\r\n          $prevElement = $elements.eq(Math.max(0, i-1)).find('a').first();\r\n          $nextElement = $elements.eq(Math.min(i+1, $elements.length-1)).find('a').first();\r\n\r\n          if ($(this).children('[data-submenu]:visible').length) { // has open sub menu\r\n            $nextElement = $element.find('li:first-child').find('a').first();\r\n          }\r\n          if ($(this).is(':first-child')) { // is first element of sub menu\r\n            $prevElement = $element.parents('li').first().find('a').first();\r\n          } else if ($prevElement.parents('li').first().children('[data-submenu]:visible').length) { // if previous element has open sub menu\r\n            $prevElement = $prevElement.parents('li').find('li:last-child').find('a').first();\r\n          }\r\n          if ($(this).is(':last-child')) { // is last element of sub menu\r\n            $nextElement = $element.parents('li').first().next('li').find('a').first();\r\n          }\r\n\r\n          return;\r\n        }\r\n      });\r\n\r\n      Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\r\n        open: function() {\r\n          if ($target.is(':hidden')) {\r\n            _this.down($target);\r\n            $target.find('li').first().find('a').first().focus();\r\n          }\r\n        },\r\n        close: function() {\r\n          if ($target.length && !$target.is(':hidden')) { // close active sub of this item\r\n            _this.up($target);\r\n          } else if ($element.parent('[data-submenu]').length) { // close currently open sub\r\n            _this.up($element.parent('[data-submenu]'));\r\n            $element.parents('li').first().find('a').first().focus();\r\n          }\r\n        },\r\n        up: function() {\r\n          $prevElement.focus();\r\n          return true;\r\n        },\r\n        down: function() {\r\n          $nextElement.focus();\r\n          return true;\r\n        },\r\n        toggle: function() {\r\n          if ($element.children('[data-submenu]').length) {\r\n            _this.toggle($element.children('[data-submenu]'));\r\n          }\r\n        },\r\n        closeAll: function() {\r\n          _this.hideAll();\r\n        },\r\n        handled: function(preventDefault) {\r\n          if (preventDefault) {\r\n            e.preventDefault();\r\n          }\r\n          e.stopImmediatePropagation();\r\n        }\r\n      });\r\n    });//.attr('tabindex', 0);\r\n  }\r\n\r\n  /**\r\n   * Closes all panes of the menu.\r\n   * @function\r\n   */\r\n  hideAll() {\r\n    this.$element.find('[data-submenu]').slideUp(this.options.slideSpeed);\r\n  }\r\n\r\n  /**\r\n   * Toggles the open/close state of a submenu.\r\n   * @function\r\n   * @param {jQuery} $target - the submenu to toggle\r\n   */\r\n  toggle($target){\r\n    if(!$target.is(':animated')) {\r\n      if (!$target.is(':hidden')) {\r\n        this.up($target);\r\n      }\r\n      else {\r\n        this.down($target);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the sub-menu defined by `$target`.\r\n   * @param {jQuery} $target - Sub-menu to open.\r\n   * @fires AccordionMenu#down\r\n   */\r\n  down($target) {\r\n    var _this = this;\r\n\r\n    if(!this.options.multiOpen) {\r\n      this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\r\n    }\r\n\r\n    $target.addClass('is-active').attr({'aria-hidden': false})\r\n      .parent('.is-accordion-submenu-parent').attr({'aria-expanded': true});\r\n\r\n      //Foundation.Move(this.options.slideSpeed, $target, function() {\r\n        $target.slideDown(_this.options.slideSpeed, function () {\r\n          /**\r\n           * Fires when the menu is done opening.\r\n           * @event AccordionMenu#down\r\n           */\r\n          _this.$element.trigger('down.zf.accordionMenu', [$target]);\r\n        });\r\n      //});\r\n  }\r\n\r\n  /**\r\n   * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\r\n   * @param {jQuery} $target - Sub-menu to close.\r\n   * @fires AccordionMenu#up\r\n   */\r\n  up($target) {\r\n    var _this = this;\r\n    //Foundation.Move(this.options.slideSpeed, $target, function(){\r\n      $target.slideUp(_this.options.slideSpeed, function () {\r\n        /**\r\n         * Fires when the menu is done collapsing up.\r\n         * @event AccordionMenu#up\r\n         */\r\n        _this.$element.trigger('up.zf.accordionMenu', [$target]);\r\n      });\r\n    //});\r\n\r\n    var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\r\n\r\n    $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of accordion menu.\r\n   * @fires AccordionMenu#destroyed\r\n   */\r\n  destroy() {\r\n    this.$element.find('[data-submenu]').slideDown(0).css('display', '');\r\n    this.$element.find('a').off('click.zf.accordionMenu');\r\n\r\n    Foundation.Nest.Burn(this.$element, 'accordion');\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nAccordionMenu.defaults = {\r\n  /**\r\n   * Amount of time to animate the opening of a submenu in ms.\r\n   * @option\r\n   * @example 250\r\n   */\r\n  slideSpeed: 250,\r\n  /**\r\n   * Allow the menu to have multiple open panes.\r\n   * @option\r\n   * @example true\r\n   */\r\n  multiOpen: true\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(AccordionMenu, 'AccordionMenu');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Drilldown module.\r\n * @module foundation.drilldown\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.motion\r\n * @requires foundation.util.nest\r\n */\r\n\r\nclass Drilldown {\r\n  /**\r\n   * Creates a new instance of a drilldown menu.\r\n   * @class\r\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\r\n\r\n    Foundation.Nest.Feather(this.$element, 'drilldown');\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Drilldown');\r\n    Foundation.Keyboard.register('Drilldown', {\r\n      'ENTER': 'open',\r\n      'SPACE': 'open',\r\n      'ARROW_RIGHT': 'next',\r\n      'ARROW_UP': 'up',\r\n      'ARROW_DOWN': 'down',\r\n      'ARROW_LEFT': 'previous',\r\n      'ESCAPE': 'close',\r\n      'TAB': 'down',\r\n      'SHIFT_TAB': 'up'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the drilldown by creating jQuery collections of elements\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent').children('a');\r\n    this.$submenus = this.$submenuAnchors.parent('li').children('[data-submenu]');\r\n    this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem').find('a');\r\n\r\n    this._prepareMenu();\r\n\r\n    this._keyboardEvents();\r\n  }\r\n\r\n  /**\r\n   * prepares drilldown menu by setting attributes to links and elements\r\n   * sets a min height to prevent content jumping\r\n   * wraps the element if not already wrapped\r\n   * @private\r\n   * @function\r\n   */\r\n  _prepareMenu() {\r\n    var _this = this;\r\n    // if(!this.options.holdOpen){\r\n    //   this._menuLinkEvents();\r\n    // }\r\n    this.$submenuAnchors.each(function(){\r\n      var $link = $(this);\r\n      var $sub = $link.parent();\r\n      if(_this.options.parentLink){\r\n        $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\r\n      }\r\n      $link.data('savedHref', $link.attr('href')).removeAttr('href').attr('tabindex', 0);\r\n      $link.children('[data-submenu]')\r\n          .attr({\r\n            'aria-hidden': true,\r\n            'tabindex': 0,\r\n            'role': 'menu'\r\n          });\r\n      _this._events($link);\r\n    });\r\n    this.$submenus.each(function(){\r\n      var $menu = $(this),\r\n          $back = $menu.find('.js-drilldown-back');\r\n      if(!$back.length){\r\n        $menu.prepend(_this.options.backButton);\r\n      }\r\n      _this._back($menu);\r\n    });\r\n    if(!this.$element.parent().hasClass('is-drilldown')){\r\n      this.$wrapper = $(this.options.wrapper).addClass('is-drilldown');\r\n      this.$wrapper = this.$element.wrap(this.$wrapper).parent().css(this._getMaxDims());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers to elements in the menu.\r\n   * @function\r\n   * @private\r\n   * @param {jQuery} $elem - the current menu item to add handlers to.\r\n   */\r\n  _events($elem) {\r\n    var _this = this;\r\n\r\n    $elem.off('click.zf.drilldown')\r\n    .on('click.zf.drilldown', function(e){\r\n      if($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')){\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n      }\r\n\r\n      // if(e.target !== e.currentTarget.firstElementChild){\r\n      //   return false;\r\n      // }\r\n      _this._show($elem.parent('li'));\r\n\r\n      if(_this.options.closeOnClick){\r\n        var $body = $('body');\r\n        $body.off('.zf.drilldown').on('click.zf.drilldown', function(e){\r\n          if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) { return; }\r\n          e.preventDefault();\r\n          _this._hideAll();\r\n          $body.off('.zf.drilldown');\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds keydown event listener to `li`'s in the menu.\r\n   * @private\r\n   */\r\n  _keyboardEvents() {\r\n    var _this = this;\r\n\r\n    this.$menuItems.add(this.$element.find('.js-drilldown-back > a')).on('keydown.zf.drilldown', function(e){\r\n\r\n      var $element = $(this),\r\n          $elements = $element.parent('li').parent('ul').children('li').children('a'),\r\n          $prevElement,\r\n          $nextElement;\r\n\r\n      $elements.each(function(i) {\r\n        if ($(this).is($element)) {\r\n          $prevElement = $elements.eq(Math.max(0, i-1));\r\n          $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\r\n          return;\r\n        }\r\n      });\r\n\r\n      Foundation.Keyboard.handleKey(e, 'Drilldown', {\r\n        next: function() {\r\n          if ($element.is(_this.$submenuAnchors)) {\r\n            _this._show($element.parent('li'));\r\n            $element.parent('li').one(Foundation.transitionend($element), function(){\r\n              $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\r\n            });\r\n            return true;\r\n          }\r\n        },\r\n        previous: function() {\r\n          _this._hide($element.parent('li').parent('ul'));\r\n          $element.parent('li').parent('ul').one(Foundation.transitionend($element), function(){\r\n            setTimeout(function() {\r\n              $element.parent('li').parent('ul').parent('li').children('a').first().focus();\r\n            }, 1);\r\n          });\r\n          return true;\r\n        },\r\n        up: function() {\r\n          $prevElement.focus();\r\n          return true;\r\n        },\r\n        down: function() {\r\n          $nextElement.focus();\r\n          return true;\r\n        },\r\n        close: function() {\r\n          _this._back();\r\n          //_this.$menuItems.first().focus(); // focus to first element\r\n        },\r\n        open: function() {\r\n          if (!$element.is(_this.$menuItems)) { // not menu item means back button\r\n            _this._hide($element.parent('li').parent('ul'));\r\n            $element.parent('li').parent('ul').one(Foundation.transitionend($element), function(){\r\n              setTimeout(function() {\r\n                $element.parent('li').parent('ul').parent('li').children('a').first().focus();\r\n              }, 1);\r\n            });\r\n            return true;            \r\n          } else if ($element.is(_this.$submenuAnchors)) {\r\n            _this._show($element.parent('li'));\r\n            $element.parent('li').one(Foundation.transitionend($element), function(){\r\n              $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\r\n            });\r\n            return true;\r\n          }\r\n        },\r\n        handled: function(preventDefault) {\r\n          if (preventDefault) {\r\n            e.preventDefault();\r\n          }\r\n          e.stopImmediatePropagation();\r\n        }\r\n      });\r\n    }); // end keyboardAccess\r\n  }\r\n\r\n  /**\r\n   * Closes all open elements, and returns to root menu.\r\n   * @function\r\n   * @fires Drilldown#closed\r\n   */\r\n  _hideAll() {\r\n    var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\r\n    $elem.one(Foundation.transitionend($elem), function(e){\r\n      $elem.removeClass('is-active is-closing');\r\n    });\r\n        /**\r\n         * Fires when the menu is fully closed.\r\n         * @event Drilldown#closed\r\n         */\r\n    this.$element.trigger('closed.zf.drilldown');\r\n  }\r\n\r\n  /**\r\n   * Adds event listener for each `back` button, and closes open menus.\r\n   * @function\r\n   * @fires Drilldown#back\r\n   * @param {jQuery} $elem - the current sub-menu to add `back` event.\r\n   */\r\n  _back($elem) {\r\n    var _this = this;\r\n    $elem.off('click.zf.drilldown');\r\n    $elem.children('.js-drilldown-back')\r\n      .on('click.zf.drilldown', function(e){\r\n        e.stopImmediatePropagation();\r\n        // console.log('mouseup on back');\r\n        _this._hide($elem);\r\n\r\n        // If there is a parent submenu, call show\r\n        let parentSubMenu = $elem.parent('li').parent('ul').parent('li');\r\n        if (parentSubMenu.length) { \r\n          _this._show(parentSubMenu);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Adds event listener to menu items w/o submenus to close open menus on click.\r\n   * @function\r\n   * @private\r\n   */\r\n  _menuLinkEvents() {\r\n    var _this = this;\r\n    this.$menuItems.not('.is-drilldown-submenu-parent')\r\n        .off('click.zf.drilldown')\r\n        .on('click.zf.drilldown', function(e){\r\n          // e.stopImmediatePropagation();\r\n          setTimeout(function(){\r\n            _this._hideAll();\r\n          }, 0);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Opens a submenu.\r\n   * @function\r\n   * @fires Drilldown#open\r\n   * @param {jQuery} $elem - the current element with a submenu to open, i.e. the `li` tag.\r\n   */\r\n  _show($elem) {\r\n    $elem.attr('aria-expanded', true);\r\n    $elem.children('[data-submenu]').addClass('is-active').attr('aria-hidden', false);\r\n    /**\r\n     * Fires when the submenu has opened.\r\n     * @event Drilldown#open\r\n     */\r\n    this.$element.trigger('open.zf.drilldown', [$elem]);\r\n  };\r\n\r\n  /**\r\n   * Hides a submenu\r\n   * @function\r\n   * @fires Drilldown#hide\r\n   * @param {jQuery} $elem - the current sub-menu to hide, i.e. the `ul` tag.\r\n   */\r\n  _hide($elem) {\r\n    var _this = this;\r\n    $elem.parent('li').attr('aria-expanded', false);\r\n    $elem.attr('aria-hidden', true).addClass('is-closing')\r\n         .one(Foundation.transitionend($elem), function(){\r\n           $elem.removeClass('is-active is-closing');\r\n           $elem.blur();\r\n         });\r\n    /**\r\n     * Fires when the submenu has closed.\r\n     * @event Drilldown#hide\r\n     */\r\n    $elem.trigger('hide.zf.drilldown', [$elem]);\r\n  }\r\n\r\n  /**\r\n   * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\r\n   * Prevents content jumping.\r\n   * @function\r\n   * @private\r\n   */\r\n  _getMaxDims() {\r\n    var biggest = 0\r\n    var result = {};\r\n\r\n    this.$submenus.add(this.$element).each((i, elem) => {\r\n      var height = elem.getBoundingClientRect().height;\r\n      if (height > biggest) biggest = height;\r\n    });\r\n\r\n    result['min-height'] = `${biggest}px`;\r\n    result['max-width'] = `${this.$element[0].getBoundingClientRect().width}px`;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Destroys the Drilldown Menu\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this._hideAll();\r\n    Foundation.Nest.Burn(this.$element, 'drilldown');\r\n    this.$element.unwrap()\r\n                 .find('.js-drilldown-back, .is-submenu-parent-item').remove()\r\n                 .end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu')\r\n                 .end().find('[data-submenu]').removeAttr('aria-hidden tabindex role');\r\n    this.$submenuAnchors.each(function() {\r\n      $(this).off('.zf.drilldown');\r\n    });\r\n    this.$element.find('a').each(function(){\r\n      var $link = $(this);\r\n      $link.removeAttr('tabindex');\r\n      if($link.data('savedHref')){\r\n        $link.attr('href', $link.data('savedHref')).removeData('savedHref');\r\n      }else{ return; }\r\n    });\r\n    Foundation.unregisterPlugin(this);\r\n  };\r\n}\r\n\r\nDrilldown.defaults = {\r\n  /**\r\n   * Markup used for JS generated back button. Prepended to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\r\n   * @option\r\n   * @example '<\\li><\\a>Back<\\/a><\\/li>'\r\n   */\r\n  backButton: '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>',\r\n  /**\r\n   * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\r\n   * @option\r\n   * @example '<\\div class=\"is-drilldown\"><\\/div>'\r\n   */\r\n  wrapper: '<div></div>',\r\n  /**\r\n   * Adds the parent link to the submenu.\r\n   * @option\r\n   * @example false\r\n   */\r\n  parentLink: false,\r\n  /**\r\n   * Allow the menu to return to root list on body click.\r\n   * @option\r\n   * @example false\r\n   */\r\n  closeOnClick: false\r\n  // holdOpen: false\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Drilldown, 'Drilldown');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Dropdown module.\r\n * @module foundation.dropdown\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.box\r\n * @requires foundation.util.triggers\r\n */\r\n\r\nclass Dropdown {\r\n  /**\r\n   * Creates a new instance of a dropdown.\r\n   * @class\r\n   * @param {jQuery} element - jQuery object to make into a dropdown.\r\n   *        Object should be of the dropdown panel, rather than its anchor.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Dropdown');\r\n    Foundation.Keyboard.register('Dropdown', {\r\n      'ENTER': 'open',\r\n      'SPACE': 'open',\r\n      'ESCAPE': 'close',\r\n      'TAB': 'tab_forward',\r\n      'SHIFT_TAB': 'tab_backward'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var $id = this.$element.attr('id');\r\n\r\n    this.$anchor = $(`[data-toggle=\"${$id}\"]`).length ? $(`[data-toggle=\"${$id}\"]`) : $(`[data-open=\"${$id}\"]`);\r\n    this.$anchor.attr({\r\n      'aria-controls': $id,\r\n      'data-is-focus': false,\r\n      'data-yeti-box': $id,\r\n      'aria-haspopup': true,\r\n      'aria-expanded': false\r\n\r\n    });\r\n\r\n    this.options.positionClass = this.getPositionClass();\r\n    this.counter = 4;\r\n    this.usedPositions = [];\r\n    this.$element.attr({\r\n      'aria-hidden': 'true',\r\n      'data-yeti-box': $id,\r\n      'data-resize': $id,\r\n      'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\r\n    });\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Helper function to determine current orientation of dropdown pane.\r\n   * @function\r\n   * @returns {String} position - string value of a position class.\r\n   */\r\n  getPositionClass() {\r\n    var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\r\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\r\n    var horizontalPosition = /float-(\\S+)/.exec(this.$anchor[0].className);\r\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\r\n    var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\r\n\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Adjusts the dropdown panes orientation by adding/removing positioning classes.\r\n   * @function\r\n   * @private\r\n   * @param {String} position - position class to remove.\r\n   */\r\n  _reposition(position) {\r\n    this.usedPositions.push(position ? position : 'bottom');\r\n    //default, try switching to opposite side\r\n    if(!position && (this.usedPositions.indexOf('top') < 0)){\r\n      this.$element.addClass('top');\r\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') < 0)){\r\n      this.$element.removeClass(position);\r\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') < 0)){\r\n      this.$element.removeClass(position)\r\n          .addClass('right');\r\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') < 0)){\r\n      this.$element.removeClass(position)\r\n          .addClass('left');\r\n    }\r\n\r\n    //if default change didn't work, try bottom or left first\r\n    else if(!position && (this.usedPositions.indexOf('top') > -1) && (this.usedPositions.indexOf('left') < 0)){\r\n      this.$element.addClass('left');\r\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') > -1) && (this.usedPositions.indexOf('left') < 0)){\r\n      this.$element.removeClass(position)\r\n          .addClass('left');\r\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\r\n      this.$element.removeClass(position);\r\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\r\n      this.$element.removeClass(position);\r\n    }\r\n    //if nothing cleared, set to bottom\r\n    else{\r\n      this.$element.removeClass(position);\r\n    }\r\n    this.classChanged = true;\r\n    this.counter--;\r\n  }\r\n\r\n  /**\r\n   * Sets the position and orientation of the dropdown pane, checks for collisions.\r\n   * Recursively calls itself if a collision is detected, with a new position class.\r\n   * @function\r\n   * @private\r\n   */\r\n  _setPosition() {\r\n    if(this.$anchor.attr('aria-expanded') === 'false'){ return false; }\r\n    var position = this.getPositionClass(),\r\n        $eleDims = Foundation.Box.GetDimensions(this.$element),\r\n        $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\r\n        _this = this,\r\n        direction = (position === 'left' ? 'left' : ((position === 'right') ? 'left' : 'top')),\r\n        param = (direction === 'top') ? 'height' : 'width',\r\n        offset = (param === 'height') ? this.options.vOffset : this.options.hOffset;\r\n\r\n\r\n\r\n    if(($eleDims.width >= $eleDims.windowDims.width) || (!this.counter && !Foundation.Box.ImNotTouchingYou(this.$element))){\r\n      this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\r\n        'width': $eleDims.windowDims.width - (this.options.hOffset * 2),\r\n        'height': 'auto'\r\n      });\r\n      this.classChanged = true;\r\n      return false;\r\n    }\r\n\r\n    this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\r\n\r\n    while(!Foundation.Box.ImNotTouchingYou(this.$element, false, true) && this.counter){\r\n      this._reposition(position);\r\n      this._setPosition();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners to the element utilizing the triggers utility library.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n    this.$element.on({\r\n      'open.zf.trigger': this.open.bind(this),\r\n      'close.zf.trigger': this.close.bind(this),\r\n      'toggle.zf.trigger': this.toggle.bind(this),\r\n      'resizeme.zf.trigger': this._setPosition.bind(this)\r\n    });\r\n\r\n    if(this.options.hover){\r\n      this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\r\n      .on('mouseenter.zf.dropdown', function(){\r\n            if($('body[data-whatinput=\"mouse\"]').is('*')) {\r\n              clearTimeout(_this.timeout);\r\n              _this.timeout = setTimeout(function(){\r\n                _this.open();\r\n                _this.$anchor.data('hover', true);\r\n              }, _this.options.hoverDelay);\r\n            }\r\n          }).on('mouseleave.zf.dropdown', function(){\r\n            clearTimeout(_this.timeout);\r\n            _this.timeout = setTimeout(function(){\r\n              _this.close();\r\n              _this.$anchor.data('hover', false);\r\n            }, _this.options.hoverDelay);\r\n          });\r\n      if(this.options.hoverPane){\r\n        this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\r\n            .on('mouseenter.zf.dropdown', function(){\r\n              clearTimeout(_this.timeout);\r\n            }).on('mouseleave.zf.dropdown', function(){\r\n              clearTimeout(_this.timeout);\r\n              _this.timeout = setTimeout(function(){\r\n                _this.close();\r\n                _this.$anchor.data('hover', false);\r\n              }, _this.options.hoverDelay);\r\n            });\r\n      }\r\n    }\r\n    this.$anchor.add(this.$element).on('keydown.zf.dropdown', function(e) {\r\n\r\n      var $target = $(this),\r\n        visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\r\n\r\n      Foundation.Keyboard.handleKey(e, 'Dropdown', {\r\n        tab_forward: function() {\r\n          if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) { // left modal downwards, setting focus to first element\r\n            if (_this.options.trapFocus) { // if focus shall be trapped\r\n              visibleFocusableElements.eq(0).focus();\r\n              e.preventDefault();\r\n            } else { // if focus is not trapped, close dropdown on focus out\r\n              _this.close();\r\n            }\r\n          }\r\n        },\r\n        tab_backward: function() {\r\n          if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) { // left modal upwards, setting focus to last element\r\n            if (_this.options.trapFocus) { // if focus shall be trapped\r\n              visibleFocusableElements.eq(-1).focus();\r\n              e.preventDefault();\r\n            } else { // if focus is not trapped, close dropdown on focus out\r\n              _this.close();\r\n            }\r\n          }\r\n        },\r\n        open: function() {\r\n          if ($target.is(_this.$anchor)) {\r\n            _this.open();\r\n            _this.$element.attr('tabindex', -1).focus();\r\n            e.preventDefault();\r\n          }\r\n        },\r\n        close: function() {\r\n          _this.close();\r\n          _this.$anchor.focus();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds an event handler to the body to close any dropdowns on a click.\r\n   * @function\r\n   * @private\r\n   */\r\n  _addBodyHandler() {\r\n     var $body = $(document.body).not(this.$element),\r\n         _this = this;\r\n     $body.off('click.zf.dropdown')\r\n          .on('click.zf.dropdown', function(e){\r\n            if(_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\r\n              return;\r\n            }\r\n            if(_this.$element.find(e.target).length) {\r\n              return;\r\n            }\r\n            _this.close();\r\n            $body.off('click.zf.dropdown');\r\n          });\r\n  }\r\n\r\n  /**\r\n   * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\r\n   * @function\r\n   * @fires Dropdown#closeme\r\n   * @fires Dropdown#show\r\n   */\r\n  open() {\r\n    // var _this = this;\r\n    /**\r\n     * Fires to close other open dropdowns\r\n     * @event Dropdown#closeme\r\n     */\r\n    this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\r\n    this.$anchor.addClass('hover')\r\n        .attr({'aria-expanded': true});\r\n    // this.$element/*.show()*/;\r\n    this._setPosition();\r\n    this.$element.addClass('is-open')\r\n        .attr({'aria-hidden': false});\r\n\r\n    if(this.options.autoFocus){\r\n      var $focusable = Foundation.Keyboard.findFocusable(this.$element);\r\n      if($focusable.length){\r\n        $focusable.eq(0).focus();\r\n      }\r\n    }\r\n\r\n    if(this.options.closeOnClick){ this._addBodyHandler(); }\r\n\r\n    /**\r\n     * Fires once the dropdown is visible.\r\n     * @event Dropdown#show\r\n     */\r\n    this.$element.trigger('show.zf.dropdown', [this.$element]);\r\n  }\r\n\r\n  /**\r\n   * Closes the open dropdown pane.\r\n   * @function\r\n   * @fires Dropdown#hide\r\n   */\r\n  close() {\r\n    if(!this.$element.hasClass('is-open')){\r\n      return false;\r\n    }\r\n    this.$element.removeClass('is-open')\r\n        .attr({'aria-hidden': true});\r\n\r\n    this.$anchor.removeClass('hover')\r\n        .attr('aria-expanded', false);\r\n\r\n    if(this.classChanged){\r\n      var curPositionClass = this.getPositionClass();\r\n      if(curPositionClass){\r\n        this.$element.removeClass(curPositionClass);\r\n      }\r\n      this.$element.addClass(this.options.positionClass)\r\n          /*.hide()*/.css({height: '', width: ''});\r\n      this.classChanged = false;\r\n      this.counter = 4;\r\n      this.usedPositions.length = 0;\r\n    }\r\n    this.$element.trigger('hide.zf.dropdown', [this.$element]);\r\n  }\r\n\r\n  /**\r\n   * Toggles the dropdown pane's visibility.\r\n   * @function\r\n   */\r\n  toggle() {\r\n    if(this.$element.hasClass('is-open')){\r\n      if(this.$anchor.data('hover')) return;\r\n      this.close();\r\n    }else{\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the dropdown.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$element.off('.zf.trigger').hide();\r\n    this.$anchor.off('.zf.dropdown');\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nDropdown.defaults = {\r\n  /**\r\n   * Amount of time to delay opening a submenu on hover event.\r\n   * @option\r\n   * @example 250\r\n   */\r\n  hoverDelay: 250,\r\n  /**\r\n   * Allow submenus to open on hover events\r\n   * @option\r\n   * @example false\r\n   */\r\n  hover: false,\r\n  /**\r\n   * Don't close dropdown when hovering over dropdown pane\r\n   * @option\r\n   * @example true\r\n   */\r\n  hoverPane: false,\r\n  /**\r\n   * Number of pixels between the dropdown pane and the triggering element on open.\r\n   * @option\r\n   * @example 1\r\n   */\r\n  vOffset: 1,\r\n  /**\r\n   * Number of pixels between the dropdown pane and the triggering element on open.\r\n   * @option\r\n   * @example 1\r\n   */\r\n  hOffset: 1,\r\n  /**\r\n   * Class applied to adjust open position. JS will test and fill this in.\r\n   * @option\r\n   * @example 'top'\r\n   */\r\n  positionClass: '',\r\n  /**\r\n   * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\r\n   * @option\r\n   * @example false\r\n   */\r\n  trapFocus: false,\r\n  /**\r\n   * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\r\n   * @option\r\n   * @example true\r\n   */\r\n  autoFocus: false,\r\n  /**\r\n   * Allows a click on the body to close the dropdown.\r\n   * @option\r\n   * @example false\r\n   */\r\n  closeOnClick: false\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Dropdown, 'Dropdown');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * DropdownMenu module.\r\n * @module foundation.dropdown-menu\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.box\r\n * @requires foundation.util.nest\r\n */\r\n\r\nclass DropdownMenu {\r\n  /**\r\n   * Creates a new instance of DropdownMenu.\r\n   * @class\r\n   * @fires DropdownMenu#init\r\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\r\n\r\n    Foundation.Nest.Feather(this.$element, 'dropdown');\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'DropdownMenu');\r\n    Foundation.Keyboard.register('DropdownMenu', {\r\n      'ENTER': 'open',\r\n      'SPACE': 'open',\r\n      'ARROW_RIGHT': 'next',\r\n      'ARROW_UP': 'up',\r\n      'ARROW_DOWN': 'down',\r\n      'ARROW_LEFT': 'previous',\r\n      'ESCAPE': 'close'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the plugin, and calls _prepareMenu\r\n   * @private\r\n   * @function\r\n   */\r\n  _init() {\r\n    var subs = this.$element.find('li.is-dropdown-submenu-parent');\r\n    this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\r\n\r\n    this.$menuItems = this.$element.find('[role=\"menuitem\"]');\r\n    this.$tabs = this.$element.children('[role=\"menuitem\"]');\r\n    this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\r\n\r\n    if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\r\n      this.options.alignment = 'right';\r\n      subs.addClass('opens-left');\r\n    } else {\r\n      subs.addClass('opens-right');\r\n    }\r\n    this.changed = false;\r\n    this._events();\r\n  };\r\n\r\n  _isVertical() {\r\n    return this.$tabs.css('display') === 'block';\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners to elements within the menu\r\n   * @private\r\n   * @function\r\n   */\r\n  _events() {\r\n    var _this = this,\r\n        hasTouch = 'ontouchstart' in window || (typeof window.ontouchstart !== 'undefined'),\r\n        parClass = 'is-dropdown-submenu-parent';\r\n\r\n    // used for onClick and in the keyboard handlers\r\n    var handleClickFn = function(e) {\r\n      var $elem = $(e.target).parentsUntil('ul', `.${parClass}`),\r\n          hasSub = $elem.hasClass(parClass),\r\n          hasClicked = $elem.attr('data-is-click') === 'true',\r\n          $sub = $elem.children('.is-dropdown-submenu');\r\n\r\n      if (hasSub) {\r\n        if (hasClicked) {\r\n          if (!_this.options.closeOnClick || (!_this.options.clickOpen && !hasTouch) || (_this.options.forceFollow && hasTouch)) { return; }\r\n          else {\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n            _this._hide($elem);\r\n          }\r\n        } else {\r\n          e.preventDefault();\r\n          e.stopImmediatePropagation();\r\n          _this._show($sub);\r\n          $elem.add($elem.parentsUntil(_this.$element, `.${parClass}`)).attr('data-is-click', true);\r\n        }\r\n      } else {\r\n        if(_this.options.closeOnClickInside){\r\n          _this._hide($elem);\r\n        }\r\n        return;\r\n      }\r\n    };\r\n\r\n    if (this.options.clickOpen || hasTouch) {\r\n      this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\r\n    }\r\n\r\n    if (!this.options.disableHover) {\r\n      this.$menuItems.on('mouseenter.zf.dropdownmenu', function(e) {\r\n        var $elem = $(this),\r\n            hasSub = $elem.hasClass(parClass);\r\n\r\n        if (hasSub) {\r\n          clearTimeout(_this.delay);\r\n          _this.delay = setTimeout(function() {\r\n            _this._show($elem.children('.is-dropdown-submenu'));\r\n          }, _this.options.hoverDelay);\r\n        }\r\n      }).on('mouseleave.zf.dropdownmenu', function(e) {\r\n        var $elem = $(this),\r\n            hasSub = $elem.hasClass(parClass);\r\n        if (hasSub && _this.options.autoclose) {\r\n          if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) { return false; }\r\n\r\n          clearTimeout(_this.delay);\r\n          _this.delay = setTimeout(function() {\r\n            _this._hide($elem);\r\n          }, _this.options.closingTime);\r\n        }\r\n      });\r\n    }\r\n    this.$menuItems.on('keydown.zf.dropdownmenu', function(e) {\r\n      var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\r\n          isTab = _this.$tabs.index($element) > -1,\r\n          $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\r\n          $prevElement,\r\n          $nextElement;\r\n\r\n      $elements.each(function(i) {\r\n        if ($(this).is($element)) {\r\n          $prevElement = $elements.eq(i-1);\r\n          $nextElement = $elements.eq(i+1);\r\n          return;\r\n        }\r\n      });\r\n\r\n      var nextSibling = function() {\r\n        if (!$element.is(':last-child')) {\r\n          $nextElement.children('a:first').focus();\r\n          e.preventDefault();\r\n        }\r\n      }, prevSibling = function() {\r\n        $prevElement.children('a:first').focus();\r\n        e.preventDefault();\r\n      }, openSub = function() {\r\n        var $sub = $element.children('ul.is-dropdown-submenu');\r\n        if ($sub.length) {\r\n          _this._show($sub);\r\n          $element.find('li > a:first').focus();\r\n          e.preventDefault();\r\n        } else { return; }\r\n      }, closeSub = function() {\r\n        //if ($element.is(':first-child')) {\r\n        var close = $element.parent('ul').parent('li');\r\n        close.children('a:first').focus();\r\n        _this._hide(close);\r\n        e.preventDefault();\r\n        //}\r\n      };\r\n      var functions = {\r\n        open: openSub,\r\n        close: function() {\r\n          _this._hide(_this.$element);\r\n          _this.$menuItems.find('a:first').focus(); // focus to first element\r\n          e.preventDefault();\r\n        },\r\n        handled: function() {\r\n          e.stopImmediatePropagation();\r\n        }\r\n      };\r\n\r\n      if (isTab) {\r\n        if (_this._isVertical()) { // vertical menu\r\n          if (Foundation.rtl()) { // right aligned\r\n            $.extend(functions, {\r\n              down: nextSibling,\r\n              up: prevSibling,\r\n              next: closeSub,\r\n              previous: openSub\r\n            });\r\n          } else { // left aligned\r\n            $.extend(functions, {\r\n              down: nextSibling,\r\n              up: prevSibling,\r\n              next: openSub,\r\n              previous: closeSub\r\n            });\r\n          }\r\n        } else { // horizontal menu\r\n          if (Foundation.rtl()) { // right aligned\r\n            $.extend(functions, {\r\n              next: prevSibling,\r\n              previous: nextSibling,\r\n              down: openSub,\r\n              up: closeSub\r\n            });\r\n          } else { // left aligned\r\n            $.extend(functions, {\r\n              next: nextSibling,\r\n              previous: prevSibling,\r\n              down: openSub,\r\n              up: closeSub\r\n            });\r\n          }\r\n        }\r\n      } else { // not tabs -> one sub\r\n        if (Foundation.rtl()) { // right aligned\r\n          $.extend(functions, {\r\n            next: closeSub,\r\n            previous: openSub,\r\n            down: nextSibling,\r\n            up: prevSibling\r\n          });\r\n        } else { // left aligned\r\n          $.extend(functions, {\r\n            next: openSub,\r\n            previous: closeSub,\r\n            down: nextSibling,\r\n            up: prevSibling\r\n          });\r\n        }\r\n      }\r\n      Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds an event handler to the body to close any dropdowns on a click.\r\n   * @function\r\n   * @private\r\n   */\r\n  _addBodyHandler() {\r\n    var $body = $(document.body),\r\n        _this = this;\r\n    $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu')\r\n         .on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function(e) {\r\n           var $link = _this.$element.find(e.target);\r\n           if ($link.length) { return; }\r\n\r\n           _this._hide();\r\n           $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\r\n         });\r\n  }\r\n\r\n  /**\r\n   * Opens a dropdown pane, and checks for collisions first.\r\n   * @param {jQuery} $sub - ul element that is a submenu to show\r\n   * @function\r\n   * @private\r\n   * @fires DropdownMenu#show\r\n   */\r\n  _show($sub) {\r\n    var idx = this.$tabs.index(this.$tabs.filter(function(i, el) {\r\n      return $(el).find($sub).length > 0;\r\n    }));\r\n    var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\r\n    this._hide($sibs, idx);\r\n    $sub.css('visibility', 'hidden').addClass('js-dropdown-active').attr({'aria-hidden': false})\r\n        .parent('li.is-dropdown-submenu-parent').addClass('is-active')\r\n        .attr({'aria-expanded': true});\r\n    var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\r\n    if (!clear) {\r\n      var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\r\n          $parentLi = $sub.parent('.is-dropdown-submenu-parent');\r\n      $parentLi.removeClass(`opens${oldClass}`).addClass(`opens-${this.options.alignment}`);\r\n      clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\r\n      if (!clear) {\r\n        $parentLi.removeClass(`opens-${this.options.alignment}`).addClass('opens-inner');\r\n      }\r\n      this.changed = true;\r\n    }\r\n    $sub.css('visibility', '');\r\n    if (this.options.closeOnClick) { this._addBodyHandler(); }\r\n    /**\r\n     * Fires when the new dropdown pane is visible.\r\n     * @event DropdownMenu#show\r\n     */\r\n    this.$element.trigger('show.zf.dropdownmenu', [$sub]);\r\n  }\r\n\r\n  /**\r\n   * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\r\n   * @function\r\n   * @param {jQuery} $elem - element with a submenu to hide\r\n   * @param {Number} idx - index of the $tabs collection to hide\r\n   * @private\r\n   */\r\n  _hide($elem, idx) {\r\n    var $toClose;\r\n    if ($elem && $elem.length) {\r\n      $toClose = $elem;\r\n    } else if (idx !== undefined) {\r\n      $toClose = this.$tabs.not(function(i, el) {\r\n        return i === idx;\r\n      });\r\n    }\r\n    else {\r\n      $toClose = this.$element;\r\n    }\r\n    var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\r\n\r\n    if (somethingToClose) {\r\n      $toClose.find('li.is-active').add($toClose).attr({\r\n        'aria-expanded': false,\r\n        'data-is-click': false\r\n      }).removeClass('is-active');\r\n\r\n      $toClose.find('ul.js-dropdown-active').attr({\r\n        'aria-hidden': true\r\n      }).removeClass('js-dropdown-active');\r\n\r\n      if (this.changed || $toClose.find('opens-inner').length) {\r\n        var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\r\n        $toClose.find('li.is-dropdown-submenu-parent').add($toClose)\r\n                .removeClass(`opens-inner opens-${this.options.alignment}`)\r\n                .addClass(`opens-${oldClass}`);\r\n        this.changed = false;\r\n      }\r\n      /**\r\n       * Fires when the open menus are closed.\r\n       * @event DropdownMenu#hide\r\n       */\r\n      this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the plugin.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click')\r\n        .removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\r\n    $(document.body).off('.zf.dropdownmenu');\r\n    Foundation.Nest.Burn(this.$element, 'dropdown');\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\n/**\r\n * Default settings for plugin\r\n */\r\nDropdownMenu.defaults = {\r\n  /**\r\n   * Disallows hover events from opening submenus\r\n   * @option\r\n   * @example false\r\n   */\r\n  disableHover: false,\r\n  /**\r\n   * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\r\n   * @option\r\n   * @example true\r\n   */\r\n  autoclose: true,\r\n  /**\r\n   * Amount of time to delay opening a submenu on hover event.\r\n   * @option\r\n   * @example 50\r\n   */\r\n  hoverDelay: 50,\r\n  /**\r\n   * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\r\n   * @option\r\n   * @example true\r\n   */\r\n  clickOpen: false,\r\n  /**\r\n   * Amount of time to delay closing a submenu on a mouseleave event.\r\n   * @option\r\n   * @example 500\r\n   */\r\n\r\n  closingTime: 500,\r\n  /**\r\n   * Position of the menu relative to what direction the submenus should open. Handled by JS.\r\n   * @option\r\n   * @example 'left'\r\n   */\r\n  alignment: 'left',\r\n  /**\r\n   * Allow clicks on the body to close any open submenus.\r\n   * @option\r\n   * @example true\r\n   */\r\n  closeOnClick: true,\r\n  /**\r\n   * Allow clicks on leaf anchor links to close any open submenus.\r\n   * @option\r\n   * @example true\r\n   */\r\n  closeOnClickInside: true,\r\n  /**\r\n   * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\r\n   * @option\r\n   * @example 'vertical'\r\n   */\r\n  verticalClass: 'vertical',\r\n  /**\r\n   * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\r\n   * @option\r\n   * @example 'align-right'\r\n   */\r\n  rightClass: 'align-right',\r\n  /**\r\n   * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\r\n   * @option\r\n   * @example false\r\n   */\r\n  forceFollow: true\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(DropdownMenu, 'DropdownMenu');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Equalizer module.\r\n * @module foundation.equalizer\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.timerAndImageLoader if equalizer contains images\r\n */\r\n\r\nclass Equalizer {\r\n  /**\r\n   * Creates a new instance of Equalizer.\r\n   * @class\r\n   * @fires Equalizer#init\r\n   * @param {Object} element - jQuery object to add the trigger to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options){\r\n    this.$element = element;\r\n    this.options  = $.extend({}, Equalizer.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Equalizer');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\r\n   * @private\r\n   */\r\n  _init() {\r\n    var eqId = this.$element.attr('data-equalizer') || '';\r\n    var $watched = this.$element.find(`[data-equalizer-watch=\"${eqId}\"]`);\r\n\r\n    this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\r\n    this.$element.attr('data-resize', (eqId || Foundation.GetYoDigits(6, 'eq')));\r\n\r\n    this.hasNested = this.$element.find('[data-equalizer]').length > 0;\r\n    this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\r\n    this.isOn = false;\r\n    this._bindHandler = {\r\n      onResizeMeBound: this._onResizeMe.bind(this),\r\n      onPostEqualizedBound: this._onPostEqualized.bind(this)\r\n    };\r\n\r\n    var imgs = this.$element.find('img');\r\n    var tooSmall;\r\n    if(this.options.equalizeOn){\r\n      tooSmall = this._checkMQ();\r\n      $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\r\n    }else{\r\n      this._events();\r\n    }\r\n    if((tooSmall !== undefined && tooSmall === false) || tooSmall === undefined){\r\n      if(imgs.length){\r\n        Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\r\n      }else{\r\n        this._reflow();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners if the breakpoint is too small.\r\n   * @private\r\n   */\r\n  _pauseEvents() {\r\n    this.isOn = false;\r\n    this.$element.off({\r\n      '.zf.equalizer': this._bindHandler.onPostEqualizedBound,\r\n      'resizeme.zf.trigger': this._bindHandler.onResizeMeBound\r\n    });\r\n  }\r\n\r\n  /**\r\n   * function to handle $elements resizeme.zf.trigger, with bound this on _bindHandler.onResizeMeBound\r\n   * @private\r\n   */\r\n  _onResizeMe(e) {\r\n    this._reflow();\r\n  }\r\n\r\n  /**\r\n   * function to handle $elements postequalized.zf.equalizer, with bound this on _bindHandler.onPostEqualizedBound\r\n   * @private\r\n   */\r\n  _onPostEqualized(e) {\r\n    if(e.target !== this.$element[0]){ this._reflow(); }\r\n  }\r\n\r\n  /**\r\n   * Initializes events for Equalizer.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n    this._pauseEvents();\r\n    if(this.hasNested){\r\n      this.$element.on('postequalized.zf.equalizer', this._bindHandler.onPostEqualizedBound);\r\n    }else{\r\n      this.$element.on('resizeme.zf.trigger', this._bindHandler.onResizeMeBound);\r\n    }\r\n    this.isOn = true;\r\n  }\r\n\r\n  /**\r\n   * Checks the current breakpoint to the minimum required size.\r\n   * @private\r\n   */\r\n  _checkMQ() {\r\n    var tooSmall = !Foundation.MediaQuery.atLeast(this.options.equalizeOn);\r\n    if(tooSmall){\r\n      if(this.isOn){\r\n        this._pauseEvents();\r\n        this.$watched.css('height', 'auto');\r\n      }\r\n    }else{\r\n      if(!this.isOn){\r\n        this._events();\r\n      }\r\n    }\r\n    return tooSmall;\r\n  }\r\n\r\n  /**\r\n   * A noop version for the plugin\r\n   * @private\r\n   */\r\n  _killswitch() {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Calls necessary functions to update Equalizer upon DOM change\r\n   * @private\r\n   */\r\n  _reflow() {\r\n    if(!this.options.equalizeOnStack){\r\n      if(this._isStacked()){\r\n        this.$watched.css('height', 'auto');\r\n        return false;\r\n      }\r\n    }\r\n    if (this.options.equalizeByRow) {\r\n      this.getHeightsByRow(this.applyHeightByRow.bind(this));\r\n    }else{\r\n      this.getHeights(this.applyHeight.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manually determines if the first 2 elements are *NOT* stacked.\r\n   * @private\r\n   */\r\n  _isStacked() {\r\n    return this.$watched[0].getBoundingClientRect().top !== this.$watched[1].getBoundingClientRect().top;\r\n  }\r\n\r\n  /**\r\n   * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n   * @param {Function} cb - A non-optional callback to return the heights array to.\r\n   * @returns {Array} heights - An array of heights of children within Equalizer container\r\n   */\r\n  getHeights(cb) {\r\n    var heights = [];\r\n    for(var i = 0, len = this.$watched.length; i < len; i++){\r\n      this.$watched[i].style.height = 'auto';\r\n      heights.push(this.$watched[i].offsetHeight);\r\n    }\r\n    cb(heights);\r\n  }\r\n\r\n  /**\r\n   * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n   * @param {Function} cb - A non-optional callback to return the heights array to.\r\n   * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n   */\r\n  getHeightsByRow(cb) {\r\n    var lastElTopOffset = (this.$watched.length ? this.$watched.first().offset().top : 0),\r\n        groups = [],\r\n        group = 0;\r\n    //group by Row\r\n    groups[group] = [];\r\n    for(var i = 0, len = this.$watched.length; i < len; i++){\r\n      this.$watched[i].style.height = 'auto';\r\n      //maybe could use this.$watched[i].offsetTop\r\n      var elOffsetTop = $(this.$watched[i]).offset().top;\r\n      if (elOffsetTop!=lastElTopOffset) {\r\n        group++;\r\n        groups[group] = [];\r\n        lastElTopOffset=elOffsetTop;\r\n      }\r\n      groups[group].push([this.$watched[i],this.$watched[i].offsetHeight]);\r\n    }\r\n\r\n    for (var j = 0, ln = groups.length; j < ln; j++) {\r\n      var heights = $(groups[j]).map(function(){ return this[1]; }).get();\r\n      var max         = Math.max.apply(null, heights);\r\n      groups[j].push(max);\r\n    }\r\n    cb(groups);\r\n  }\r\n\r\n  /**\r\n   * Changes the CSS height property of each child in an Equalizer parent to match the tallest\r\n   * @param {array} heights - An array of heights of children within Equalizer container\r\n   * @fires Equalizer#preequalized\r\n   * @fires Equalizer#postequalized\r\n   */\r\n  applyHeight(heights) {\r\n    var max = Math.max.apply(null, heights);\r\n    /**\r\n     * Fires before the heights are applied\r\n     * @event Equalizer#preequalized\r\n     */\r\n    this.$element.trigger('preequalized.zf.equalizer');\r\n\r\n    this.$watched.css('height', max);\r\n\r\n    /**\r\n     * Fires when the heights have been applied\r\n     * @event Equalizer#postequalized\r\n     */\r\n     this.$element.trigger('postequalized.zf.equalizer');\r\n  }\r\n\r\n  /**\r\n   * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\r\n   * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n   * @fires Equalizer#preequalized\r\n   * @fires Equalizer#preequalizedRow\r\n   * @fires Equalizer#postequalizedRow\r\n   * @fires Equalizer#postequalized\r\n   */\r\n  applyHeightByRow(groups) {\r\n    /**\r\n     * Fires before the heights are applied\r\n     */\r\n    this.$element.trigger('preequalized.zf.equalizer');\r\n    for (var i = 0, len = groups.length; i < len ; i++) {\r\n      var groupsILength = groups[i].length,\r\n          max = groups[i][groupsILength - 1];\r\n      if (groupsILength<=2) {\r\n        $(groups[i][0][0]).css({'height':'auto'});\r\n        continue;\r\n      }\r\n      /**\r\n        * Fires before the heights per row are applied\r\n        * @event Equalizer#preequalizedRow\r\n        */\r\n      this.$element.trigger('preequalizedrow.zf.equalizer');\r\n      for (var j = 0, lenJ = (groupsILength-1); j < lenJ ; j++) {\r\n        $(groups[i][j][0]).css({'height':max});\r\n      }\r\n      /**\r\n        * Fires when the heights per row have been applied\r\n        * @event Equalizer#postequalizedRow\r\n        */\r\n      this.$element.trigger('postequalizedrow.zf.equalizer');\r\n    }\r\n    /**\r\n     * Fires when the heights have been applied\r\n     */\r\n     this.$element.trigger('postequalized.zf.equalizer');\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of Equalizer.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this._pauseEvents();\r\n    this.$watched.css('height', 'auto');\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\n/**\r\n * Default settings for plugin\r\n */\r\nEqualizer.defaults = {\r\n  /**\r\n   * Enable height equalization when stacked on smaller screens.\r\n   * @option\r\n   * @example true\r\n   */\r\n  equalizeOnStack: false,\r\n  /**\r\n   * Enable height equalization row by row.\r\n   * @option\r\n   * @example false\r\n   */\r\n  equalizeByRow: false,\r\n  /**\r\n   * String representing the minimum breakpoint size the plugin should equalize heights on.\r\n   * @option\r\n   * @example 'medium'\r\n   */\r\n  equalizeOn: ''\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Equalizer, 'Equalizer');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Interchange module.\r\n * @module foundation.interchange\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.timerAndImageLoader\r\n */\r\n\r\nclass Interchange {\r\n  /**\r\n   * Creates a new instance of Interchange.\r\n   * @class\r\n   * @fires Interchange#init\r\n   * @param {Object} element - jQuery object to add the trigger to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Interchange.defaults, options);\r\n    this.rules = [];\r\n    this.currentPath = '';\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'Interchange');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    this._addBreakpoints();\r\n    this._generateRules();\r\n    this._reflow();\r\n  }\r\n\r\n  /**\r\n   * Initializes events for Interchange.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    $(window).on('resize.zf.interchange', Foundation.util.throttle(this._reflow.bind(this), 50));\r\n  }\r\n\r\n  /**\r\n   * Calls necessary functions to update Interchange upon DOM change\r\n   * @function\r\n   * @private\r\n   */\r\n  _reflow() {\r\n    var match;\r\n\r\n    // Iterate through each rule, but only save the last match\r\n    for (var i in this.rules) {\r\n      if(this.rules.hasOwnProperty(i)) {\r\n        var rule = this.rules[i];\r\n\r\n        if (window.matchMedia(rule.query).matches) {\r\n          match = rule;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (match) {\r\n      this.replace(match.path);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\r\n   * @function\r\n   * @private\r\n   */\r\n  _addBreakpoints() {\r\n    for (var i in Foundation.MediaQuery.queries) {\r\n      if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\r\n        var query = Foundation.MediaQuery.queries[i];\r\n        Interchange.SPECIAL_QUERIES[query.name] = query.value;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks the Interchange element for the provided media query + content pairings\r\n   * @function\r\n   * @private\r\n   * @param {Object} element - jQuery object that is an Interchange instance\r\n   * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\r\n   */\r\n  _generateRules(element) {\r\n    var rulesList = [];\r\n    var rules;\r\n\r\n    if (this.options.rules) {\r\n      rules = this.options.rules;\r\n    }\r\n    else {\r\n      rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\r\n    }\r\n\r\n    for (var i in rules) {\r\n      if(rules.hasOwnProperty(i)) {\r\n        var rule = rules[i].slice(1, -1).split(', ');\r\n        var path = rule.slice(0, -1).join('');\r\n        var query = rule[rule.length - 1];\r\n\r\n        if (Interchange.SPECIAL_QUERIES[query]) {\r\n          query = Interchange.SPECIAL_QUERIES[query];\r\n        }\r\n\r\n        rulesList.push({\r\n          path: path,\r\n          query: query\r\n        });\r\n      }\r\n    }\r\n\r\n    this.rules = rulesList;\r\n  }\r\n\r\n  /**\r\n   * Update the `src` property of an image, or change the HTML of a container, to the specified path.\r\n   * @function\r\n   * @param {String} path - Path to the image or HTML partial.\r\n   * @fires Interchange#replaced\r\n   */\r\n  replace(path) {\r\n    if (this.currentPath === path) return;\r\n\r\n    var _this = this,\r\n        trigger = 'replaced.zf.interchange';\r\n\r\n    // Replacing images\r\n    if (this.$element[0].nodeName === 'IMG') {\r\n      this.$element.attr('src', path).on('load', function() {\r\n        _this.currentPath = path;\r\n      })\r\n      .trigger(trigger);\r\n    }\r\n    // Replacing background images\r\n    else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\r\n      this.$element.css({ 'background-image': 'url('+path+')' })\r\n          .trigger(trigger);\r\n    }\r\n    // Replacing HTML\r\n    else {\r\n      $.get(path, function(response) {\r\n        _this.$element.html(response)\r\n             .trigger(trigger);\r\n        $(response).foundation();\r\n        _this.currentPath = path;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Fires when content in an Interchange element is done being loaded.\r\n     * @event Interchange#replaced\r\n     */\r\n    // this.$element.trigger('replaced.zf.interchange');\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of interchange.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    //TODO this.\r\n  }\r\n}\r\n\r\n/**\r\n * Default settings for plugin\r\n */\r\nInterchange.defaults = {\r\n  /**\r\n   * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\r\n   * @option\r\n   */\r\n  rules: null\r\n};\r\n\r\nInterchange.SPECIAL_QUERIES = {\r\n  'landscape': 'screen and (orientation: landscape)',\r\n  'portrait': 'screen and (orientation: portrait)',\r\n  'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Interchange, 'Interchange');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Magellan module.\r\n * @module foundation.magellan\r\n */\r\n\r\nclass Magellan {\r\n  /**\r\n   * Creates a new instance of Magellan.\r\n   * @class\r\n   * @fires Magellan#init\r\n   * @param {Object} element - jQuery object to add the trigger to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options  = $.extend({}, Magellan.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Magellan');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\r\n   * @private\r\n   */\r\n  _init() {\r\n    var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\r\n    var _this = this;\r\n    this.$targets = $('[data-magellan-target]');\r\n    this.$links = this.$element.find('a');\r\n    this.$element.attr({\r\n      'data-resize': id,\r\n      'data-scroll': id,\r\n      'id': id\r\n    });\r\n    this.$active = $();\r\n    this.scrollPos = parseInt(window.pageYOffset, 10);\r\n\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Calculates an array of pixel values that are the demarcation lines between locations on the page.\r\n   * Can be invoked if new elements are added or the size of a location changes.\r\n   * @function\r\n   */\r\n  calcPoints() {\r\n    var _this = this,\r\n        body = document.body,\r\n        html = document.documentElement;\r\n\r\n    this.points = [];\r\n    this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\r\n    this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\r\n\r\n    this.$targets.each(function(){\r\n      var $tar = $(this),\r\n          pt = Math.round($tar.offset().top - _this.options.threshold);\r\n      $tar.targetPoint = pt;\r\n      _this.points.push(pt);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes events for Magellan.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this,\r\n        $body = $('html, body'),\r\n        opts = {\r\n          duration: _this.options.animationDuration,\r\n          easing:   _this.options.animationEasing\r\n        };\r\n    $(window).one('load', function(){\r\n      if(_this.options.deepLinking){\r\n        if(location.hash){\r\n          _this.scrollToLoc(location.hash);\r\n        }\r\n      }\r\n      _this.calcPoints();\r\n      _this._updateActive();\r\n    });\r\n\r\n    this.$element.on({\r\n      'resizeme.zf.trigger': this.reflow.bind(this),\r\n      'scrollme.zf.trigger': this._updateActive.bind(this)\r\n    }).on('click.zf.magellan', 'a[href^=\"#\"]', function(e) {\r\n        e.preventDefault();\r\n        var arrival   = this.getAttribute('href');\r\n        _this.scrollToLoc(arrival);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Function to scroll to a given location on the page.\r\n   * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\r\n   * @function\r\n   */\r\n  scrollToLoc(loc) {\r\n    // Do nothing if target does not exist to prevent errors\r\n    if (!$(loc).length) {return false;}\r\n    var scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\r\n\r\n    $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing);\r\n  }\r\n\r\n  /**\r\n   * Calls necessary functions to update Magellan upon DOM change\r\n   * @function\r\n   */\r\n  reflow() {\r\n    this.calcPoints();\r\n    this._updateActive();\r\n  }\r\n\r\n  /**\r\n   * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\r\n   * @private\r\n   * @function\r\n   * @fires Magellan#update\r\n   */\r\n  _updateActive(/*evt, elem, scrollPos*/) {\r\n    var winPos = /*scrollPos ||*/ parseInt(window.pageYOffset, 10),\r\n        curIdx;\r\n\r\n    if(winPos + this.winHeight === this.docHeight){ curIdx = this.points.length - 1; }\r\n    else if(winPos < this.points[0]){ curIdx = 0; }\r\n    else{\r\n      var isDown = this.scrollPos < winPos,\r\n          _this = this,\r\n          curVisible = this.points.filter(function(p, i){\r\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\r\n          });\r\n      curIdx = curVisible.length ? curVisible.length - 1 : 0;\r\n    }\r\n\r\n    this.$active.removeClass(this.options.activeClass);\r\n    this.$active = this.$links.filter('[href=\"#' + this.$targets.eq(curIdx).data('magellan-target') + '\"]').addClass(this.options.activeClass);\r\n\r\n    if(this.options.deepLinking){\r\n      var hash = this.$active[0].getAttribute('href');\r\n      if(window.history.pushState){\r\n        window.history.pushState(null, null, hash);\r\n      }else{\r\n        window.location.hash = hash;\r\n      }\r\n    }\r\n\r\n    this.scrollPos = winPos;\r\n    /**\r\n     * Fires when magellan is finished updating to the new active element.\r\n     * @event Magellan#update\r\n     */\r\n    this.$element.trigger('update.zf.magellan', [this.$active]);\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of Magellan and resets the url of the window.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$element.off('.zf.trigger .zf.magellan')\r\n        .find(`.${this.options.activeClass}`).removeClass(this.options.activeClass);\r\n\r\n    if(this.options.deepLinking){\r\n      var hash = this.$active[0].getAttribute('href');\r\n      window.location.hash.replace(hash, '');\r\n    }\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\n/**\r\n * Default settings for plugin\r\n */\r\nMagellan.defaults = {\r\n  /**\r\n   * Amount of time, in ms, the animated scrolling should take between locations.\r\n   * @option\r\n   * @example 500\r\n   */\r\n  animationDuration: 500,\r\n  /**\r\n   * Animation style to use when scrolling between locations.\r\n   * @option\r\n   * @example 'ease-in-out'\r\n   */\r\n  animationEasing: 'linear',\r\n  /**\r\n   * Number of pixels to use as a marker for location changes.\r\n   * @option\r\n   * @example 50\r\n   */\r\n  threshold: 50,\r\n  /**\r\n   * Class applied to the active locations link on the magellan container.\r\n   * @option\r\n   * @example 'active'\r\n   */\r\n  activeClass: 'active',\r\n  /**\r\n   * Allows the script to manipulate the url of the current page, and if supported, alter the history.\r\n   * @option\r\n   * @example true\r\n   */\r\n  deepLinking: false,\r\n  /**\r\n   * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\r\n   * @option\r\n   * @example 25\r\n   */\r\n  barOffset: 0\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Magellan, 'Magellan');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * OffCanvas module.\r\n * @module foundation.offcanvas\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.triggers\r\n * @requires foundation.util.motion\r\n */\r\n\r\nclass OffCanvas {\r\n  /**\r\n   * Creates a new instance of an off-canvas wrapper.\r\n   * @class\r\n   * @fires OffCanvas#init\r\n   * @param {Object} element - jQuery object to initialize.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\r\n    this.$lastTrigger = $();\r\n    this.$triggers = $();\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'OffCanvas')\r\n    Foundation.Keyboard.register('OffCanvas', {\r\n      'ESCAPE': 'close'\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var id = this.$element.attr('id');\r\n\r\n    this.$element.attr('aria-hidden', 'true');\r\n\r\n    // Find triggers that affect this element and add aria-expanded to them\r\n    this.$triggers = $(document)\r\n      .find('[data-open=\"'+id+'\"], [data-close=\"'+id+'\"], [data-toggle=\"'+id+'\"]')\r\n      .attr('aria-expanded', 'false')\r\n      .attr('aria-controls', id);\r\n\r\n    // Add a close trigger over the body if necessary\r\n    if (this.options.closeOnClick) {\r\n      if ($('.js-off-canvas-exit').length) {\r\n        this.$exiter = $('.js-off-canvas-exit');\r\n      } else {\r\n        var exiter = document.createElement('div');\r\n        exiter.setAttribute('class', 'js-off-canvas-exit');\r\n        $('[data-off-canvas-content]').append(exiter);\r\n\r\n        this.$exiter = $(exiter);\r\n      }\r\n    }\r\n\r\n    this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\r\n\r\n    if (this.options.isRevealed) {\r\n      this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\r\n      this._setMQChecker();\r\n    }\r\n    if (!this.options.transitionTime) {\r\n      this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration) * 1000;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers to the off-canvas wrapper and the exit overlay.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    this.$element.off('.zf.trigger .zf.offcanvas').on({\r\n      'open.zf.trigger': this.open.bind(this),\r\n      'close.zf.trigger': this.close.bind(this),\r\n      'toggle.zf.trigger': this.toggle.bind(this),\r\n      'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\r\n    });\r\n\r\n    if (this.options.closeOnClick && this.$exiter.length) {\r\n      this.$exiter.on({'click.zf.offcanvas': this.close.bind(this)});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Applies event listener for elements that will reveal at certain breakpoints.\r\n   * @private\r\n   */\r\n  _setMQChecker() {\r\n    var _this = this;\r\n\r\n    $(window).on('changed.zf.mediaquery', function() {\r\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\r\n        _this.reveal(true);\r\n      } else {\r\n        _this.reveal(false);\r\n      }\r\n    }).one('load.zf.offcanvas', function() {\r\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\r\n        _this.reveal(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\r\n   * @param {Boolean} isRevealed - true if element should be revealed.\r\n   * @function\r\n   */\r\n  reveal(isRevealed) {\r\n    var $closer = this.$element.find('[data-close]');\r\n    if (isRevealed) {\r\n      this.close();\r\n      this.isRevealed = true;\r\n      // if (!this.options.forceTop) {\r\n      //   var scrollPos = parseInt(window.pageYOffset);\r\n      //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\r\n      // }\r\n      // if (this.options.isSticky) { this._stick(); }\r\n      this.$element.off('open.zf.trigger toggle.zf.trigger');\r\n      if ($closer.length) { $closer.hide(); }\r\n    } else {\r\n      this.isRevealed = false;\r\n      // if (this.options.isSticky || !this.options.forceTop) {\r\n      //   this.$element[0].style.transform = '';\r\n      //   $(window).off('scroll.zf.offcanvas');\r\n      // }\r\n      this.$element.on({\r\n        'open.zf.trigger': this.open.bind(this),\r\n        'toggle.zf.trigger': this.toggle.bind(this)\r\n      });\r\n      if ($closer.length) {\r\n        $closer.show();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the off-canvas menu.\r\n   * @function\r\n   * @param {Object} event - Event object passed from listener.\r\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n   * @fires OffCanvas#opened\r\n   */\r\n  open(event, trigger) {\r\n    if (this.$element.hasClass('is-open') || this.isRevealed) { return; }\r\n    var _this = this,\r\n        $body = $(document.body);\r\n\r\n    if (this.options.forceTop) {\r\n      $('body').scrollTop(0);\r\n    }\r\n    // window.pageYOffset = 0;\r\n\r\n    // if (!this.options.forceTop) {\r\n    //   var scrollPos = parseInt(window.pageYOffset);\r\n    //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\r\n    //   if (this.$exiter.length) {\r\n    //     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\r\n    //   }\r\n    // }\r\n    /**\r\n     * Fires when the off-canvas menu opens.\r\n     * @event OffCanvas#opened\r\n     */\r\n\r\n    var $wrapper = $('[data-off-canvas-wrapper]');\r\n    $wrapper.addClass('is-off-canvas-open is-open-'+ _this.options.position);\r\n\r\n    _this.$element.addClass('is-open')\r\n\r\n      // if (_this.options.isSticky) {\r\n      //   _this._stick();\r\n      // }\r\n\r\n    this.$triggers.attr('aria-expanded', 'true');\r\n    this.$element.attr('aria-hidden', 'false')\r\n        .trigger('opened.zf.offcanvas');\r\n\r\n    if (this.options.closeOnClick) {\r\n      this.$exiter.addClass('is-visible');\r\n    }\r\n\r\n    if (trigger) {\r\n      this.$lastTrigger = trigger;\r\n    }\r\n\r\n    if (this.options.autoFocus) {\r\n      $wrapper.one(Foundation.transitionend($wrapper), function() {\r\n        if(_this.$element.hasClass('is-open')) { // handle double clicks\r\n          _this.$element.attr('tabindex', '-1');\r\n          _this.$element.focus();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.options.trapFocus) {\r\n      $wrapper.one(Foundation.transitionend($wrapper), function() {\r\n        if(_this.$element.hasClass('is-open')) { // handle double clicks\r\n          _this.$element.attr('tabindex', '-1');\r\n          _this.trapFocus();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Traps focus within the offcanvas on open.\r\n   * @private\r\n   */\r\n  _trapFocus() {\r\n    var focusable = Foundation.Keyboard.findFocusable(this.$element),\r\n        first = focusable.eq(0),\r\n        last = focusable.eq(-1);\r\n\r\n    focusable.off('.zf.offcanvas').on('keydown.zf.offcanvas', function(e) {\r\n      var key = Foundation.Keyboard.parseKey(e);\r\n      if (key === 'TAB' && e.target === last[0]) {\r\n        e.preventDefault();\r\n        first.focus();\r\n      }\r\n      if (key === 'SHIFT_TAB' && e.target === first[0]) {\r\n        e.preventDefault();\r\n        last.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Allows the offcanvas to appear sticky utilizing translate properties.\r\n   * @private\r\n   */\r\n  // OffCanvas.prototype._stick = function() {\r\n  //   var elStyle = this.$element[0].style;\r\n  //\r\n  //   if (this.options.closeOnClick) {\r\n  //     var exitStyle = this.$exiter[0].style;\r\n  //   }\r\n  //\r\n  //   $(window).on('scroll.zf.offcanvas', function(e) {\r\n  //     console.log(e);\r\n  //     var pageY = window.pageYOffset;\r\n  //     elStyle.transform = 'translate(0,' + pageY + 'px)';\r\n  //     if (exitStyle !== undefined) { exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\r\n  //   });\r\n  //   // this.$element.trigger('stuck.zf.offcanvas');\r\n  // };\r\n  /**\r\n   * Closes the off-canvas menu.\r\n   * @function\r\n   * @param {Function} cb - optional cb to fire after closure.\r\n   * @fires OffCanvas#closed\r\n   */\r\n  close(cb) {\r\n    if (!this.$element.hasClass('is-open') || this.isRevealed) { return; }\r\n\r\n    var _this = this;\r\n\r\n    //  Foundation.Move(this.options.transitionTime, this.$element, function() {\r\n    $('[data-off-canvas-wrapper]').removeClass(`is-off-canvas-open is-open-${_this.options.position}`);\r\n    _this.$element.removeClass('is-open');\r\n      // Foundation._reflow();\r\n    // });\r\n    this.$element.attr('aria-hidden', 'true')\r\n      /**\r\n       * Fires when the off-canvas menu opens.\r\n       * @event OffCanvas#closed\r\n       */\r\n        .trigger('closed.zf.offcanvas');\r\n    // if (_this.options.isSticky || !_this.options.forceTop) {\r\n    //   setTimeout(function() {\r\n    //     _this.$element[0].style.transform = '';\r\n    //     $(window).off('scroll.zf.offcanvas');\r\n    //   }, this.options.transitionTime);\r\n    // }\r\n    if (this.options.closeOnClick) {\r\n      this.$exiter.removeClass('is-visible');\r\n    }\r\n\r\n    this.$triggers.attr('aria-expanded', 'false');\r\n    if (this.options.trapFocus) {\r\n      $('[data-off-canvas-content]').removeAttr('tabindex');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the off-canvas menu open or closed.\r\n   * @function\r\n   * @param {Object} event - Event object passed from listener.\r\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n   */\r\n  toggle(event, trigger) {\r\n    if (this.$element.hasClass('is-open')) {\r\n      this.close(event, trigger);\r\n    }\r\n    else {\r\n      this.open(event, trigger);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\r\n   * @function\r\n   * @private\r\n   */\r\n  _handleKeyboard(e) {\r\n    Foundation.Keyboard.handleKey(e, 'OffCanvas', {\r\n      close: () => {\r\n        this.close();\r\n        this.$lastTrigger.focus();\r\n        return true;\r\n      },\r\n      handled: () => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Destroys the offcanvas plugin.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.close();\r\n    this.$element.off('.zf.trigger .zf.offcanvas');\r\n    this.$exiter.off('.zf.offcanvas');\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nOffCanvas.defaults = {\r\n  /**\r\n   * Allow the user to click outside of the menu to close it.\r\n   * @option\r\n   * @example true\r\n   */\r\n  closeOnClick: true,\r\n\r\n  /**\r\n   * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\r\n   * @option\r\n   * @example 500\r\n   */\r\n  transitionTime: 0,\r\n\r\n  /**\r\n   * Direction the offcanvas opens from. Determines class applied to body.\r\n   * @option\r\n   * @example left\r\n   */\r\n  position: 'left',\r\n\r\n  /**\r\n   * Force the page to scroll to top on open.\r\n   * @option\r\n   * @example true\r\n   */\r\n  forceTop: true,\r\n\r\n  /**\r\n   * Allow the offcanvas to remain open for certain breakpoints.\r\n   * @option\r\n   * @example false\r\n   */\r\n  isRevealed: false,\r\n\r\n  /**\r\n   * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\r\n   * @option\r\n   * @example reveal-for-large\r\n   */\r\n  revealOn: null,\r\n\r\n  /**\r\n   * Force focus to the offcanvas on open. If true, will focus the opening trigger on close. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\r\n   * @option\r\n   * @example true\r\n   */\r\n  autoFocus: true,\r\n\r\n  /**\r\n   * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\r\n   * @option\r\n   * TODO improve the regex testing for this.\r\n   * @example reveal-for-large\r\n   */\r\n  revealClass: 'reveal-for-',\r\n\r\n  /**\r\n   * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\r\n   * @option\r\n   * @example true\r\n   */\r\n  trapFocus: false\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(OffCanvas, 'OffCanvas');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Orbit module.\r\n * @module foundation.orbit\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.motion\r\n * @requires foundation.util.timerAndImageLoader\r\n * @requires foundation.util.touch\r\n */\r\n\r\nclass Orbit {\r\n  /**\r\n  * Creates a new instance of an orbit carousel.\r\n  * @class\r\n  * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\r\n  * @param {Object} options - Overrides to the default plugin settings.\r\n  */\r\n  constructor(element, options){\r\n    this.$element = element;\r\n    this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Orbit');\r\n    Foundation.Keyboard.register('Orbit', {\r\n      'ltr': {\r\n        'ARROW_RIGHT': 'next',\r\n        'ARROW_LEFT': 'previous'\r\n      },\r\n      'rtl': {\r\n        'ARROW_LEFT': 'next',\r\n        'ARROW_RIGHT': 'previous'\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\r\n  * @function\r\n  * @private\r\n  */\r\n  _init() {\r\n    this.$wrapper = this.$element.find(`.${this.options.containerClass}`);\r\n    this.$slides = this.$element.find(`.${this.options.slideClass}`);\r\n    var $images = this.$element.find('img'),\r\n    initActive = this.$slides.filter('.is-active');\r\n\r\n    if (!initActive.length) {\r\n      this.$slides.eq(0).addClass('is-active');\r\n    }\r\n\r\n    if (!this.options.useMUI) {\r\n      this.$slides.addClass('no-motionui');\r\n    }\r\n\r\n    if ($images.length) {\r\n      Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\r\n    } else {\r\n      this._prepareForOrbit();//hehe\r\n    }\r\n\r\n    if (this.options.bullets) {\r\n      this._loadBullets();\r\n    }\r\n\r\n    this._events();\r\n\r\n    if (this.options.autoPlay && this.$slides.length > 1) {\r\n      this.geoSync();\r\n    }\r\n\r\n    if (this.options.accessible) { // allow wrapper to be focusable to enable arrow navigation\r\n      this.$wrapper.attr('tabindex', 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Creates a jQuery collection of bullets, if they are being used.\r\n  * @function\r\n  * @private\r\n  */\r\n  _loadBullets() {\r\n    this.$bullets = this.$element.find(`.${this.options.boxOfBullets}`).find('button');\r\n  }\r\n\r\n  /**\r\n  * Sets a `timer` object on the orbit, and starts the counter for the next slide.\r\n  * @function\r\n  */\r\n  geoSync() {\r\n    var _this = this;\r\n    this.timer = new Foundation.Timer(\r\n      this.$element,\r\n      {\r\n        duration: this.options.timerDelay,\r\n        infinite: false\r\n      },\r\n      function() {\r\n        _this.changeSlide(true);\r\n      });\r\n    this.timer.start();\r\n  }\r\n\r\n  /**\r\n  * Sets wrapper and slide heights for the orbit.\r\n  * @function\r\n  * @private\r\n  */\r\n  _prepareForOrbit() {\r\n    var _this = this;\r\n    this._setWrapperHeight(function(max){\r\n      _this._setSlideHeight(max);\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\r\n  * @function\r\n  * @private\r\n  * @param {Function} cb - a callback function to fire when complete.\r\n  */\r\n  _setWrapperHeight(cb) {//rewrite this to `for` loop\r\n    var max = 0, temp, counter = 0;\r\n\r\n    this.$slides.each(function() {\r\n      temp = this.getBoundingClientRect().height;\r\n      $(this).attr('data-slide', counter);\r\n\r\n      if (counter) {//if not the first slide, set css position and display property\r\n        $(this).css({'position': 'relative', 'display': 'none'});\r\n      }\r\n      max = temp > max ? temp : max;\r\n      counter++;\r\n    });\r\n\r\n    if (counter === this.$slides.length) {\r\n      this.$wrapper.css({'height': max}); //only change the wrapper height property once.\r\n      cb(max); //fire callback with max height dimension.\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Sets the max-height of each slide.\r\n  * @function\r\n  * @private\r\n  */\r\n  _setSlideHeight(height) {\r\n    this.$slides.each(function() {\r\n      $(this).css('max-height', height);\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Adds event listeners to basically everything within the element.\r\n  * @function\r\n  * @private\r\n  */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    //***************************************\r\n    //**Now using custom event - thanks to:**\r\n    //**      Yohai Ararat of Toronto      **\r\n    //***************************************\r\n    if (this.$slides.length > 1) {\r\n\r\n      if (this.options.swipe) {\r\n        this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit')\r\n        .on('swipeleft.zf.orbit', function(e){\r\n          e.preventDefault();\r\n          _this.changeSlide(true);\r\n        }).on('swiperight.zf.orbit', function(e){\r\n          e.preventDefault();\r\n          _this.changeSlide(false);\r\n        });\r\n      }\r\n      //***************************************\r\n\r\n      if (this.options.autoPlay) {\r\n        this.$slides.on('click.zf.orbit', function() {\r\n          _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\r\n          _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\r\n        });\r\n\r\n        if (this.options.pauseOnHover) {\r\n          this.$element.on('mouseenter.zf.orbit', function() {\r\n            _this.timer.pause();\r\n          }).on('mouseleave.zf.orbit', function() {\r\n            if (!_this.$element.data('clickedOn')) {\r\n              _this.timer.start();\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (this.options.navButtons) {\r\n        var $controls = this.$element.find(`.${this.options.nextClass}, .${this.options.prevClass}`);\r\n        $controls.attr('tabindex', 0)\r\n        //also need to handle enter/return and spacebar key presses\r\n        .on('click.zf.orbit touchend.zf.orbit', function(e){\r\n\t  e.preventDefault();\r\n          _this.changeSlide($(this).hasClass(_this.options.nextClass));\r\n        });\r\n      }\r\n\r\n      if (this.options.bullets) {\r\n        this.$bullets.on('click.zf.orbit touchend.zf.orbit', function() {\r\n          if (/is-active/g.test(this.className)) { return false; }//if this is active, kick out of function.\r\n          var idx = $(this).data('slide'),\r\n          ltr = idx > _this.$slides.filter('.is-active').data('slide'),\r\n          $slide = _this.$slides.eq(idx);\r\n\r\n          _this.changeSlide(ltr, $slide, idx);\r\n        });\r\n      }\r\n      \r\n      if (this.options.accessible) {\r\n        this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function(e) {\r\n          // handle keyboard event with keyboard util\r\n          Foundation.Keyboard.handleKey(e, 'Orbit', {\r\n            next: function() {\r\n              _this.changeSlide(true);\r\n            },\r\n            previous: function() {\r\n              _this.changeSlide(false);\r\n            },\r\n            handled: function() { // if bullet is focused, make sure focus moves\r\n              if ($(e.target).is(_this.$bullets)) {\r\n                _this.$bullets.filter('.is-active').focus();\r\n              }\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Changes the current slide to a new one.\r\n  * @function\r\n  * @param {Boolean} isLTR - flag if the slide should move left to right.\r\n  * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\r\n  * @param {Number} idx - the index of the new slide in its collection, if one chosen.\r\n  * @fires Orbit#slidechange\r\n  */\r\n  changeSlide(isLTR, chosenSlide, idx) {\r\n    var $curSlide = this.$slides.filter('.is-active').eq(0);\r\n\r\n    if (/mui/g.test($curSlide[0].className)) { return false; } //if the slide is currently animating, kick out of the function\r\n\r\n    var $firstSlide = this.$slides.first(),\r\n    $lastSlide = this.$slides.last(),\r\n    dirIn = isLTR ? 'Right' : 'Left',\r\n    dirOut = isLTR ? 'Left' : 'Right',\r\n    _this = this,\r\n    $newSlide;\r\n\r\n    if (!chosenSlide) { //most of the time, this will be auto played or clicked from the navButtons.\r\n      $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\r\n      (this.options.infiniteWrap ? $curSlide.next(`.${this.options.slideClass}`).length ? $curSlide.next(`.${this.options.slideClass}`) : $firstSlide : $curSlide.next(`.${this.options.slideClass}`))//pick next slide if moving left to right\r\n      :\r\n      (this.options.infiniteWrap ? $curSlide.prev(`.${this.options.slideClass}`).length ? $curSlide.prev(`.${this.options.slideClass}`) : $lastSlide : $curSlide.prev(`.${this.options.slideClass}`));//pick prev slide if moving right to left\r\n    } else {\r\n      $newSlide = chosenSlide;\r\n    }\r\n\r\n    if ($newSlide.length) {\r\n      /**\r\n      * Triggers before the next slide starts animating in and only if a next slide has been found.\r\n      * @event Orbit#beforeslidechange\r\n      */\r\n      this.$element.trigger('beforeslidechange.zf.orbit', [$curSlide, $newSlide]);\r\n      \r\n      if (this.options.bullets) {\r\n        idx = idx || this.$slides.index($newSlide); //grab index to update bullets\r\n        this._updateBullets(idx);\r\n      }\r\n\r\n      if (this.options.useMUI) {\r\n        Foundation.Motion.animateIn(\r\n          $newSlide.addClass('is-active').css({'position': 'absolute', 'top': 0}),\r\n          this.options[`animInFrom${dirIn}`],\r\n          function(){\r\n            $newSlide.css({'position': 'relative', 'display': 'block'})\r\n            .attr('aria-live', 'polite');\r\n        });\r\n\r\n        Foundation.Motion.animateOut(\r\n          $curSlide.removeClass('is-active'),\r\n          this.options[`animOutTo${dirOut}`],\r\n          function(){\r\n            $curSlide.removeAttr('aria-live');\r\n            if(_this.options.autoPlay && !_this.timer.isPaused){\r\n              _this.timer.restart();\r\n            }\r\n            //do stuff?\r\n          });\r\n      } else {\r\n        $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\r\n        $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\r\n        if (this.options.autoPlay && !this.timer.isPaused) {\r\n          this.timer.restart();\r\n        }\r\n      }\r\n    /**\r\n    * Triggers when the slide has finished animating in.\r\n    * @event Orbit#slidechange\r\n    */\r\n      this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Updates the active state of the bullets, if displayed.\r\n  * @function\r\n  * @private\r\n  * @param {Number} idx - the index of the current slide.\r\n  */\r\n  _updateBullets(idx) {\r\n    var $oldBullet = this.$element.find(`.${this.options.boxOfBullets}`)\r\n    .find('.is-active').removeClass('is-active').blur(),\r\n    span = $oldBullet.find('span:last').detach(),\r\n    $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\r\n  }\r\n\r\n  /**\r\n  * Destroys the carousel and hides the element.\r\n  * @function\r\n  */\r\n  destroy() {\r\n    this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nOrbit.defaults = {\r\n  /**\r\n  * Tells the JS to look for and loadBullets.\r\n  * @option\r\n  * @example true\r\n  */\r\n  bullets: true,\r\n  /**\r\n  * Tells the JS to apply event listeners to nav buttons\r\n  * @option\r\n  * @example true\r\n  */\r\n  navButtons: true,\r\n  /**\r\n  * motion-ui animation class to apply\r\n  * @option\r\n  * @example 'slide-in-right'\r\n  */\r\n  animInFromRight: 'slide-in-right',\r\n  /**\r\n  * motion-ui animation class to apply\r\n  * @option\r\n  * @example 'slide-out-right'\r\n  */\r\n  animOutToRight: 'slide-out-right',\r\n  /**\r\n  * motion-ui animation class to apply\r\n  * @option\r\n  * @example 'slide-in-left'\r\n  *\r\n  */\r\n  animInFromLeft: 'slide-in-left',\r\n  /**\r\n  * motion-ui animation class to apply\r\n  * @option\r\n  * @example 'slide-out-left'\r\n  */\r\n  animOutToLeft: 'slide-out-left',\r\n  /**\r\n  * Allows Orbit to automatically animate on page load.\r\n  * @option\r\n  * @example true\r\n  */\r\n  autoPlay: true,\r\n  /**\r\n  * Amount of time, in ms, between slide transitions\r\n  * @option\r\n  * @example 5000\r\n  */\r\n  timerDelay: 5000,\r\n  /**\r\n  * Allows Orbit to infinitely loop through the slides\r\n  * @option\r\n  * @example true\r\n  */\r\n  infiniteWrap: true,\r\n  /**\r\n  * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\r\n  * @option\r\n  * @example true\r\n  */\r\n  swipe: true,\r\n  /**\r\n  * Allows the timing function to pause animation on hover.\r\n  * @option\r\n  * @example true\r\n  */\r\n  pauseOnHover: true,\r\n  /**\r\n  * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\r\n  * @option\r\n  * @example true\r\n  */\r\n  accessible: true,\r\n  /**\r\n  * Class applied to the container of Orbit\r\n  * @option\r\n  * @example 'orbit-container'\r\n  */\r\n  containerClass: 'orbit-container',\r\n  /**\r\n  * Class applied to individual slides.\r\n  * @option\r\n  * @example 'orbit-slide'\r\n  */\r\n  slideClass: 'orbit-slide',\r\n  /**\r\n  * Class applied to the bullet container. You're welcome.\r\n  * @option\r\n  * @example 'orbit-bullets'\r\n  */\r\n  boxOfBullets: 'orbit-bullets',\r\n  /**\r\n  * Class applied to the `next` navigation button.\r\n  * @option\r\n  * @example 'orbit-next'\r\n  */\r\n  nextClass: 'orbit-next',\r\n  /**\r\n  * Class applied to the `previous` navigation button.\r\n  * @option\r\n  * @example 'orbit-previous'\r\n  */\r\n  prevClass: 'orbit-previous',\r\n  /**\r\n  * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\r\n  * @option\r\n  * @example true\r\n  */\r\n  useMUI: true\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Orbit, 'Orbit');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * ResponsiveMenu module.\r\n * @module foundation.responsiveMenu\r\n * @requires foundation.util.triggers\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.accordionMenu\r\n * @requires foundation.util.drilldown\r\n * @requires foundation.util.dropdown-menu\r\n */\r\n\r\nclass ResponsiveMenu {\r\n  /**\r\n   * Creates a new instance of a responsive menu.\r\n   * @class\r\n   * @fires ResponsiveMenu#init\r\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = $(element);\r\n    this.rules = this.$element.data('responsive-menu');\r\n    this.currentMq = null;\r\n    this.currentPlugin = null;\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'ResponsiveMenu');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\r\n    if (typeof this.rules === 'string') {\r\n      let rulesTree = {};\r\n\r\n      // Parse rules from \"classes\" pulled from data attribute\r\n      let rules = this.rules.split(' ');\r\n\r\n      // Iterate through every rule found\r\n      for (let i = 0; i < rules.length; i++) {\r\n        let rule = rules[i].split('-');\r\n        let ruleSize = rule.length > 1 ? rule[0] : 'small';\r\n        let rulePlugin = rule.length > 1 ? rule[1] : rule[0];\r\n\r\n        if (MenuPlugins[rulePlugin] !== null) {\r\n          rulesTree[ruleSize] = MenuPlugins[rulePlugin];\r\n        }\r\n      }\r\n\r\n      this.rules = rulesTree;\r\n    }\r\n\r\n    if (!$.isEmptyObject(this.rules)) {\r\n      this._checkMediaQueries();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes events for the Menu.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    $(window).on('changed.zf.mediaquery', function() {\r\n      _this._checkMediaQueries();\r\n    });\r\n    // $(window).on('resize.zf.ResponsiveMenu', function() {\r\n    //   _this._checkMediaQueries();\r\n    // });\r\n  }\r\n\r\n  /**\r\n   * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\r\n   * @function\r\n   * @private\r\n   */\r\n  _checkMediaQueries() {\r\n    var matchedMq, _this = this;\r\n    // Iterate through each rule and find the last matching rule\r\n    $.each(this.rules, function(key) {\r\n      if (Foundation.MediaQuery.atLeast(key)) {\r\n        matchedMq = key;\r\n      }\r\n    });\r\n\r\n    // No match? No dice\r\n    if (!matchedMq) return;\r\n\r\n    // Plugin already initialized? We good\r\n    if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\r\n\r\n    // Remove existing plugin-specific CSS classes\r\n    $.each(MenuPlugins, function(key, value) {\r\n      _this.$element.removeClass(value.cssClass);\r\n    });\r\n\r\n    // Add the CSS class for the new plugin\r\n    this.$element.addClass(this.rules[matchedMq].cssClass);\r\n\r\n    // Create an instance of the new plugin\r\n    if (this.currentPlugin) this.currentPlugin.destroy();\r\n    this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\r\n  }\r\n\r\n  /**\r\n   * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.currentPlugin.destroy();\r\n    $(window).off('.zf.ResponsiveMenu');\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nResponsiveMenu.defaults = {};\r\n\r\n// The plugin matches the plugin classes with these plugin instances.\r\nvar MenuPlugins = {\r\n  dropdown: {\r\n    cssClass: 'dropdown',\r\n    plugin: Foundation._plugins['dropdown-menu'] || null\r\n  },\r\n drilldown: {\r\n    cssClass: 'drilldown',\r\n    plugin: Foundation._plugins['drilldown'] || null\r\n  },\r\n  accordion: {\r\n    cssClass: 'accordion-menu',\r\n    plugin: Foundation._plugins['accordion-menu'] || null\r\n  }\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * ResponsiveToggle module.\r\n * @module foundation.responsiveToggle\r\n * @requires foundation.util.mediaQuery\r\n */\r\n\r\nclass ResponsiveToggle {\r\n  /**\r\n   * Creates a new instance of Tab Bar.\r\n   * @class\r\n   * @fires ResponsiveToggle#init\r\n   * @param {jQuery} element - jQuery object to attach tab bar functionality to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = $(element);\r\n    this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'ResponsiveToggle');\r\n  }\r\n\r\n  /**\r\n   * Initializes the tab bar by finding the target element, toggling element, and running update().\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var targetID = this.$element.data('responsive-toggle');\r\n    if (!targetID) {\r\n      console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\r\n    }\r\n\r\n    this.$targetMenu = $(`#${targetID}`);\r\n    this.$toggler = this.$element.find('[data-toggle]');\r\n\r\n    this._update();\r\n  }\r\n\r\n  /**\r\n   * Adds necessary event handlers for the tab bar to work.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    this._updateMqHandler = this._update.bind(this);\r\n    \r\n    $(window).on('changed.zf.mediaquery', this._updateMqHandler);\r\n\r\n    this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Checks the current media query to determine if the tab bar should be visible or hidden.\r\n   * @function\r\n   * @private\r\n   */\r\n  _update() {\r\n    // Mobile\r\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\r\n      this.$element.show();\r\n      this.$targetMenu.hide();\r\n    }\r\n\r\n    // Desktop\r\n    else {\r\n      this.$element.hide();\r\n      this.$targetMenu.show();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\r\n   * @function\r\n   * @fires ResponsiveToggle#toggled\r\n   */\r\n  toggleMenu() {   \r\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\r\n      this.$targetMenu.toggle(0);\r\n\r\n      /**\r\n       * Fires when the element attached to the tab bar toggles.\r\n       * @event ResponsiveToggle#toggled\r\n       */\r\n      this.$element.trigger('toggled.zf.responsiveToggle');\r\n    }\r\n  };\r\n\r\n  destroy() {\r\n    this.$element.off('.zf.responsiveToggle');\r\n    this.$toggler.off('.zf.responsiveToggle');\r\n    \r\n    $(window).off('changed.zf.mediaquery', this._updateMqHandler);\r\n    \r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nResponsiveToggle.defaults = {\r\n  /**\r\n   * The breakpoint after which the menu is always shown, and the tab bar is hidden.\r\n   * @option\r\n   * @example 'medium'\r\n   */\r\n  hideFor: 'medium'\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Reveal module.\r\n * @module foundation.reveal\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.box\r\n * @requires foundation.util.triggers\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.motion if using animations\r\n */\r\n\r\nclass Reveal {\r\n  /**\r\n   * Creates a new instance of Reveal.\r\n   * @class\r\n   * @param {jQuery} element - jQuery object to use for the modal.\r\n   * @param {Object} options - optional parameters.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Reveal');\r\n    Foundation.Keyboard.register('Reveal', {\r\n      'ENTER': 'open',\r\n      'SPACE': 'open',\r\n      'ESCAPE': 'close',\r\n      'TAB': 'tab_forward',\r\n      'SHIFT_TAB': 'tab_backward'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the modal by adding the overlay and close buttons, (if selected).\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.id = this.$element.attr('id');\r\n    this.isActive = false;\r\n    this.cached = {mq: Foundation.MediaQuery.current};\r\n    this.isMobile = mobileSniff();\r\n\r\n    this.$anchor = $(`[data-open=\"${this.id}\"]`).length ? $(`[data-open=\"${this.id}\"]`) : $(`[data-toggle=\"${this.id}\"]`);\r\n    this.$anchor.attr({\r\n      'aria-controls': this.id,\r\n      'aria-haspopup': true,\r\n      'tabindex': 0\r\n    });\r\n\r\n    if (this.options.fullScreen || this.$element.hasClass('full')) {\r\n      this.options.fullScreen = true;\r\n      this.options.overlay = false;\r\n    }\r\n    if (this.options.overlay && !this.$overlay) {\r\n      this.$overlay = this._makeOverlay(this.id);\r\n    }\r\n\r\n    this.$element.attr({\r\n        'role': 'dialog',\r\n        'aria-hidden': true,\r\n        'data-yeti-box': this.id,\r\n        'data-resize': this.id\r\n    });\r\n\r\n    if(this.$overlay) {\r\n      this.$element.detach().appendTo(this.$overlay);\r\n    } else {\r\n      this.$element.detach().appendTo($('body'));\r\n      this.$element.addClass('without-overlay');\r\n    }\r\n    this._events();\r\n    if (this.options.deepLink && window.location.hash === ( `#${this.id}`)) {\r\n      $(window).one('load.zf.reveal', this.open.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an overlay div to display behind the modal.\r\n   * @private\r\n   */\r\n  _makeOverlay(id) {\r\n    var $overlay = $('<div></div>')\r\n                    .addClass('reveal-overlay')\r\n                    .appendTo('body');\r\n    return $overlay;\r\n  }\r\n\r\n  /**\r\n   * Updates position of modal\r\n   * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\r\n   * @private\r\n   */\r\n  _updatePosition() {\r\n    var width = this.$element.outerWidth();\r\n    var outerWidth = $(window).width();\r\n    var height = this.$element.outerHeight();\r\n    var outerHeight = $(window).height();\r\n    var left, top;\r\n    if (this.options.hOffset === 'auto') {\r\n      left = parseInt((outerWidth - width) / 2, 10);\r\n    } else {\r\n      left = parseInt(this.options.hOffset, 10);\r\n    }\r\n    if (this.options.vOffset === 'auto') {\r\n      if (height > outerHeight) {\r\n        top = parseInt(Math.min(100, outerHeight / 10), 10);\r\n      } else {\r\n        top = parseInt((outerHeight - height) / 4, 10);\r\n      }\r\n    } else {\r\n      top = parseInt(this.options.vOffset, 10);\r\n    }\r\n    this.$element.css({top: top + 'px'});\r\n    // only worry about left if we don't have an overlay or we havea  horizontal offset,\r\n    // otherwise we're perfectly in the middle\r\n    if(!this.$overlay || (this.options.hOffset !== 'auto')) {\r\n      this.$element.css({left: left + 'px'});\r\n      this.$element.css({margin: '0px'});\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers for the modal.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    this.$element.on({\r\n      'open.zf.trigger': this.open.bind(this),\r\n      'close.zf.trigger': (event, $element) => {\r\n        if ((event.target === _this.$element[0]) ||\r\n            ($(event.target).parents('[data-closable]')[0] === $element)) { // only close reveal when it's explicitly called\r\n          return this.close.apply(this);\r\n        }\r\n      },\r\n      'toggle.zf.trigger': this.toggle.bind(this),\r\n      'resizeme.zf.trigger': function() {\r\n        _this._updatePosition();\r\n      }\r\n    });\r\n\r\n    if (this.$anchor.length) {\r\n      this.$anchor.on('keydown.zf.reveal', function(e) {\r\n        if (e.which === 13 || e.which === 32) {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n          _this.open();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.options.closeOnClick && this.options.overlay) {\r\n      this.$overlay.off('.zf.reveal').on('click.zf.reveal', function(e) {\r\n        if (e.target === _this.$element[0] || \r\n          $.contains(_this.$element[0], e.target) || \r\n            !$.contains(document, e.target)) { \r\n              return; \r\n        }\r\n        _this.close();\r\n      });\r\n    }\r\n    if (this.options.deepLink) {\r\n      $(window).on(`popstate.zf.reveal:${this.id}`, this._handleState.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\r\n   * @private\r\n   */\r\n  _handleState(e) {\r\n    if(window.location.hash === ( '#' + this.id) && !this.isActive){ this.open(); }\r\n    else{ this.close(); }\r\n  }\r\n\r\n\r\n  /**\r\n   * Opens the modal controlled by `this.$anchor`, and closes all others by default.\r\n   * @function\r\n   * @fires Reveal#closeme\r\n   * @fires Reveal#open\r\n   */\r\n  open() {\r\n    if (this.options.deepLink) {\r\n      var hash = `#${this.id}`;\r\n\r\n      if (window.history.pushState) {\r\n        window.history.pushState(null, null, hash);\r\n      } else {\r\n        window.location.hash = hash;\r\n      }\r\n    }\r\n\r\n    this.isActive = true;\r\n\r\n    // Make elements invisible, but remove display: none so we can get size and positioning\r\n    this.$element\r\n        .css({ 'visibility': 'hidden' })\r\n        .show()\r\n        .scrollTop(0);\r\n    if (this.options.overlay) {\r\n      this.$overlay.css({'visibility': 'hidden'}).show();\r\n    }\r\n\r\n    this._updatePosition();\r\n\r\n    this.$element\r\n      .hide()\r\n      .css({ 'visibility': '' });\r\n\r\n    if(this.$overlay) {\r\n      this.$overlay.css({'visibility': ''}).hide();\r\n      if(this.$element.hasClass('fast')) {\r\n        this.$overlay.addClass('fast');\r\n      } else if (this.$element.hasClass('slow')) {\r\n        this.$overlay.addClass('slow');\r\n      }\r\n    }\r\n\r\n\r\n    if (!this.options.multipleOpened) {\r\n      /**\r\n       * Fires immediately before the modal opens.\r\n       * Closes any other modals that are currently open\r\n       * @event Reveal#closeme\r\n       */\r\n      this.$element.trigger('closeme.zf.reveal', this.id);\r\n    }\r\n    // Motion UI method of reveal\r\n    if (this.options.animationIn) {\r\n      var _this = this;\r\n      function afterAnimationFocus(){\r\n        _this.$element\r\n          .attr({\r\n            'aria-hidden': false,\r\n            'tabindex': -1\r\n          })\r\n          .focus();\r\n      }\r\n      if (this.options.overlay) {\r\n        Foundation.Motion.animateIn(this.$overlay, 'fade-in');\r\n      }\r\n      Foundation.Motion.animateIn(this.$element, this.options.animationIn, () => {\r\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\r\n        afterAnimationFocus();\r\n      });\r\n    }\r\n    // jQuery method of reveal\r\n    else {\r\n      if (this.options.overlay) {\r\n        this.$overlay.show(0);\r\n      }\r\n      this.$element.show(this.options.showDelay);\r\n    }\r\n\r\n    // handle accessibility\r\n    this.$element\r\n      .attr({\r\n        'aria-hidden': false,\r\n        'tabindex': -1\r\n      })\r\n      .focus();\r\n\r\n    /**\r\n     * Fires when the modal has successfully opened.\r\n     * @event Reveal#open\r\n     */\r\n    this.$element.trigger('open.zf.reveal');\r\n\r\n    if (this.isMobile) {\r\n      this.originalScrollPos = window.pageYOffset;\r\n      $('html, body').addClass('is-reveal-open');\r\n    }\r\n    else {\r\n      $('body').addClass('is-reveal-open');\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this._extraHandlers();\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * Adds extra event handlers for the body and window if necessary.\r\n   * @private\r\n   */\r\n  _extraHandlers() {\r\n    var _this = this;\r\n    this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\r\n\r\n    if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\r\n      $('body').on('click.zf.reveal', function(e) {\r\n        if (e.target === _this.$element[0] || \r\n          $.contains(_this.$element[0], e.target) || \r\n            !$.contains(document, e.target)) { return; }\r\n        _this.close();\r\n      });\r\n    }\r\n\r\n    if (this.options.closeOnEsc) {\r\n      $(window).on('keydown.zf.reveal', function(e) {\r\n        Foundation.Keyboard.handleKey(e, 'Reveal', {\r\n          close: function() {\r\n            if (_this.options.closeOnEsc) {\r\n              _this.close();\r\n              _this.$anchor.focus();\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    // lock focus within modal while tabbing\r\n    this.$element.on('keydown.zf.reveal', function(e) {\r\n      var $target = $(this);\r\n      // handle keyboard event with keyboard util\r\n      Foundation.Keyboard.handleKey(e, 'Reveal', {\r\n        tab_forward: function() {\r\n          _this.focusableElements = Foundation.Keyboard.findFocusable(_this.$element);\r\n          if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) { // left modal downwards, setting focus to first element\r\n            _this.focusableElements.eq(0).focus();\r\n            return true;\r\n          }\r\n          if (_this.focusableElements.length === 0) { // no focusable elements inside the modal at all, prevent tabbing in general\r\n            return true;\r\n          }\r\n        },\r\n        tab_backward: function() {\r\n          _this.focusableElements = Foundation.Keyboard.findFocusable(_this.$element);\r\n          if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) { // left modal upwards, setting focus to last element\r\n            _this.focusableElements.eq(-1).focus();\r\n            return true;\r\n          }\r\n          if (_this.focusableElements.length === 0) { // no focusable elements inside the modal at all, prevent tabbing in general\r\n            return true;\r\n          }\r\n        },\r\n        open: function() {\r\n          if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\r\n            setTimeout(function() { // set focus back to anchor if close button has been activated\r\n              _this.$anchor.focus();\r\n            }, 1);\r\n          } else if ($target.is(_this.focusableElements)) { // dont't trigger if acual element has focus (i.e. inputs, links, ...)\r\n            _this.open();\r\n          }\r\n        },\r\n        close: function() {\r\n          if (_this.options.closeOnEsc) {\r\n            _this.close();\r\n            _this.$anchor.focus();\r\n          }\r\n        },\r\n        handled: function(preventDefault) {\r\n          if (preventDefault) {\r\n            e.preventDefault();\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Closes the modal.\r\n   * @function\r\n   * @fires Reveal#closed\r\n   */\r\n  close() {\r\n    if (!this.isActive || !this.$element.is(':visible')) {\r\n      return false;\r\n    }\r\n    var _this = this;\r\n\r\n    // Motion UI method of hiding\r\n    if (this.options.animationOut) {\r\n      if (this.options.overlay) {\r\n        Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\r\n      }\r\n      else {\r\n        finishUp();\r\n      }\r\n\r\n      Foundation.Motion.animateOut(this.$element, this.options.animationOut);\r\n    }\r\n    // jQuery method of hiding\r\n    else {\r\n      if (this.options.overlay) {\r\n        this.$overlay.hide(0, finishUp);\r\n      }\r\n      else {\r\n        finishUp();\r\n      }\r\n\r\n      this.$element.hide(this.options.hideDelay);\r\n    }\r\n\r\n    // Conditionals to remove extra event listeners added on open\r\n    if (this.options.closeOnEsc) {\r\n      $(window).off('keydown.zf.reveal');\r\n    }\r\n\r\n    if (!this.options.overlay && this.options.closeOnClick) {\r\n      $('body').off('click.zf.reveal');\r\n    }\r\n\r\n    this.$element.off('keydown.zf.reveal');\r\n\r\n    function finishUp() {\r\n      if (_this.isMobile) {\r\n        $('html, body').removeClass('is-reveal-open');\r\n        if(_this.originalScrollPos) {\r\n          $('body').scrollTop(_this.originalScrollPos);\r\n          _this.originalScrollPos = null;\r\n        }\r\n      }\r\n      else {\r\n        $('body').removeClass('is-reveal-open');\r\n      }\r\n\r\n      _this.$element.attr('aria-hidden', true);\r\n\r\n      /**\r\n      * Fires when the modal is done closing.\r\n      * @event Reveal#closed\r\n      */\r\n      _this.$element.trigger('closed.zf.reveal');\r\n    }\r\n\r\n    /**\r\n    * Resets the modal content\r\n    * This prevents a running video to keep going in the background\r\n    */\r\n    if (this.options.resetOnClose) {\r\n      this.$element.html(this.$element.html());\r\n    }\r\n\r\n    this.isActive = false;\r\n     if (_this.options.deepLink) {\r\n       if (window.history.replaceState) {\r\n         window.history.replaceState(\"\", document.title, window.location.pathname);\r\n       } else {\r\n         window.location.hash = '';\r\n       }\r\n     }\r\n  }\r\n\r\n  /**\r\n   * Toggles the open/closed state of a modal.\r\n   * @function\r\n   */\r\n  toggle() {\r\n    if (this.isActive) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Destroys an instance of a modal.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    if (this.options.overlay) {\r\n      this.$element.appendTo($('body')); // move $element outside of $overlay to prevent error unregisterPlugin()\r\n      this.$overlay.hide().off().remove();\r\n    }\r\n    this.$element.hide().off();\r\n    this.$anchor.off('.zf');\r\n    $(window).off(`.zf.reveal:${this.id}`);\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  };\r\n}\r\n\r\nReveal.defaults = {\r\n  /**\r\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n   * @option\r\n   * @example 'slide-in-left'\r\n   */\r\n  animationIn: '',\r\n  /**\r\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n   * @option\r\n   * @example 'slide-out-right'\r\n   */\r\n  animationOut: '',\r\n  /**\r\n   * Time, in ms, to delay the opening of a modal after a click if no animation used.\r\n   * @option\r\n   * @example 10\r\n   */\r\n  showDelay: 0,\r\n  /**\r\n   * Time, in ms, to delay the closing of a modal after a click if no animation used.\r\n   * @option\r\n   * @example 10\r\n   */\r\n  hideDelay: 0,\r\n  /**\r\n   * Allows a click on the body/overlay to close the modal.\r\n   * @option\r\n   * @example true\r\n   */\r\n  closeOnClick: true,\r\n  /**\r\n   * Allows the modal to close if the user presses the `ESCAPE` key.\r\n   * @option\r\n   * @example true\r\n   */\r\n  closeOnEsc: true,\r\n  /**\r\n   * If true, allows multiple modals to be displayed at once.\r\n   * @option\r\n   * @example false\r\n   */\r\n  multipleOpened: false,\r\n  /**\r\n   * Distance, in pixels, the modal should push down from the top of the screen.\r\n   * @option\r\n   * @example auto\r\n   */\r\n  vOffset: 'auto',\r\n  /**\r\n   * Distance, in pixels, the modal should push in from the side of the screen.\r\n   * @option\r\n   * @example auto\r\n   */\r\n  hOffset: 'auto',\r\n  /**\r\n   * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\r\n   * @option\r\n   * @example false\r\n   */\r\n  fullScreen: false,\r\n  /**\r\n   * Percentage of screen height the modal should push up from the bottom of the view.\r\n   * @option\r\n   * @example 10\r\n   */\r\n  btmOffsetPct: 10,\r\n  /**\r\n   * Allows the modal to generate an overlay div, which will cover the view when modal opens.\r\n   * @option\r\n   * @example true\r\n   */\r\n  overlay: true,\r\n  /**\r\n   * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\r\n   * @option\r\n   * @example false\r\n   */\r\n  resetOnClose: false,\r\n  /**\r\n   * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\r\n   * @option\r\n   * @example false\r\n   */\r\n  deepLink: false\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Reveal, 'Reveal');\r\n\r\nfunction iPhoneSniff() {\r\n  return /iP(ad|hone|od).*OS/.test(window.navigator.userAgent);\r\n}\r\n\r\nfunction androidSniff() {\r\n  return /Android/.test(window.navigator.userAgent);\r\n}\r\n\r\nfunction mobileSniff() {\r\n  return iPhoneSniff() || androidSniff();\r\n}\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Slider module.\r\n * @module foundation.slider\r\n * @requires foundation.util.motion\r\n * @requires foundation.util.triggers\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.touch\r\n */\r\n\r\nclass Slider {\r\n  /**\r\n   * Creates a new instance of a drilldown menu.\r\n   * @class\r\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Slider');\r\n    Foundation.Keyboard.register('Slider', {\r\n      'ltr': {\r\n        'ARROW_RIGHT': 'increase',\r\n        'ARROW_UP': 'increase',\r\n        'ARROW_DOWN': 'decrease',\r\n        'ARROW_LEFT': 'decrease',\r\n        'SHIFT_ARROW_RIGHT': 'increase_fast',\r\n        'SHIFT_ARROW_UP': 'increase_fast',\r\n        'SHIFT_ARROW_DOWN': 'decrease_fast',\r\n        'SHIFT_ARROW_LEFT': 'decrease_fast'\r\n      },\r\n      'rtl': {\r\n        'ARROW_LEFT': 'increase',\r\n        'ARROW_RIGHT': 'decrease',\r\n        'SHIFT_ARROW_LEFT': 'increase_fast',\r\n        'SHIFT_ARROW_RIGHT': 'decrease_fast'\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.inputs = this.$element.find('input');\r\n    this.handles = this.$element.find('[data-slider-handle]');\r\n\r\n    this.$handle = this.handles.eq(0);\r\n    this.$input = this.inputs.length ? this.inputs.eq(0) : $(`#${this.$handle.attr('aria-controls')}`);\r\n    this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\r\n\r\n    var isDbl = false,\r\n        _this = this;\r\n    if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\r\n      this.options.disabled = true;\r\n      this.$element.addClass(this.options.disabledClass);\r\n    }\r\n    if (!this.inputs.length) {\r\n      this.inputs = $().add(this.$input);\r\n      this.options.binding = true;\r\n    }\r\n    this._setInitAttr(0);\r\n    this._events(this.$handle);\r\n\r\n    if (this.handles[1]) {\r\n      this.options.doubleSided = true;\r\n      this.$handle2 = this.handles.eq(1);\r\n      this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $(`#${this.$handle2.attr('aria-controls')}`);\r\n\r\n      if (!this.inputs[1]) {\r\n        this.inputs = this.inputs.add(this.$input2);\r\n      }\r\n      isDbl = true;\r\n\r\n      this._setHandlePos(this.$handle, this.options.initialStart, true, function() {\r\n\r\n        _this._setHandlePos(_this.$handle2, _this.options.initialEnd, true);\r\n      });\r\n      // this.$handle.triggerHandler('click.zf.slider');\r\n      this._setInitAttr(1);\r\n      this._events(this.$handle2);\r\n    }\r\n\r\n    if (!isDbl) {\r\n      this._setHandlePos(this.$handle, this.options.initialStart, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the position of the selected handle and fill bar.\r\n   * @function\r\n   * @private\r\n   * @param {jQuery} $hndl - the selected handle to move.\r\n   * @param {Number} location - floating point between the start and end values of the slider bar.\r\n   * @param {Function} cb - callback function to fire on completion.\r\n   * @fires Slider#moved\r\n   * @fires Slider#changed\r\n   */\r\n  _setHandlePos($hndl, location, noInvert, cb) {\r\n    // don't move if the slider has been disabled since its initialization\r\n    if (this.$element.hasClass(this.options.disabledClass)) {\r\n      return;\r\n    }\r\n    //might need to alter that slightly for bars that will have odd number selections.\r\n    location = parseFloat(location);//on input change events, convert string to number...grumble.\r\n\r\n    // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\r\n    if (location < this.options.start) { location = this.options.start; }\r\n    else if (location > this.options.end) { location = this.options.end; }\r\n\r\n    var isDbl = this.options.doubleSided;\r\n\r\n    if (isDbl) { //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\r\n      if (this.handles.index($hndl) === 0) {\r\n        var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\r\n        location = location >= h2Val ? h2Val - this.options.step : location;\r\n      } else {\r\n        var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\r\n        location = location <= h1Val ? h1Val + this.options.step : location;\r\n      }\r\n    }\r\n\r\n    //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\r\n    //for click and drag events, it's weird due to the scale(-1, 1) css property\r\n    if (this.options.vertical && !noInvert) {\r\n      location = this.options.end - location;\r\n    }\r\n\r\n    var _this = this,\r\n        vert = this.options.vertical,\r\n        hOrW = vert ? 'height' : 'width',\r\n        lOrT = vert ? 'top' : 'left',\r\n        handleDim = $hndl[0].getBoundingClientRect()[hOrW],\r\n        elemDim = this.$element[0].getBoundingClientRect()[hOrW],\r\n        //percentage of bar min/max value based on click or drag point\r\n        pctOfBar = percent(location - this.options.start, this.options.end - this.options.start).toFixed(2),\r\n        //number of actual pixels to shift the handle, based on the percentage obtained above\r\n        pxToMove = (elemDim - handleDim) * pctOfBar,\r\n        //percentage of bar to shift the handle\r\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\r\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\r\n        location = parseFloat(location.toFixed(this.options.decimal));\r\n        // declare empty object for css adjustments, only used with 2 handled-sliders\r\n    var css = {};\r\n\r\n    this._setValues($hndl, location);\r\n\r\n    // TODO update to calculate based on values set to respective inputs??\r\n    if (isDbl) {\r\n      var isLeftHndl = this.handles.index($hndl) === 0,\r\n          //empty variable, will be used for min-height/width for fill bar\r\n          dim,\r\n          //percentage w/h of the handle compared to the slider bar\r\n          handlePct =  ~~(percent(handleDim, elemDim) * 100);\r\n      //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\r\n      if (isLeftHndl) {\r\n        //left or top percentage value to apply to the fill bar.\r\n        css[lOrT] = `${movement}%`;\r\n        //calculate the new min-height/width for the fill bar.\r\n        dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\r\n        //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\r\n        //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\r\n        if (cb && typeof cb === 'function') { cb(); }//this is only needed for the initialization of 2 handled sliders\r\n      } else {\r\n        //just caching the value of the left/bottom handle's left/top property\r\n        var handlePos = parseFloat(this.$handle[0].style[lOrT]);\r\n        //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\r\n        //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\r\n        dim = movement - (isNaN(handlePos) ? this.options.initialStart/((this.options.end-this.options.start)/100) : handlePos) + handlePct;\r\n      }\r\n      // assign the min-height/width to our css object\r\n      css[`min-${hOrW}`] = `${dim}%`;\r\n    }\r\n\r\n    this.$element.one('finished.zf.animate', function() {\r\n                    /**\r\n                     * Fires when the handle is done moving.\r\n                     * @event Slider#moved\r\n                     */\r\n                    _this.$element.trigger('moved.zf.slider', [$hndl]);\r\n                });\r\n\r\n    //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\r\n    var moveTime = this.$element.data('dragging') ? 1000/60 : this.options.moveTime;\r\n\r\n    Foundation.Move(moveTime, $hndl, function() {\r\n      //adjusting the left/top property of the handle, based on the percentage calculated above\r\n      $hndl.css(lOrT, `${movement}%`);\r\n\r\n      if (!_this.options.doubleSided) {\r\n        //if single-handled, a simple method to expand the fill bar\r\n        _this.$fill.css(hOrW, `${pctOfBar * 100}%`);\r\n      } else {\r\n        //otherwise, use the css object we created above\r\n        _this.$fill.css(css);\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Fires when the value has not been change for a given time.\r\n     * @event Slider#changed\r\n     */\r\n    clearTimeout(_this.timeout);\r\n    _this.timeout = setTimeout(function(){\r\n      _this.$element.trigger('changed.zf.slider', [$hndl]);\r\n    }, _this.options.changedDelay);\r\n  }\r\n\r\n  /**\r\n   * Sets the initial attribute for the slider element.\r\n   * @function\r\n   * @private\r\n   * @param {Number} idx - index of the current handle/input to use.\r\n   */\r\n  _setInitAttr(idx) {\r\n    var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\r\n    this.inputs.eq(idx).attr({\r\n      'id': id,\r\n      'max': this.options.end,\r\n      'min': this.options.start,\r\n      'step': this.options.step\r\n    });\r\n    this.handles.eq(idx).attr({\r\n      'role': 'slider',\r\n      'aria-controls': id,\r\n      'aria-valuemax': this.options.end,\r\n      'aria-valuemin': this.options.start,\r\n      'aria-valuenow': idx === 0 ? this.options.initialStart : this.options.initialEnd,\r\n      'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\r\n      'tabindex': 0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the input and `aria-valuenow` values for the slider element.\r\n   * @function\r\n   * @private\r\n   * @param {jQuery} $handle - the currently selected handle.\r\n   * @param {Number} val - floating point of the new value.\r\n   */\r\n  _setValues($handle, val) {\r\n    var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\r\n    this.inputs.eq(idx).val(val);\r\n    $handle.attr('aria-valuenow', val);\r\n  }\r\n\r\n  /**\r\n   * Handles events on the slider element.\r\n   * Calculates the new location of the current handle.\r\n   * If there are two handles and the bar was clicked, it determines which handle to move.\r\n   * @function\r\n   * @private\r\n   * @param {Object} e - the `event` object passed from the listener.\r\n   * @param {jQuery} $handle - the current handle to calculate for, if selected.\r\n   * @param {Number} val - floating point number for the new value of the slider.\r\n   * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\r\n   */\r\n  _handleEvent(e, $handle, val) {\r\n    var value, hasVal;\r\n    if (!val) {//click or drag events\r\n      e.preventDefault();\r\n      var _this = this,\r\n          vertical = this.options.vertical,\r\n          param = vertical ? 'height' : 'width',\r\n          direction = vertical ? 'top' : 'left',\r\n          eventOffset = vertical ? e.pageY : e.pageX,\r\n          halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\r\n          barDim = this.$element[0].getBoundingClientRect()[param],\r\n          windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\r\n\r\n\r\n      var elemOffset = this.$element.offset()[direction];\r\n\r\n      // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\r\n      // best way to guess this is simulated is if clientY == pageY\r\n      if (e.clientY === e.pageY) { eventOffset = eventOffset + windowScroll; }\r\n      var eventFromBar = eventOffset - elemOffset;\r\n      var barXY;\r\n      if (eventFromBar < 0) {\r\n        barXY = 0;\r\n      } else if (eventFromBar > barDim) {\r\n        barXY = barDim;\r\n      } else {\r\n        barXY = eventFromBar;\r\n      }\r\n      var offsetPct = percent(barXY, barDim);\r\n\r\n      value = (this.options.end - this.options.start) * offsetPct + this.options.start;\r\n\r\n      // turn everything around for RTL, yay math!\r\n      if (Foundation.rtl() && !this.options.vertical) {value = this.options.end - value;}\r\n\r\n      value = _this._adjustValue(null, value);\r\n      //boolean flag for the setHandlePos fn, specifically for vertical sliders\r\n      hasVal = false;\r\n\r\n      if (!$handle) {//figure out which handle it is, pass it to the next function.\r\n        var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\r\n            secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\r\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\r\n      }\r\n\r\n    } else {//change event on input\r\n      value = this._adjustValue(null, val);\r\n      hasVal = true;\r\n    }\r\n\r\n    this._setHandlePos($handle, value, hasVal);\r\n  }\r\n\r\n  /**\r\n   * Adjustes value for handle in regard to step value. returns adjusted value\r\n   * @function\r\n   * @private\r\n   * @param {jQuery} $handle - the selected handle.\r\n   * @param {Number} value - value to adjust. used if $handle is falsy\r\n   */\r\n  _adjustValue($handle, value) {\r\n    var val,\r\n      step = this.options.step,\r\n      div = parseFloat(step/2),\r\n      left, prev_val, next_val;\r\n    if (!!$handle) {\r\n      val = parseFloat($handle.attr('aria-valuenow'));\r\n    }\r\n    else {\r\n      val = value;\r\n    }\r\n    left = val % step;\r\n    prev_val = val - left;\r\n    next_val = prev_val + step;\r\n    if (left === 0) {\r\n      return val;\r\n    }\r\n    val = val >= prev_val + div ? next_val : prev_val;\r\n    return val;\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners to the slider elements.\r\n   * @function\r\n   * @private\r\n   * @param {jQuery} $handle - the current handle to apply listeners to.\r\n   */\r\n  _events($handle) {\r\n    var _this = this,\r\n        curHandle,\r\n        timer;\r\n\r\n      this.inputs.off('change.zf.slider').on('change.zf.slider', function(e) {\r\n        var idx = _this.inputs.index($(this));\r\n        _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\r\n      });\r\n\r\n      if (this.options.clickSelect) {\r\n        this.$element.off('click.zf.slider').on('click.zf.slider', function(e) {\r\n          if (_this.$element.data('dragging')) { return false; }\r\n\r\n          if (!$(e.target).is('[data-slider-handle]')) {\r\n            if (_this.options.doubleSided) {\r\n              _this._handleEvent(e);\r\n            } else {\r\n              _this._handleEvent(e, _this.$handle);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n    if (this.options.draggable) {\r\n      this.handles.addTouch();\r\n\r\n      var $body = $('body');\r\n      $handle\r\n        .off('mousedown.zf.slider')\r\n        .on('mousedown.zf.slider', function(e) {\r\n          $handle.addClass('is-dragging');\r\n          _this.$fill.addClass('is-dragging');//\r\n          _this.$element.data('dragging', true);\r\n\r\n          curHandle = $(e.currentTarget);\r\n\r\n          $body.on('mousemove.zf.slider', function(e) {\r\n            e.preventDefault();\r\n            _this._handleEvent(e, curHandle);\r\n\r\n          }).on('mouseup.zf.slider', function(e) {\r\n            _this._handleEvent(e, curHandle);\r\n\r\n            $handle.removeClass('is-dragging');\r\n            _this.$fill.removeClass('is-dragging');\r\n            _this.$element.data('dragging', false);\r\n\r\n            $body.off('mousemove.zf.slider mouseup.zf.slider');\r\n          });\r\n      })\r\n      // prevent events triggered by touch\r\n      .on('selectstart.zf.slider touchmove.zf.slider', function(e) {\r\n        e.preventDefault();\r\n      });\r\n    }\r\n\r\n    $handle.off('keydown.zf.slider').on('keydown.zf.slider', function(e) {\r\n      var _$handle = $(this),\r\n          idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\r\n          oldValue = parseFloat(_this.inputs.eq(idx).val()),\r\n          newValue;\r\n\r\n      // handle keyboard event with keyboard util\r\n      Foundation.Keyboard.handleKey(e, 'Slider', {\r\n        decrease: function() {\r\n          newValue = oldValue - _this.options.step;\r\n        },\r\n        increase: function() {\r\n          newValue = oldValue + _this.options.step;\r\n        },\r\n        decrease_fast: function() {\r\n          newValue = oldValue - _this.options.step * 10;\r\n        },\r\n        increase_fast: function() {\r\n          newValue = oldValue + _this.options.step * 10;\r\n        },\r\n        handled: function() { // only set handle pos when event was handled specially\r\n          e.preventDefault();\r\n          _this._setHandlePos(_$handle, newValue, true);\r\n        }\r\n      });\r\n      /*if (newValue) { // if pressed key has special function, update value\r\n        e.preventDefault();\r\n        _this._setHandlePos(_$handle, newValue);\r\n      }*/\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Destroys the slider plugin.\r\n   */\r\n  destroy() {\r\n    this.handles.off('.zf.slider');\r\n    this.inputs.off('.zf.slider');\r\n    this.$element.off('.zf.slider');\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nSlider.defaults = {\r\n  /**\r\n   * Minimum value for the slider scale.\r\n   * @option\r\n   * @example 0\r\n   */\r\n  start: 0,\r\n  /**\r\n   * Maximum value for the slider scale.\r\n   * @option\r\n   * @example 100\r\n   */\r\n  end: 100,\r\n  /**\r\n   * Minimum value change per change event.\r\n   * @option\r\n   * @example 1\r\n   */\r\n  step: 1,\r\n  /**\r\n   * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\r\n   * @option\r\n   * @example 0\r\n   */\r\n  initialStart: 0,\r\n  /**\r\n   * Value at which the right handle/second input should be set to on initialization.\r\n   * @option\r\n   * @example 100\r\n   */\r\n  initialEnd: 100,\r\n  /**\r\n   * Allows the input to be located outside the container and visible. Set to by the JS\r\n   * @option\r\n   * @example false\r\n   */\r\n  binding: false,\r\n  /**\r\n   * Allows the user to click/tap on the slider bar to select a value.\r\n   * @option\r\n   * @example true\r\n   */\r\n  clickSelect: true,\r\n  /**\r\n   * Set to true and use the `vertical` class to change alignment to vertical.\r\n   * @option\r\n   * @example false\r\n   */\r\n  vertical: false,\r\n  /**\r\n   * Allows the user to drag the slider handle(s) to select a value.\r\n   * @option\r\n   * @example true\r\n   */\r\n  draggable: true,\r\n  /**\r\n   * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\r\n   * @option\r\n   * @example false\r\n   */\r\n  disabled: false,\r\n  /**\r\n   * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\r\n   * @option\r\n   * @example false\r\n   */\r\n  doubleSided: false,\r\n  /**\r\n   * Potential future feature.\r\n   */\r\n  // steps: 100,\r\n  /**\r\n   * Number of decimal places the plugin should go to for floating point precision.\r\n   * @option\r\n   * @example 2\r\n   */\r\n  decimal: 2,\r\n  /**\r\n   * Time delay for dragged elements.\r\n   */\r\n  // dragDelay: 0,\r\n  /**\r\n   * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\r\n   * @option\r\n   * @example 200\r\n   */\r\n  moveTime: 200,//update this if changing the transition time in the sass\r\n  /**\r\n   * Class applied to disabled sliders.\r\n   * @option\r\n   * @example 'disabled'\r\n   */\r\n  disabledClass: 'disabled',\r\n  /**\r\n   * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\r\n   * @option\r\n   * @example false\r\n   */\r\n  invertVertical: false,\r\n  /**\r\n   * Milliseconds before the `changed.zf-slider` event is triggered after value change.\r\n   * @option\r\n   * @example 500\r\n   */\r\n  changedDelay: 500\r\n};\r\n\r\nfunction percent(frac, num) {\r\n  return (frac / num);\r\n}\r\nfunction absPosition($handle, dir, clickPos, param) {\r\n  return Math.abs(($handle.position()[dir] + ($handle[param]() / 2)) - clickPos);\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Slider, 'Slider');\r\n\r\n}(jQuery);\r\n\r\n//*********this is in case we go to static, absolute positions instead of dynamic positioning********\r\n// this.setSteps(function() {\r\n//   _this._events();\r\n//   var initStart = _this.options.positions[_this.options.initialStart - 1] || null;\r\n//   var initEnd = _this.options.initialEnd ? _this.options.position[_this.options.initialEnd - 1] : null;\r\n//   if (initStart || initEnd) {\r\n//     _this._handleEvent(initStart, initEnd);\r\n//   }\r\n// });\r\n\r\n//***********the other part of absolute positions*************\r\n// Slider.prototype.setSteps = function(cb) {\r\n//   var posChange = this.$element.outerWidth() / this.options.steps;\r\n//   var counter = 0\r\n//   while(counter < this.options.steps) {\r\n//     if (counter) {\r\n//       this.options.positions.push(this.options.positions[counter - 1] + posChange);\r\n//     } else {\r\n//       this.options.positions.push(posChange);\r\n//     }\r\n//     counter++;\r\n//   }\r\n//   cb();\r\n// };\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Sticky module.\r\n * @module foundation.sticky\r\n * @requires foundation.util.triggers\r\n * @requires foundation.util.mediaQuery\r\n */\r\n\r\nclass Sticky {\r\n  /**\r\n   * Creates a new instance of a sticky thing.\r\n   * @class\r\n   * @param {jQuery} element - jQuery object to make sticky.\r\n   * @param {Object} options - options object passed when creating the element programmatically.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Sticky');\r\n  }\r\n\r\n  /**\r\n   * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var $parent = this.$element.parent('[data-sticky-container]'),\r\n        id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\r\n        _this = this;\r\n\r\n    if (!$parent.length) {\r\n      this.wasWrapped = true;\r\n    }\r\n    this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\r\n    this.$container.addClass(this.options.containerClass);\r\n\r\n    this.$element.addClass(this.options.stickyClass)\r\n                 .attr({'data-resize': id});\r\n\r\n    this.scrollCount = this.options.checkEvery;\r\n    this.isStuck = false;\r\n    $(window).one('load.zf.sticky', function(){\r\n      //We calculate the container height to have correct values for anchor points offset calculation.\r\n      _this.containerHeight = _this.$element.css(\"display\") == \"none\" ? 0 : _this.$element[0].getBoundingClientRect().height;\r\n      _this.$container.css('height', _this.containerHeight);\r\n      _this.elemHeight = _this.containerHeight;\r\n      if(_this.options.anchor !== ''){\r\n        _this.$anchor = $('#' + _this.options.anchor);\r\n      }else{\r\n        _this._parsePoints();\r\n      }\r\n\r\n      _this._setSizes(function(){\r\n        _this._calc(false);\r\n      });\r\n      _this._events(id.split('-').reverse().join('-'));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\r\n   * @function\r\n   * @private\r\n   */\r\n  _parsePoints() {\r\n    var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\r\n        btm = this.options.btmAnchor== \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\r\n        pts = [top, btm],\r\n        breaks = {};\r\n    for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\r\n      var pt;\r\n      if (typeof pts[i] === 'number') {\r\n        pt = pts[i];\r\n      } else {\r\n        var place = pts[i].split(':'),\r\n            anchor = $(`#${place[0]}`);\r\n\r\n        pt = anchor.offset().top;\r\n        if (place[1] && place[1].toLowerCase() === 'bottom') {\r\n          pt += anchor[0].getBoundingClientRect().height;\r\n        }\r\n      }\r\n      breaks[i] = pt;\r\n    }\r\n\r\n\r\n    this.points = breaks;\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers for the scrolling element.\r\n   * @private\r\n   * @param {String} id - psuedo-random id for unique scroll event listener.\r\n   */\r\n  _events(id) {\r\n    var _this = this,\r\n        scrollListener = this.scrollListener = `scroll.zf.${id}`;\r\n    if (this.isOn) { return; }\r\n    if (this.canStick) {\r\n      this.isOn = true;\r\n      $(window).off(scrollListener)\r\n               .on(scrollListener, function(e) {\r\n                 if (_this.scrollCount === 0) {\r\n                   _this.scrollCount = _this.options.checkEvery;\r\n                   _this._setSizes(function() {\r\n                     _this._calc(false, window.pageYOffset);\r\n                   });\r\n                 } else {\r\n                   _this.scrollCount--;\r\n                   _this._calc(false, window.pageYOffset);\r\n                 }\r\n              });\r\n    }\r\n\r\n    this.$element.off('resizeme.zf.trigger')\r\n                 .on('resizeme.zf.trigger', function(e, el) {\r\n                     _this._setSizes(function() {\r\n                       _this._calc(false);\r\n                       if (_this.canStick) {\r\n                         if (!_this.isOn) {\r\n                           _this._events(id);\r\n                         }\r\n                       } else if (_this.isOn) {\r\n                         _this._pauseListeners(scrollListener);\r\n                       }\r\n                     });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes event handlers for scroll and change events on anchor.\r\n   * @fires Sticky#pause\r\n   * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\r\n   */\r\n  _pauseListeners(scrollListener) {\r\n    this.isOn = false;\r\n    $(window).off(scrollListener);\r\n\r\n    /**\r\n     * Fires when the plugin is paused due to resize event shrinking the view.\r\n     * @event Sticky#pause\r\n     * @private\r\n     */\r\n     this.$element.trigger('pause.zf.sticky');\r\n  }\r\n\r\n  /**\r\n   * Called on every `scroll` event and on `_init`\r\n   * fires functions based on booleans and cached values\r\n   * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\r\n   * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\r\n   */\r\n  _calc(checkSizes, scroll) {\r\n    if (checkSizes) { this._setSizes(); }\r\n\r\n    if (!this.canStick) {\r\n      if (this.isStuck) {\r\n        this._removeSticky(true);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (!scroll) { scroll = window.pageYOffset; }\r\n\r\n    if (scroll >= this.topPoint) {\r\n      if (scroll <= this.bottomPoint) {\r\n        if (!this.isStuck) {\r\n          this._setSticky();\r\n        }\r\n      } else {\r\n        if (this.isStuck) {\r\n          this._removeSticky(false);\r\n        }\r\n      }\r\n    } else {\r\n      if (this.isStuck) {\r\n        this._removeSticky(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Causes the $element to become stuck.\r\n   * Adds `position: fixed;`, and helper classes.\r\n   * @fires Sticky#stuckto\r\n   * @function\r\n   * @private\r\n   */\r\n  _setSticky() {\r\n    var _this = this,\r\n        stickTo = this.options.stickTo,\r\n        mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\r\n        notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\r\n        css = {};\r\n\r\n    css[mrgn] = `${this.options[mrgn]}em`;\r\n    css[stickTo] = 0;\r\n    css[notStuckTo] = 'auto';\r\n    css['left'] = this.$container.offset().left + parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"], 10);\r\n    this.isStuck = true;\r\n    this.$element.removeClass(`is-anchored is-at-${notStuckTo}`)\r\n                 .addClass(`is-stuck is-at-${stickTo}`)\r\n                 .css(css)\r\n                 /**\r\n                  * Fires when the $element has become `position: fixed;`\r\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\r\n                  * @event Sticky#stuckto\r\n                  */\r\n                 .trigger(`sticky.zf.stuckto:${stickTo}`);\r\n    this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function() {\r\n      _this._setSizes();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Causes the $element to become unstuck.\r\n   * Removes `position: fixed;`, and helper classes.\r\n   * Adds other helper classes.\r\n   * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\r\n   * @fires Sticky#unstuckfrom\r\n   * @private\r\n   */\r\n  _removeSticky(isTop) {\r\n    var stickTo = this.options.stickTo,\r\n        stickToTop = stickTo === 'top',\r\n        css = {},\r\n        anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\r\n        mrgn = stickToTop ? 'marginTop' : 'marginBottom',\r\n        notStuckTo = stickToTop ? 'bottom' : 'top',\r\n        topOrBottom = isTop ? 'top' : 'bottom';\r\n\r\n    css[mrgn] = 0;\r\n\r\n    css['bottom'] = 'auto';\r\n    if(isTop) {\r\n      css['top'] = 0;\r\n    } else {\r\n      css['top'] = anchorPt;\r\n    }\r\n\r\n    css['left'] = '';\r\n    this.isStuck = false;\r\n    this.$element.removeClass(`is-stuck is-at-${stickTo}`)\r\n                 .addClass(`is-anchored is-at-${topOrBottom}`)\r\n                 .css(css)\r\n                 /**\r\n                  * Fires when the $element has become anchored.\r\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\r\n                  * @event Sticky#unstuckfrom\r\n                  */\r\n                 .trigger(`sticky.zf.unstuckfrom:${topOrBottom}`);\r\n  }\r\n\r\n  /**\r\n   * Sets the $element and $container sizes for plugin.\r\n   * Calls `_setBreakPoints`.\r\n   * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\r\n   * @private\r\n   */\r\n  _setSizes(cb) {\r\n    this.canStick = Foundation.MediaQuery.atLeast(this.options.stickyOn);\r\n    if (!this.canStick) {\r\n      if (cb && typeof cb === 'function') { cb(); }\r\n    }\r\n    var _this = this,\r\n        newElemWidth = this.$container[0].getBoundingClientRect().width,\r\n        comp = window.getComputedStyle(this.$container[0]),\r\n        pdng = parseInt(comp['padding-right'], 10);\r\n\r\n    if (this.$anchor && this.$anchor.length) {\r\n      this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\r\n    } else {\r\n      this._parsePoints();\r\n    }\r\n\r\n    this.$element.css({\r\n      'max-width': `${newElemWidth - pdng}px`\r\n    });\r\n\r\n    var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\r\n    if (this.$element.css(\"display\") == \"none\") {\r\n      newContainerHeight = 0;\r\n    }\r\n    this.containerHeight = newContainerHeight;\r\n    this.$container.css({\r\n      height: newContainerHeight\r\n    });\r\n    this.elemHeight = newContainerHeight;\r\n\r\n    if (this.isStuck) {\r\n      this.$element.css({\"left\":this.$container.offset().left + parseInt(comp['padding-left'], 10)});\r\n    } else {\r\n      if (this.$element.hasClass('is-at-bottom')) {\r\n        var anchorPt = (this.points ? this.points[1] - this.$container.offset().top : this.anchorHeight) - this.elemHeight;\r\n        this.$element.css('top', anchorPt);\r\n      }\r\n    }\r\n\r\n    this._setBreakPoints(newContainerHeight, function() {\r\n      if (cb && typeof cb === 'function') { cb(); }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\r\n   * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\r\n   * @param {Function} cb - optional callback function to be called on completion.\r\n   * @private\r\n   */\r\n  _setBreakPoints(elemHeight, cb) {\r\n    if (!this.canStick) {\r\n      if (cb && typeof cb === 'function') { cb(); }\r\n      else { return false; }\r\n    }\r\n    var mTop = emCalc(this.options.marginTop),\r\n        mBtm = emCalc(this.options.marginBottom),\r\n        topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\r\n        bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\r\n        // topPoint = this.$anchor.offset().top || this.points[0],\r\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\r\n        winHeight = window.innerHeight;\r\n\r\n    if (this.options.stickTo === 'top') {\r\n      topPoint -= mTop;\r\n      bottomPoint -= (elemHeight + mTop);\r\n    } else if (this.options.stickTo === 'bottom') {\r\n      topPoint -= (winHeight - (elemHeight + mBtm));\r\n      bottomPoint -= (winHeight - mBtm);\r\n    } else {\r\n      //this would be the stickTo: both option... tricky\r\n    }\r\n\r\n    this.topPoint = topPoint;\r\n    this.bottomPoint = bottomPoint;\r\n\r\n    if (cb && typeof cb === 'function') { cb(); }\r\n  }\r\n\r\n  /**\r\n   * Destroys the current sticky element.\r\n   * Resets the element to the top position first.\r\n   * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this._removeSticky(true);\r\n\r\n    this.$element.removeClass(`${this.options.stickyClass} is-anchored is-at-top`)\r\n                 .css({\r\n                   height: '',\r\n                   top: '',\r\n                   bottom: '',\r\n                   'max-width': ''\r\n                 })\r\n                 .off('resizeme.zf.trigger');\r\n    if (this.$anchor && this.$anchor.length) {\r\n      this.$anchor.off('change.zf.sticky');\r\n    }\r\n    $(window).off(this.scrollListener);\r\n\r\n    if (this.wasWrapped) {\r\n      this.$element.unwrap();\r\n    } else {\r\n      this.$container.removeClass(this.options.containerClass)\r\n                     .css({\r\n                       height: ''\r\n                     });\r\n    }\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nSticky.defaults = {\r\n  /**\r\n   * Customizable container template. Add your own classes for styling and sizing.\r\n   * @option\r\n   * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\r\n   */\r\n  container: '<div data-sticky-container></div>',\r\n  /**\r\n   * Location in the view the element sticks to.\r\n   * @option\r\n   * @example 'top'\r\n   */\r\n  stickTo: 'top',\r\n  /**\r\n   * If anchored to a single element, the id of that element.\r\n   * @option\r\n   * @example 'exampleId'\r\n   */\r\n  anchor: '',\r\n  /**\r\n   * If using more than one element as anchor points, the id of the top anchor.\r\n   * @option\r\n   * @example 'exampleId:top'\r\n   */\r\n  topAnchor: '',\r\n  /**\r\n   * If using more than one element as anchor points, the id of the bottom anchor.\r\n   * @option\r\n   * @example 'exampleId:bottom'\r\n   */\r\n  btmAnchor: '',\r\n  /**\r\n   * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\r\n   * @option\r\n   * @example 1\r\n   */\r\n  marginTop: 1,\r\n  /**\r\n   * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\r\n   * @option\r\n   * @example 1\r\n   */\r\n  marginBottom: 1,\r\n  /**\r\n   * Breakpoint string that is the minimum screen size an element should become sticky.\r\n   * @option\r\n   * @example 'medium'\r\n   */\r\n  stickyOn: 'medium',\r\n  /**\r\n   * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\r\n   * @option\r\n   * @example 'sticky'\r\n   */\r\n  stickyClass: 'sticky',\r\n  /**\r\n   * Class applied to sticky container. Foundation defaults to `sticky-container`.\r\n   * @option\r\n   * @example 'sticky-container'\r\n   */\r\n  containerClass: 'sticky-container',\r\n  /**\r\n   * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\r\n   * @option\r\n   * @example 50\r\n   */\r\n  checkEvery: -1\r\n};\r\n\r\n/**\r\n * Helper function to calculate em values\r\n * @param Number {em} - number of em's to calculate into pixels\r\n */\r\nfunction emCalc(em) {\r\n  return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Sticky, 'Sticky');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Tabs module.\r\n * @module foundation.tabs\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.timerAndImageLoader if tabs contain images\r\n */\r\n\r\nclass Tabs {\r\n  /**\r\n   * Creates a new instance of tabs.\r\n   * @class\r\n   * @fires Tabs#init\r\n   * @param {jQuery} element - jQuery object to make into tabs.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n    Foundation.registerPlugin(this, 'Tabs');\r\n    Foundation.Keyboard.register('Tabs', {\r\n      'ENTER': 'open',\r\n      'SPACE': 'open',\r\n      'ARROW_RIGHT': 'next',\r\n      'ARROW_UP': 'previous',\r\n      'ARROW_DOWN': 'next',\r\n      'ARROW_LEFT': 'previous'\r\n      // 'TAB': 'next',\r\n      // 'SHIFT_TAB': 'previous'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\r\n   * @private\r\n   */\r\n  _init() {\r\n    var _this = this;\r\n\r\n    this.$tabTitles = this.$element.find(`.${this.options.linkClass}`);\r\n    this.$tabContent = $(`[data-tabs-content=\"${this.$element[0].id}\"]`);\r\n\r\n    this.$tabTitles.each(function(){\r\n      var $elem = $(this),\r\n          $link = $elem.find('a'),\r\n          isActive = $elem.hasClass('is-active'),\r\n          hash = $link[0].hash.slice(1),\r\n          linkId = $link[0].id ? $link[0].id : `${hash}-label`,\r\n          $tabContent = $(`#${hash}`);\r\n\r\n      $elem.attr({'role': 'presentation'});\r\n\r\n      $link.attr({\r\n        'role': 'tab',\r\n        'aria-controls': hash,\r\n        'aria-selected': isActive,\r\n        'id': linkId\r\n      });\r\n\r\n      $tabContent.attr({\r\n        'role': 'tabpanel',\r\n        'aria-hidden': !isActive,\r\n        'aria-labelledby': linkId\r\n      });\r\n\r\n      if(isActive && _this.options.autoFocus){\r\n        $link.focus();\r\n      }\r\n    });\r\n\r\n    if(this.options.matchHeight) {\r\n      var $images = this.$tabContent.find('img');\r\n\r\n      if ($images.length) {\r\n        Foundation.onImagesLoaded($images, this._setHeight.bind(this));\r\n      } else {\r\n        this._setHeight();\r\n      }\r\n    }\r\n\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers for items within the tabs.\r\n   * @private\r\n   */\r\n  _events() {\r\n    this._addKeyHandler();\r\n    this._addClickHandler();\r\n    this._setHeightMqHandler = null;\r\n    \r\n    if (this.options.matchHeight) {\r\n      this._setHeightMqHandler = this._setHeight.bind(this);\r\n      \r\n      $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds click handlers for items within the tabs.\r\n   * @private\r\n   */\r\n  _addClickHandler() {\r\n    var _this = this;\r\n\r\n    this.$element\r\n      .off('click.zf.tabs')\r\n      .on('click.zf.tabs', `.${this.options.linkClass}`, function(e){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if ($(this).hasClass('is-active')) {\r\n          return;\r\n        }\r\n        _this._handleTabChange($(this));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Adds keyboard event handlers for items within the tabs.\r\n   * @private\r\n   */\r\n  _addKeyHandler() {\r\n    var _this = this;\r\n    var $firstTab = _this.$element.find('li:first-of-type');\r\n    var $lastTab = _this.$element.find('li:last-of-type');\r\n\r\n    this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function(e){\r\n      if (e.which === 9) return;\r\n      \r\n\r\n      var $element = $(this),\r\n        $elements = $element.parent('ul').children('li'),\r\n        $prevElement,\r\n        $nextElement;\r\n\r\n      $elements.each(function(i) {\r\n        if ($(this).is($element)) {\r\n          if (_this.options.wrapOnKeys) {\r\n            $prevElement = i === 0 ? $elements.last() : $elements.eq(i-1);\r\n            $nextElement = i === $elements.length -1 ? $elements.first() : $elements.eq(i+1);\r\n          } else {\r\n            $prevElement = $elements.eq(Math.max(0, i-1));\r\n            $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\r\n          }\r\n          return;\r\n        }\r\n      });\r\n\r\n      // handle keyboard event with keyboard util\r\n      Foundation.Keyboard.handleKey(e, 'Tabs', {\r\n        open: function() {\r\n          $element.find('[role=\"tab\"]').focus();\r\n          _this._handleTabChange($element);\r\n        },\r\n        previous: function() {\r\n          $prevElement.find('[role=\"tab\"]').focus();\r\n          _this._handleTabChange($prevElement);\r\n        },\r\n        next: function() {\r\n          $nextElement.find('[role=\"tab\"]').focus();\r\n          _this._handleTabChange($nextElement);\r\n        },\r\n        handled: function() {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Opens the tab `$targetContent` defined by `$target`.\r\n   * @param {jQuery} $target - Tab to open.\r\n   * @fires Tabs#change\r\n   * @function\r\n   */\r\n  _handleTabChange($target) {\r\n    var $tabLink = $target.find('[role=\"tab\"]'),\r\n        hash = $tabLink[0].hash,\r\n        $targetContent = this.$tabContent.find(hash),\r\n        $oldTab = this.$element.\r\n          find(`.${this.options.linkClass}.is-active`)\r\n          .removeClass('is-active')\r\n          .find('[role=\"tab\"]')\r\n          .attr({ 'aria-selected': 'false' });\r\n\r\n    $(`#${$oldTab.attr('aria-controls')}`)\r\n      .removeClass('is-active')\r\n      .attr({ 'aria-hidden': 'true' });\r\n\r\n    $target.addClass('is-active');\r\n\r\n    $tabLink.attr({'aria-selected': 'true'});\r\n\r\n    $targetContent\r\n      .addClass('is-active')\r\n      .attr({'aria-hidden': 'false'});\r\n\r\n    /**\r\n     * Fires when the plugin has successfully changed tabs.\r\n     * @event Tabs#change\r\n     */\r\n    this.$element.trigger('change.zf.tabs', [$target]);\r\n  }\r\n\r\n  /**\r\n   * Public method for selecting a content pane to display.\r\n   * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\r\n   * @function\r\n   */\r\n  selectTab(elem) {\r\n    var idStr;\r\n\r\n    if (typeof elem === 'object') {\r\n      idStr = elem[0].id;\r\n    } else {\r\n      idStr = elem;\r\n    }\r\n\r\n    if (idStr.indexOf('#') < 0) {\r\n      idStr = `#${idStr}`;\r\n    }\r\n\r\n    var $target = this.$tabTitles.find(`[href=\"${idStr}\"]`).parent(`.${this.options.linkClass}`);\r\n\r\n    this._handleTabChange($target);\r\n  };\r\n  /**\r\n   * Sets the height of each panel to the height of the tallest panel.\r\n   * If enabled in options, gets called on media query change.\r\n   * If loading content via external source, can be called directly or with _reflow.\r\n   * @function\r\n   * @private\r\n   */\r\n  _setHeight() {\r\n    var max = 0;\r\n    this.$tabContent\r\n      .find(`.${this.options.panelClass}`)\r\n      .css('height', '')\r\n      .each(function() {\r\n        var panel = $(this),\r\n            isActive = panel.hasClass('is-active');\r\n\r\n        if (!isActive) {\r\n          panel.css({'visibility': 'hidden', 'display': 'block'});\r\n        }\r\n\r\n        var temp = this.getBoundingClientRect().height;\r\n\r\n        if (!isActive) {\r\n          panel.css({\r\n            'visibility': '',\r\n            'display': ''\r\n          });\r\n        }\r\n\r\n        max = temp > max ? temp : max;\r\n      })\r\n      .css('height', `${max}px`);\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of an tabs.\r\n   * @fires Tabs#destroyed\r\n   */\r\n  destroy() {\r\n    this.$element\r\n      .find(`.${this.options.linkClass}`)\r\n      .off('.zf.tabs').hide().end()\r\n      .find(`.${this.options.panelClass}`)\r\n      .hide();\r\n\r\n    if (this.options.matchHeight) {\r\n      if (this._setHeightMqHandler != null) {\r\n         $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\r\n      }\r\n    }\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nTabs.defaults = {\r\n  /**\r\n   * Allows the window to scroll to content of active pane on load if set to true.\r\n   * @option\r\n   * @example false\r\n   */\r\n  autoFocus: false,\r\n\r\n  /**\r\n   * Allows keyboard input to 'wrap' around the tab links.\r\n   * @option\r\n   * @example true\r\n   */\r\n  wrapOnKeys: true,\r\n\r\n  /**\r\n   * Allows the tab content panes to match heights if set to true.\r\n   * @option\r\n   * @example false\r\n   */\r\n  matchHeight: false,\r\n\r\n  /**\r\n   * Class applied to `li`'s in tab link list.\r\n   * @option\r\n   * @example 'tabs-title'\r\n   */\r\n  linkClass: 'tabs-title',\r\n\r\n  /**\r\n   * Class applied to the content containers.\r\n   * @option\r\n   * @example 'tabs-panel'\r\n   */\r\n  panelClass: 'tabs-panel'\r\n};\r\n\r\nfunction checkClass($elem){\r\n  return $elem.hasClass('is-active');\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Tabs, 'Tabs');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Toggler module.\r\n * @module foundation.toggler\r\n * @requires foundation.util.motion\r\n * @requires foundation.util.triggers\r\n */\r\n\r\nclass Toggler {\r\n  /**\r\n   * Creates a new instance of Toggler.\r\n   * @class\r\n   * @fires Toggler#init\r\n   * @param {Object} element - jQuery object to add the trigger to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Toggler.defaults, element.data(), options);\r\n    this.className = '';\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'Toggler');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var input;\r\n    // Parse animation classes if they were set\r\n    if (this.options.animate) {\r\n      input = this.options.animate.split(' ');\r\n\r\n      this.animationIn = input[0];\r\n      this.animationOut = input[1] || null;\r\n    }\r\n    // Otherwise, parse toggle class\r\n    else {\r\n      input = this.$element.data('toggler');\r\n      // Allow for a . at the beginning of the string\r\n      this.className = input[0] === '.' ? input.slice(1) : input;\r\n    }\r\n\r\n    // Add ARIA attributes to triggers\r\n    var id = this.$element[0].id;\r\n    $(`[data-open=\"${id}\"], [data-close=\"${id}\"], [data-toggle=\"${id}\"]`)\r\n      .attr('aria-controls', id);\r\n    // If the target is hidden, add aria-hidden\r\n    this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\r\n  }\r\n\r\n  /**\r\n   * Initializes events for the toggle trigger.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\r\n   * @function\r\n   * @fires Toggler#on\r\n   * @fires Toggler#off\r\n   */\r\n  toggle() {\r\n    this[ this.options.animate ? '_toggleAnimate' : '_toggleClass']();\r\n  }\r\n\r\n  _toggleClass() {\r\n    this.$element.toggleClass(this.className);\r\n\r\n    var isOn = this.$element.hasClass(this.className);\r\n    if (isOn) {\r\n      /**\r\n       * Fires if the target element has the class after a toggle.\r\n       * @event Toggler#on\r\n       */\r\n      this.$element.trigger('on.zf.toggler');\r\n    }\r\n    else {\r\n      /**\r\n       * Fires if the target element does not have the class after a toggle.\r\n       * @event Toggler#off\r\n       */\r\n      this.$element.trigger('off.zf.toggler');\r\n    }\r\n\r\n    this._updateARIA(isOn);\r\n  }\r\n\r\n  _toggleAnimate() {\r\n    var _this = this;\r\n\r\n    if (this.$element.is(':hidden')) {\r\n      Foundation.Motion.animateIn(this.$element, this.animationIn, function() {\r\n        _this._updateARIA(true);\r\n        this.trigger('on.zf.toggler');\r\n      });\r\n    }\r\n    else {\r\n      Foundation.Motion.animateOut(this.$element, this.animationOut, function() {\r\n        _this._updateARIA(false);\r\n        this.trigger('off.zf.toggler');\r\n      });\r\n    }\r\n  }\r\n\r\n  _updateARIA(isOn) {\r\n    this.$element.attr('aria-expanded', isOn ? true : false);\r\n  }\r\n\r\n  /**\r\n   * Destroys the instance of Toggler on the element.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$element.off('.zf.toggler');\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nToggler.defaults = {\r\n  /**\r\n   * Tells the plugin if the element should animated when toggled.\r\n   * @option\r\n   * @example false\r\n   */\r\n  animate: false\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Toggler, 'Toggler');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Tooltip module.\r\n * @module foundation.tooltip\r\n * @requires foundation.util.box\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.triggers\r\n */\r\n\r\nclass Tooltip {\r\n  /**\r\n   * Creates a new instance of a Tooltip.\r\n   * @class\r\n   * @fires Tooltip#init\r\n   * @param {jQuery} element - jQuery object to attach a tooltip to.\r\n   * @param {Object} options - object to extend the default configuration.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\r\n\r\n    this.isActive = false;\r\n    this.isClick = false;\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Tooltip');\r\n  }\r\n\r\n  /**\r\n   * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\r\n   * @private\r\n   */\r\n  _init() {\r\n    var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\r\n\r\n    this.options.positionClass = this.options.positionClass || this._getPositionClass(this.$element);\r\n    this.options.tipText = this.options.tipText || this.$element.attr('title');\r\n    this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\r\n\r\n    this.template.appendTo(document.body)\r\n        .text(this.options.tipText)\r\n        .hide();\r\n\r\n    this.$element.attr({\r\n      'title': '',\r\n      'aria-describedby': elemId,\r\n      'data-yeti-box': elemId,\r\n      'data-toggle': elemId,\r\n      'data-resize': elemId\r\n    }).addClass(this.options.triggerClass);\r\n\r\n    //helper variables to track movement on collisions\r\n    this.usedPositions = [];\r\n    this.counter = 4;\r\n    this.classChanged = false;\r\n\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Grabs the current positioning class, if present, and returns the value or an empty string.\r\n   * @private\r\n   */\r\n  _getPositionClass(element) {\r\n    if (!element) { return ''; }\r\n    // var position = element.attr('class').match(/top|left|right/g);\r\n    var position = element[0].className.match(/\\b(top|left|right)\\b/g);\r\n        position = position ? position[0] : '';\r\n    return position;\r\n  };\r\n  /**\r\n   * builds the tooltip element, adds attributes, and returns the template.\r\n   * @private\r\n   */\r\n  _buildTemplate(id) {\r\n    var templateClasses = (`${this.options.tooltipClass} ${this.options.positionClass} ${this.options.templateClasses}`).trim();\r\n    var $template =  $('<div></div>').addClass(templateClasses).attr({\r\n      'role': 'tooltip',\r\n      'aria-hidden': true,\r\n      'data-is-active': false,\r\n      'data-is-focus': false,\r\n      'id': id\r\n    });\r\n    return $template;\r\n  }\r\n\r\n  /**\r\n   * Function that gets called if a collision event is detected.\r\n   * @param {String} position - positioning class to try\r\n   * @private\r\n   */\r\n  _reposition(position) {\r\n    this.usedPositions.push(position ? position : 'bottom');\r\n\r\n    //default, try switching to opposite side\r\n    if (!position && (this.usedPositions.indexOf('top') < 0)) {\r\n      this.template.addClass('top');\r\n    } else if (position === 'top' && (this.usedPositions.indexOf('bottom') < 0)) {\r\n      this.template.removeClass(position);\r\n    } else if (position === 'left' && (this.usedPositions.indexOf('right') < 0)) {\r\n      this.template.removeClass(position)\r\n          .addClass('right');\r\n    } else if (position === 'right' && (this.usedPositions.indexOf('left') < 0)) {\r\n      this.template.removeClass(position)\r\n          .addClass('left');\r\n    }\r\n\r\n    //if default change didn't work, try bottom or left first\r\n    else if (!position && (this.usedPositions.indexOf('top') > -1) && (this.usedPositions.indexOf('left') < 0)) {\r\n      this.template.addClass('left');\r\n    } else if (position === 'top' && (this.usedPositions.indexOf('bottom') > -1) && (this.usedPositions.indexOf('left') < 0)) {\r\n      this.template.removeClass(position)\r\n          .addClass('left');\r\n    } else if (position === 'left' && (this.usedPositions.indexOf('right') > -1) && (this.usedPositions.indexOf('bottom') < 0)) {\r\n      this.template.removeClass(position);\r\n    } else if (position === 'right' && (this.usedPositions.indexOf('left') > -1) && (this.usedPositions.indexOf('bottom') < 0)) {\r\n      this.template.removeClass(position);\r\n    }\r\n    //if nothing cleared, set to bottom\r\n    else {\r\n      this.template.removeClass(position);\r\n    }\r\n    this.classChanged = true;\r\n    this.counter--;\r\n  }\r\n\r\n  /**\r\n   * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\r\n   * if the tooltip is larger than the screen width, default to full width - any user selected margin\r\n   * @private\r\n   */\r\n  _setPosition() {\r\n    var position = this._getPositionClass(this.template),\r\n        $tipDims = Foundation.Box.GetDimensions(this.template),\r\n        $anchorDims = Foundation.Box.GetDimensions(this.$element),\r\n        direction = (position === 'left' ? 'left' : ((position === 'right') ? 'left' : 'top')),\r\n        param = (direction === 'top') ? 'height' : 'width',\r\n        offset = (param === 'height') ? this.options.vOffset : this.options.hOffset,\r\n        _this = this;\r\n\r\n    if (($tipDims.width >= $tipDims.windowDims.width) || (!this.counter && !Foundation.Box.ImNotTouchingYou(this.template))) {\r\n      this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\r\n      // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\r\n        'width': $anchorDims.windowDims.width - (this.options.hOffset * 2),\r\n        'height': 'auto'\r\n      });\r\n      return false;\r\n    }\r\n\r\n    this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element,'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\r\n\r\n    while(!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\r\n      this._reposition(position);\r\n      this._setPosition();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * reveals the tooltip, and fires an event to close any other open tooltips on the page\r\n   * @fires Tooltip#closeme\r\n   * @fires Tooltip#show\r\n   * @function\r\n   */\r\n  show() {\r\n    if (this.options.showOn !== 'all' && !Foundation.MediaQuery.atLeast(this.options.showOn)) {\r\n      // console.error('The screen is too small to display this tooltip');\r\n      return false;\r\n    }\r\n\r\n    var _this = this;\r\n    this.template.css('visibility', 'hidden').show();\r\n    this._setPosition();\r\n\r\n    /**\r\n     * Fires to close all other open tooltips on the page\r\n     * @event Closeme#tooltip\r\n     */\r\n    this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\r\n\r\n\r\n    this.template.attr({\r\n      'data-is-active': true,\r\n      'aria-hidden': false\r\n    });\r\n    _this.isActive = true;\r\n    // console.log(this.template);\r\n    this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function() {\r\n      //maybe do stuff?\r\n    });\r\n    /**\r\n     * Fires when the tooltip is shown\r\n     * @event Tooltip#show\r\n     */\r\n    this.$element.trigger('show.zf.tooltip');\r\n  }\r\n\r\n  /**\r\n   * Hides the current tooltip, and resets the positioning class if it was changed due to collision\r\n   * @fires Tooltip#hide\r\n   * @function\r\n   */\r\n  hide() {\r\n    // console.log('hiding', this.$element.data('yeti-box'));\r\n    var _this = this;\r\n    this.template.stop().attr({\r\n      'aria-hidden': true,\r\n      'data-is-active': false\r\n    }).fadeOut(this.options.fadeOutDuration, function() {\r\n      _this.isActive = false;\r\n      _this.isClick = false;\r\n      if (_this.classChanged) {\r\n        _this.template\r\n             .removeClass(_this._getPositionClass(_this.template))\r\n             .addClass(_this.options.positionClass);\r\n\r\n       _this.usedPositions = [];\r\n       _this.counter = 4;\r\n       _this.classChanged = false;\r\n      }\r\n    });\r\n    /**\r\n     * fires when the tooltip is hidden\r\n     * @event Tooltip#hide\r\n     */\r\n    this.$element.trigger('hide.zf.tooltip');\r\n  }\r\n\r\n  /**\r\n   * adds event listeners for the tooltip and its anchor\r\n   * TODO combine some of the listeners like focus and mouseenter, etc.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n    var $template = this.template;\r\n    var isFocus = false;\r\n\r\n    if (!this.options.disableHover) {\r\n\r\n      this.$element\r\n      .on('mouseenter.zf.tooltip', function(e) {\r\n        if (!_this.isActive) {\r\n          _this.timeout = setTimeout(function() {\r\n            _this.show();\r\n          }, _this.options.hoverDelay);\r\n        }\r\n      })\r\n      .on('mouseleave.zf.tooltip', function(e) {\r\n        clearTimeout(_this.timeout);\r\n        if (!isFocus || (_this.isClick && !_this.options.clickOpen)) {\r\n          _this.hide();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.options.clickOpen) {\r\n      this.$element.on('mousedown.zf.tooltip', function(e) {\r\n        e.stopImmediatePropagation();\r\n        if (_this.isClick) {\r\n          //_this.hide();\r\n          // _this.isClick = false;\r\n        } else {\r\n          _this.isClick = true;\r\n          if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\r\n            _this.show();\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.$element.on('mousedown.zf.tooltip', function(e) {\r\n        e.stopImmediatePropagation();\r\n        _this.isClick = true;\r\n      });\r\n    }\r\n\r\n    if (!this.options.disableForTouch) {\r\n      this.$element\r\n      .on('tap.zf.tooltip touchend.zf.tooltip', function(e) {\r\n        _this.isActive ? _this.hide() : _this.show();\r\n      });\r\n    }\r\n\r\n    this.$element.on({\r\n      // 'toggle.zf.trigger': this.toggle.bind(this),\r\n      // 'close.zf.trigger': this.hide.bind(this)\r\n      'close.zf.trigger': this.hide.bind(this)\r\n    });\r\n\r\n    this.$element\r\n      .on('focus.zf.tooltip', function(e) {\r\n        isFocus = true;\r\n        if (_this.isClick) {\r\n          // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\r\n          // a real focus, otherwise on hover and come back we get bad behavior\r\n          if(!_this.options.clickOpen) { isFocus = false; }\r\n          return false;\r\n        } else {\r\n          _this.show();\r\n        }\r\n      })\r\n\r\n      .on('focusout.zf.tooltip', function(e) {\r\n        isFocus = false;\r\n        _this.isClick = false;\r\n        _this.hide();\r\n      })\r\n\r\n      .on('resizeme.zf.trigger', function() {\r\n        if (_this.isActive) {\r\n          _this._setPosition();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * adds a toggle method, in addition to the static show() & hide() functions\r\n   * @function\r\n   */\r\n  toggle() {\r\n    if (this.isActive) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of tooltip, removes template element from the view.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$element.attr('title', this.template.text())\r\n                 .off('.zf.trigger .zf.tootip')\r\n                //  .removeClass('has-tip')\r\n                 .removeAttr('aria-describedby')\r\n                 .removeAttr('data-yeti-box')\r\n                 .removeAttr('data-toggle')\r\n                 .removeAttr('data-resize');\r\n\r\n    this.template.remove();\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nTooltip.defaults = {\r\n  disableForTouch: false,\r\n  /**\r\n   * Time, in ms, before a tooltip should open on hover.\r\n   * @option\r\n   * @example 200\r\n   */\r\n  hoverDelay: 200,\r\n  /**\r\n   * Time, in ms, a tooltip should take to fade into view.\r\n   * @option\r\n   * @example 150\r\n   */\r\n  fadeInDuration: 150,\r\n  /**\r\n   * Time, in ms, a tooltip should take to fade out of view.\r\n   * @option\r\n   * @example 150\r\n   */\r\n  fadeOutDuration: 150,\r\n  /**\r\n   * Disables hover events from opening the tooltip if set to true\r\n   * @option\r\n   * @example false\r\n   */\r\n  disableHover: false,\r\n  /**\r\n   * Optional addtional classes to apply to the tooltip template on init.\r\n   * @option\r\n   * @example 'my-cool-tip-class'\r\n   */\r\n  templateClasses: '',\r\n  /**\r\n   * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\r\n   * @option\r\n   * @example 'tooltip'\r\n   */\r\n  tooltipClass: 'tooltip',\r\n  /**\r\n   * Class applied to the tooltip anchor element.\r\n   * @option\r\n   * @example 'has-tip'\r\n   */\r\n  triggerClass: 'has-tip',\r\n  /**\r\n   * Minimum breakpoint size at which to open the tooltip.\r\n   * @option\r\n   * @example 'small'\r\n   */\r\n  showOn: 'small',\r\n  /**\r\n   * Custom template to be used to generate markup for tooltip.\r\n   * @option\r\n   * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\r\n   */\r\n  template: '',\r\n  /**\r\n   * Text displayed in the tooltip template on open.\r\n   * @option\r\n   * @example 'Some cool space fact here.'\r\n   */\r\n  tipText: '',\r\n  touchCloseText: 'Tap to close.',\r\n  /**\r\n   * Allows the tooltip to remain open if triggered with a click or touch event.\r\n   * @option\r\n   * @example true\r\n   */\r\n  clickOpen: true,\r\n  /**\r\n   * Additional positioning classes, set by the JS\r\n   * @option\r\n   * @example 'top'\r\n   */\r\n  positionClass: '',\r\n  /**\r\n   * Distance, in pixels, the template should push away from the anchor on the Y axis.\r\n   * @option\r\n   * @example 10\r\n   */\r\n  vOffset: 10,\r\n  /**\r\n   * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\r\n   * @option\r\n   * @example 12\r\n   */\r\n  hOffset: 12\r\n};\r\n\r\n/**\r\n * TODO utilize resize event trigger\r\n */\r\n\r\n// Window exports\r\nFoundation.plugin(Tooltip, 'Tooltip');\r\n\r\n}(jQuery);"]}