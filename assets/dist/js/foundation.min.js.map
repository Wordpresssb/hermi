{"version":3,"sources":["foundation.js","what-input.js","foundation.core.js","foundation.util.box.js","foundation.util.keyboard.js","foundation.util.mediaQuery.js","foundation.util.motion.js","foundation.util.nest.js","foundation.util.timerAndImageLoader.js","foundation.util.touch.js","foundation.util.triggers.js","foundation.abide.js","foundation.accordion.js","foundation.accordionMenu.js","foundation.drilldown.js","foundation.dropdown.js","foundation.dropdownMenu.js","foundation.equalizer.js","foundation.interchange.js","foundation.magellan.js","foundation.offcanvas.js","foundation.orbit.js","foundation.responsiveMenu.js","foundation.responsiveToggle.js","foundation.reveal.js","foundation.slider.js","foundation.sticky.js","foundation.tabs.js","foundation.toggler.js","foundation.tooltip.js","foundation.zf.responsiveAccordionTabs.js"],"names":["_classCallCheck","instance","Constructor","TypeError","root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","docElem","document","documentElement","currentInput","currentIntent","formInputs","ignoreMap","inputMap","keyup","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","touchstart","inputTypes","isBuffering","pointerMap","2","3","4","touchTimer","setUp","detectWheel","addListeners","setInput","window","PointerEvent","addEventListener","updateInput","setIntent","MSPointerEvent","touchBuffer","event","eventKey","which","value","type","pointerType","activeElem","activeElement","activeInput","nodeName","indexOf","toLowerCase","setAttribute","push","className","clearTimeout","setTimeout","createElement","undefined","onmousewheel","Array","prototype","ask","opt","types","$","functionName","fn","Function","name","funcNameRegex","results","exec","toString","length","trim","constructor","parseValue","str","isNaN","parseFloat","hyphenate","replace","FOUNDATION_VERSION","Foundation","version","_plugins","_uuids","rtl","attr","plugin","attrName","registerPlugin","pluginName","uuid","GetYoDigits","$element","data","trigger","unregisterPlugin","splice","removeAttr","removeData","prop","reInit","plugins","isJQ","each","_init","_this","fns","object","plgs","forEach","foundation","string","Object","keys","err","console","error","namespace","Math","round","pow","random","slice","reflow","elem","i","$elem","find","addBack","$el","opts","warn","split","e","map","el","er","getFnName","transitionend","end","transitions","transition","WebkitTransition","MozTransition","OTransition","t","style","triggerHandler","util","throttle","func","delay","timer","context","args","arguments","apply","method","$meta","$noJS","appendTo","head","removeClass","MediaQuery","plugClass","ReferenceError","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","callback","nextTime","max","performance","start","bind","oThis","aArgs","fToBind","fNOP","fBound","concat","jQuery","ImNotTouchingYou","element","parent","lrOnly","tbOnly","top","bottom","left","right","eleDims","GetDimensions","parDims","offset","height","width","windowDims","allDirs","Error","rect","getBoundingClientRect","parRect","parentNode","winRect","body","winY","pageYOffset","winX","pageXOffset","parentDims","GetOffsets","anchor","position","vOffset","hOffset","isOverflow","$eleDims","$anchorDims","Box","getKeyCodes","kcs","k","kc","keyCodes","9","13","27","32","37","38","39","40","commands","Keyboard","parseKey","key","keyCode","String","fromCharCode","toUpperCase","shiftKey","ctrlKey","altKey","handleKey","component","functions","cmds","command","commandList","ltr","extend","returnValue","handled","unhandled","findFocusable","filter","is","register","componentName","trapFocus","$focusable","$firstFocusable","eq","$lastFocusable","on","target","preventDefault","focus","releaseFocus","off","parseStyleToObject","styleObject","reduce","ret","param","parts","val","decodeURIComponent","hasOwnProperty","isArray","queries","current","namedQueries","self","extractedStyles","css","_getCurrentSize","_watcher","atLeast","size","query","get","matchMedia","matches","matched","newSize","currentSize","styleMedia","media","script","getElementsByTagName","info","insertBefore","getComputedStyle","currentStyle","matchMedium","text","styleSheet","cssText","textContent","Move","duration","move","ts","prog","anim","animate","isIn","animation","cb","finish","hide","reset","transitionDuration","initClass","activeClass","initClasses","activeClasses","addClass","show","offsetWidth","one","Motion","animateIn","animateOut","Nest","Feather","menu","items","role","subMenuClass","subItemClass","hasSubClass","$item","$sub","children","aria-haspopup","aria-label","aria-expanded","data-submenu","aria-hidden","Burn","Timer","options","nameSpace","remain","isPaused","restart","infinite","pause","onImagesLoaded","images","singleImageLoaded","unloaded","complete","readyState","src","onTouchEnd","removeEventListener","onTouchMove","isMoving","spotSwipe","dir","x","touches","pageX","dx","pageY","startPosX","elapsedTime","startTime","abs","moveThreshold","timeThreshold","onTouchStart","startPosY","init","enabled","special","swipe","setup","noop","addTouch","handleTouch","simulatedEvent","changedTouches","first","eventTypes","touchmove","touchend","MouseEvent","bubbles","cancelable","screenX","screenY","clientX","clientY","createEvent","initMouseEvent","dispatchEvent","checkListeners","eventsListener","resizeListener","scrollListener","closemeListener","yetiBoxes","plugNames","listeners","join","pluginId","not","debounce","$nodes","MutationObserver","nodes","querySelectorAll","listeningElementsMutation","mutationRecordsList","$target","attributeName","closest","elementObserver","observe","attributes","childList","characterData","subtree","attributeFilter","prefixes","triggers","stopPropagation","fadeOut","IHearYou","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","Abide","defaults","$inputs","_events","_this2","resetForm","validateForm","validateOn","validateInput","liveValidate","validateOnBlur","isGood","checked","$error","siblings","formErrorSelector","add","$label","$els","_this3","labels","findLabel","$formError","findFormError","labelErrorClass","formErrorClass","inputErrorClass","groupName","$labels","findRadioLabels","$formErrors","removeRadioErrorClasses","_this4","clearRequire","requiredCheck","validated","customValidator","validator","equalTo","validateRadio","validateText","matchValidation","validators","goodToGo","message","dependentElements","acc","noError","pattern","inputText","valid","patterns","RegExp","$group","required","_this5","clear","v","$form","removeErrorClasses","alpha","alpha_numeric","integer","number","card","cvv","email","url","domain","datetime","date","time","dateISO","month_day_year","day_month_year","color","Accordion","ENTER","SPACE","ARROW_DOWN","ARROW_UP","$tabs","idx","$content","linkId","aria-controls","aria-selected","aria-labelledby","$initActive","firstTimeInit","down","_checkDeepLink","location","hash","$link","$anchor","hasClass","deepLinkSmudge","load","scrollTop","deepLinkSmudgeDelay","deepLink","$tabContent","toggle","next","$a","multiExpand","previous","prev","up","updateHistory","history","pushState","replaceState","firstTime","$currentActive","slideDown","slideSpeed","$aunts","allowAllClosed","slideUp","stop","AccordionMenu","ARROW_RIGHT","ARROW_LEFT","ESCAPE","aria-multiselectable","multiOpen","$menuLinks","subId","isActive","initPanes","$submenu","$prevElement","$nextElement","$elements","min","parents","open","close","closeAll","hideAll","stopImmediatePropagation","parentsUntil","$menus","Drilldown","TAB","SHIFT_TAB","$submenuAnchors","$submenus","$menuItems","_prepareMenu","_registerEvents","_keyboardEvents","parentLink","clone","prependTo","wrap","tabindex","$menu","$back","backButtonPosition","append","backButton","prepend","_back","autoHeight","$wrapper","wrapper","animateHeight","_getMaxDims","max-width","min-height","_show","closeOnClick","$body","contains","_hideAll","_resize","_bindHandler","_scrollTop","$scrollTopElement","scrollTopElement","scrollPos","parseInt","scrollTopOffset","animationDuration","animationEasing","_hide","parentSubMenu","blur","maxHeight","result","unwrap","remove","Dropdown","$id","data-is-focus","data-yeti-box","parentClass","$parent","positionClass","getPositionClass","counter","usedPositions","data-resize","verticalPosition","match","horizontalPosition","classChanged","direction","newWidth","parentHOffset","$parentDims","_reposition","_setPosition","open.zf.trigger","close.zf.trigger","toggle.zf.trigger","resizeme.zf.trigger","hover","bodyData","whatinput","timeout","hoverDelay","hoverPane","autoFocus","_addBodyHandler","curPositionClass","DropdownMenu","subs","verticalClass","rightClass","alignment","changed","hasTouch","ontouchstart","parClass","handleClickFn","hasSub","hasClicked","clickOpen","forceFollow","closeOnClickInside","disableHover","autoclose","closingTime","isTab","index","nextSibling","prevSibling","openSub","closeSub","_isVertical","$sibs","oldClass","$parentLi","$toClose","somethingToClose","data-is-click","Equalizer","eqId","$watched","hasNested","isNested","isOn","onResizeMeBound","_onResizeMe","onPostEqualizedBound","_onPostEqualized","tooSmall","imgs","equalizeOn","_checkMQ","_reflow",".zf.equalizer","mutateme.zf.trigger","_pauseEvents","equalizeOnStack","_isStacked","equalizeByRow","getHeightsByRow","applyHeightByRow","getHeights","applyHeight","heights","len","offsetHeight","lastElTopOffset","groups","group","elOffsetTop","j","ln","groupsILength","lenJ","Interchange","rules","currentPath","_addBreakpoints","_generateRules","rule","path","SPECIAL_QUERIES","rulesList","background-image","response","html","landscape","portrait","retina","Magellan","calcPoints","$targets","$links","data-scroll","$active","points","winHeight","innerHeight","clientHeight","docHeight","scrollHeight","$tar","pt","threshold","targetPoint","easing","deepLinking","scrollToLoc","_updateActive","scrollme.zf.trigger","arrival","getAttribute","loc","_inTransition","barOffset","curIdx","winPos","isDown","curVisible","OffCanvas","$lastTrigger","$triggers","contentOverlay","overlay","overlayPosition","$overlay","isRevealed","revealClass","revealOn","_setMQChecker","transitionTime","keydown.zf.offcanvas","_handleKeyboard","click.zf.offcanvas","reveal","$closer","allowUp","allowDown","lastY","originalEvent","forceTo","scrollTo","contentScroll","_stopScrolling","_recordScrollable","_stopScrollPropagation","canvasFocus","Orbit","_reset","containerClass","$slides","slideClass","$images","initActive","useMUI","_prepareForOrbit","bullets","_loadBullets","autoPlay","geoSync","accessible","$bullets","boxOfBullets","timerDelay","changeSlide","_setWrapperHeight","temp","display","pauseOnHover","navButtons","$controls","nextClass","prevClass","$slide","_updateBullets","isLTR","chosenSlide","$curSlide","$newSlide","$firstSlide","$lastSlide","last","dirIn","dirOut","infiniteWrap","$oldBullet","span","detach","animInFromRight","animOutToRight","animInFromLeft","animOutToLeft","ResponsiveMenu","currentMq","currentPlugin","rulesTree","ruleSize","rulePlugin","MenuPlugins","isEmptyObject","_checkMediaQueries","matchedMq","cssClass","destroy","dropdown","drilldown","accordion","ResponsiveToggle","targetID","$targetMenu","$toggler","input","animationIn","animationOut","_update","_updateMqHandler","toggleMenu","hideFor","iPhoneSniff","androidSniff","mobileSniff","Reveal","cached","mq","isMobile","fullScreen","_makeOverlay","outerWidth","outerHeight","margin","_updatePosition","_handleState","addRevealOpenClasses","originalScrollPos","visibility","multipleOpened","afterAnimation","focusableElements","showDelay","_extraHandlers","closeOnEsc","finishUp","hideDelay","resetOnClose","title","href","btmOffsetPct","percent","frac","num","absPosition","$handle","clickPos","baseLog","base","log","Slider","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","inputs","handles","$input","$fill","vertical","isDbl","disabled","disabledClass","binding","_setInitAttr","doubleSided","$handle2","$input2","setHandles","_setHandlePos","pctOfBar","positionValueFunction","_logTransform","_powTransform","toFixed","nonLinearBase","$hndl","noInvert","h2Val","step","h1Val","vert","hOrW","lOrT","handleDim","elemDim","_pctOfBar","pxToMove","movement","decimal","_setValues","dim","isLeftHndl","handlePct","handlePos","initialStart","moveTime","changedDelay","initVal","initialEnd","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","hasVal","_adjustValue","eventOffset","barDim","windowScroll","scrollLeft","elemOffset","barXY","eventFromBar","offsetPct","_value","firstHndlPos","secndHndlPos","prev_val","next_val","div","_eventsForHandle","curHandle","_handleEvent","clickSelect","draggable","currentTarget","newValue","_$handle","oldValue","decrease","increase","decrease_fast","increase_fast","invertVertical","emCalc","em","fontSize","Sticky","wasWrapped","$container","container","wrapInner","stickyClass","data-mutate","scrollCount","checkEvery","isStuck","containerHeight","elemHeight","_parsePoints","_setSizes","scroll","_calc","_removeSticky","topPoint","reverse","topAnchor","btm","btmAnchor","pts","breaks","place","canStick","_eventsHandler","_pauseListeners","checkSizes","bottomPoint","_setSticky","stickTo","mrgn","notStuckTo","isTop","stickToTop","anchorPt","anchorHeight","topOrBottom","stickyOn","newElemWidth","comp","pdngl","pdngr","newContainerHeight","_setBreakPoints","mTop","marginTop","mBtm","marginBottom","Tabs","$tabTitles","linkClass","linkActiveClass","matchHeight","_setHeight","selectTab","_addKeyHandler","_addClickHandler","_setHeightMqHandler","_handleTabChange","wrapOnKeys","historyHandled","activeCollapse","_collapseTab","$oldTab","$tabLink","$targetContent","_openTab","panelActiveClass","$target_anchor","idStr","panelClass","panel","Toggler","toggleClass","_updateARIA","Tooltip","isClick","elemId","_getPositionClass","tipText","template","_buildTemplate","allowHtml","aria-describedby","data-toggle","triggerClass","templateClasses","tooltipClass","$template","data-is-active","$tipDims","showOn","fadeIn","fadeInDuration","fadeOutDuration","isFocus","disableForTouch","touchCloseText","ResponsiveAccordionTabs","_getAllOptions","allOptions","obj","dummyPlugin","tmpPlugin","keyKey","objObj","storezfData","_handleMarkup","toSet","fromString","$panels","tabsTitle","tabsPanel","$liHeads","$liHeadsA","after","$tabsContent","$placeholder","insertAfter","tempValue","tabs"],"mappings":"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","file":"foundation.min.js","sourcesContent":["'use strict';\n\n/**\r\n * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).\r\n * @version v4.0.6\r\n * @link https://github.com/ten1seven/what-input\r\n * @license MIT\r\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"whatInput\", [], factory);else if (typeof exports === 'object') exports[\"whatInput\"] = factory();else root[\"whatInput\"] = factory();\n})(this, function () {\n\treturn (/******/function (modules) {\n\t\t\t// webpackBootstrap\n\t\t\t/******/ // The module cache\n\t\t\t/******/var installedModules = {};\n\n\t\t\t/******/ // The require function\n\t\t\t/******/function __webpack_require__(moduleId) {\n\n\t\t\t\t/******/ // Check if module is in cache\n\t\t\t\t/******/if (installedModules[moduleId])\n\t\t\t\t\t/******/return installedModules[moduleId].exports;\n\n\t\t\t\t/******/ // Create a new module (and put it into the cache)\n\t\t\t\t/******/var module = installedModules[moduleId] = {\n\t\t\t\t\t/******/exports: {},\n\t\t\t\t\t/******/id: moduleId,\n\t\t\t\t\t/******/loaded: false\n\t\t\t\t\t/******/ };\n\n\t\t\t\t/******/ // Execute the module function\n\t\t\t\t/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t\t\t\t/******/ // Flag the module as loaded\n\t\t\t\t/******/module.loaded = true;\n\n\t\t\t\t/******/ // Return the exports of the module\n\t\t\t\t/******/return module.exports;\n\t\t\t\t/******/\n\t\t\t}\n\n\t\t\t/******/ // expose the modules object (__webpack_modules__)\n\t\t\t/******/__webpack_require__.m = modules;\n\n\t\t\t/******/ // expose the module cache\n\t\t\t/******/__webpack_require__.c = installedModules;\n\n\t\t\t/******/ // __webpack_public_path__\n\t\t\t/******/__webpack_require__.p = \"\";\n\n\t\t\t/******/ // Load entry module and return exports\n\t\t\t/******/return __webpack_require__(0);\n\t\t\t/******/\n\t\t}(\n\t\t/************************************************************************/\n\t\t/******/[\n\t\t/* 0 */\n\t\t/***/function (module, exports) {\n\n\t\t\tmodule.exports = function () {\n\n\t\t\t\t/*\r\n      ---------------\r\n      Variables\r\n      ---------------\r\n    */\n\n\t\t\t\t// cache document.documentElement\n\t\t\t\tvar docElem = document.documentElement;\n\n\t\t\t\t// last used input type\n\t\t\t\tvar currentInput = 'initial';\n\n\t\t\t\t// last used input intent\n\t\t\t\tvar currentIntent = null;\n\n\t\t\t\t// form input types\n\t\t\t\tvar formInputs = ['input', 'select', 'textarea'];\n\n\t\t\t\t// list of modifier keys commonly used with the mouse and\n\t\t\t\t// can be safely ignored to prevent false keyboard detection\n\t\t\t\tvar ignoreMap = [16, // shift\n\t\t\t\t17, // control\n\t\t\t\t18, // alt\n\t\t\t\t91, // Windows key / left Apple cmd\n\t\t\t\t93 // Windows menu / right Apple cmd\n\t\t\t\t];\n\n\t\t\t\t// mapping of events to input types\n\t\t\t\tvar inputMap = {\n\t\t\t\t\t'keyup': 'keyboard',\n\t\t\t\t\t'mousedown': 'mouse',\n\t\t\t\t\t'mousemove': 'mouse',\n\t\t\t\t\t'MSPointerDown': 'pointer',\n\t\t\t\t\t'MSPointerMove': 'pointer',\n\t\t\t\t\t'pointerdown': 'pointer',\n\t\t\t\t\t'pointermove': 'pointer',\n\t\t\t\t\t'touchstart': 'touch'\n\t\t\t\t};\n\n\t\t\t\t// array of all used input types\n\t\t\t\tvar inputTypes = [];\n\n\t\t\t\t// boolean: true if touch buffer timer is running\n\t\t\t\tvar isBuffering = false;\n\n\t\t\t\t// map of IE 10 pointer events\n\t\t\t\tvar pointerMap = {\n\t\t\t\t\t2: 'touch',\n\t\t\t\t\t3: 'touch', // treat pen like touch\n\t\t\t\t\t4: 'mouse'\n\t\t\t\t};\n\n\t\t\t\t// touch buffer timer\n\t\t\t\tvar touchTimer = null;\n\n\t\t\t\t/*\r\n      ---------------\r\n      Set up\r\n      ---------------\r\n    */\n\n\t\t\t\tvar setUp = function () {\n\n\t\t\t\t\t// add correct mouse wheel event mapping to `inputMap`\n\t\t\t\t\tinputMap[detectWheel()] = 'mouse';\n\n\t\t\t\t\taddListeners();\n\t\t\t\t\tsetInput();\n\t\t\t\t};\n\n\t\t\t\t/*\r\n      ---------------\r\n      Events\r\n      ---------------\r\n    */\n\n\t\t\t\tvar addListeners = function () {\n\n\t\t\t\t\t// `pointermove`, `MSPointerMove`, `mousemove` and mouse wheel event binding\n\t\t\t\t\t// can only demonstrate potential, but not actual, interaction\n\t\t\t\t\t// and are treated separately\n\n\t\t\t\t\t// pointer events (mouse, pen, touch)\n\t\t\t\t\tif (window.PointerEvent) {\n\t\t\t\t\t\tdocElem.addEventListener('pointerdown', updateInput);\n\t\t\t\t\t\tdocElem.addEventListener('pointermove', setIntent);\n\t\t\t\t\t} else if (window.MSPointerEvent) {\n\t\t\t\t\t\tdocElem.addEventListener('MSPointerDown', updateInput);\n\t\t\t\t\t\tdocElem.addEventListener('MSPointerMove', setIntent);\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// mouse events\n\t\t\t\t\t\tdocElem.addEventListener('mousedown', updateInput);\n\t\t\t\t\t\tdocElem.addEventListener('mousemove', setIntent);\n\n\t\t\t\t\t\t// touch events\n\t\t\t\t\t\tif ('ontouchstart' in window) {\n\t\t\t\t\t\t\tdocElem.addEventListener('touchstart', touchBuffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// mouse wheel\n\t\t\t\t\tdocElem.addEventListener(detectWheel(), setIntent);\n\n\t\t\t\t\t// keyboard events\n\t\t\t\t\tdocElem.addEventListener('keydown', updateInput);\n\t\t\t\t\tdocElem.addEventListener('keyup', updateInput);\n\t\t\t\t};\n\n\t\t\t\t// checks conditions before updating new input\n\t\t\t\tvar updateInput = function (event) {\n\n\t\t\t\t\t// only execute if the touch buffer timer isn't running\n\t\t\t\t\tif (!isBuffering) {\n\t\t\t\t\t\tvar eventKey = event.which;\n\t\t\t\t\t\tvar value = inputMap[event.type];\n\t\t\t\t\t\tif (value === 'pointer') value = pointerType(event);\n\n\t\t\t\t\t\tif (currentInput !== value || currentIntent !== value) {\n\n\t\t\t\t\t\t\tvar activeElem = document.activeElement;\n\t\t\t\t\t\t\tvar activeInput = activeElem && activeElem.nodeName && formInputs.indexOf(activeElem.nodeName.toLowerCase()) === -1 ? true : false;\n\n\t\t\t\t\t\t\tif (value === 'touch' ||\n\n\t\t\t\t\t\t\t// ignore mouse modifier keys\n\t\t\t\t\t\t\tvalue === 'mouse' && ignoreMap.indexOf(eventKey) === -1 ||\n\n\t\t\t\t\t\t\t// don't switch if the current element is a form input\n\t\t\t\t\t\t\tvalue === 'keyboard' && activeInput) {\n\n\t\t\t\t\t\t\t\t// set the current and catch-all variable\n\t\t\t\t\t\t\t\tcurrentInput = currentIntent = value;\n\n\t\t\t\t\t\t\t\tsetInput();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// updates the doc and `inputTypes` array with new input\n\t\t\t\tvar setInput = function () {\n\t\t\t\t\tdocElem.setAttribute('data-whatinput', currentInput);\n\t\t\t\t\tdocElem.setAttribute('data-whatintent', currentInput);\n\n\t\t\t\t\tif (inputTypes.indexOf(currentInput) === -1) {\n\t\t\t\t\t\tinputTypes.push(currentInput);\n\t\t\t\t\t\tdocElem.className += ' whatinput-types-' + currentInput;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// updates input intent for `mousemove` and `pointermove`\n\t\t\t\tvar setIntent = function (event) {\n\n\t\t\t\t\t// only execute if the touch buffer timer isn't running\n\t\t\t\t\tif (!isBuffering) {\n\t\t\t\t\t\tvar value = inputMap[event.type];\n\t\t\t\t\t\tif (value === 'pointer') value = pointerType(event);\n\n\t\t\t\t\t\tif (currentIntent !== value) {\n\t\t\t\t\t\t\tcurrentIntent = value;\n\n\t\t\t\t\t\t\tdocElem.setAttribute('data-whatintent', currentIntent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// buffers touch events because they frequently also fire mouse events\n\t\t\t\tvar touchBuffer = function (event) {\n\n\t\t\t\t\t// clear the timer if it happens to be running\n\t\t\t\t\twindow.clearTimeout(touchTimer);\n\n\t\t\t\t\t// set the current input\n\t\t\t\t\tupdateInput(event);\n\n\t\t\t\t\t// set the isBuffering to `true`\n\t\t\t\t\tisBuffering = true;\n\n\t\t\t\t\t// run the timer\n\t\t\t\t\ttouchTimer = window.setTimeout(function () {\n\n\t\t\t\t\t\t// if the timer runs out, set isBuffering back to `false`\n\t\t\t\t\t\tisBuffering = false;\n\t\t\t\t\t}, 200);\n\t\t\t\t};\n\n\t\t\t\t/*\r\n      ---------------\r\n      Utilities\r\n      ---------------\r\n    */\n\n\t\t\t\tvar pointerType = function (event) {\n\t\t\t\t\tif (typeof event.pointerType === 'number') {\n\t\t\t\t\t\treturn pointerMap[event.pointerType];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn event.pointerType === 'pen' ? 'touch' : event.pointerType; // treat pen like touch\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// detect version of mouse wheel event to use\n\t\t\t\t// via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n\t\t\t\tvar detectWheel = function () {\n\t\t\t\t\treturn 'onwheel' in document.createElement('div') ? 'wheel' : // Modern browsers support \"wheel\"\n\n\t\t\t\t\tdocument.onmousewheel !== undefined ? 'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n\t\t\t\t\t'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\n\t\t\t\t};\n\n\t\t\t\t/*\r\n      ---------------\r\n      Init\r\n        don't start script unless browser cuts the mustard\r\n      (also passes if polyfills are used)\r\n      ---------------\r\n    */\n\n\t\t\t\tif ('addEventListener' in window && Array.prototype.indexOf) {\n\t\t\t\t\tsetUp();\n\t\t\t\t}\n\n\t\t\t\t/*\r\n      ---------------\r\n      API\r\n      ---------------\r\n    */\n\n\t\t\t\treturn {\n\n\t\t\t\t\t// returns string: the current input type\n\t\t\t\t\t// opt: 'loose'|'strict'\n\t\t\t\t\t// 'strict' (default): returns the same value as the `data-whatinput` attribute\n\t\t\t\t\t// 'loose': includes `data-whatintent` value if it's more current than `data-whatinput`\n\t\t\t\t\task: function (opt) {\n\t\t\t\t\t\treturn opt === 'loose' ? currentIntent : currentInput;\n\t\t\t\t\t},\n\n\t\t\t\t\t// returns array: all the detected input types\n\t\t\t\t\ttypes: function () {\n\t\t\t\t\t\treturn inputTypes;\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t}();\n\n\t\t\t/***/\n\t\t}\n\t\t/******/])\n\t);\n});\n;\n'use strict';\n\n!function ($) {\n\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.3.1';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\r\n     * Stores initialized plugins.\r\n     */\n    _plugins: {},\n\n    /**\r\n     * Stores generated unique ids for plugin instances\r\n     */\n    _uuids: [],\n\n    /**\r\n     * Returns a boolean for RTL support\r\n     */\n    rtl: function () {\n      return $('html').attr('dir') === 'rtl';\n    },\n    /**\r\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\r\n     * @param {Object} plugin - The constructor of the plugin.\r\n     */\n    plugin: function (plugin, name) {\n      // Object key to use when adding to global Foundation object\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\n      var className = name || functionName(plugin);\n      // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n      // Examples: data-reveal, data-off-canvas\n      var attrName = hyphenate(className);\n\n      // Add to the Foundation object and the plugins list (for reflowing)\n      this._plugins[attrName] = this[className] = plugin;\n    },\n    /**\r\n     * @function\r\n     * Populates the _uuids array with pointers to each individual plugin instance.\r\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\r\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\r\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\r\n     * @fires Plugin#init\r\n     */\n    registerPlugin: function (plugin, name) {\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n      plugin.uuid = this.GetYoDigits(6, pluginName);\n\n      if (!plugin.$element.attr('data-' + pluginName)) {\n        plugin.$element.attr('data-' + pluginName, plugin.uuid);\n      }\n      if (!plugin.$element.data('zfPlugin')) {\n        plugin.$element.data('zfPlugin', plugin);\n      }\n      /**\r\n       * Fires when the plugin has initialized.\r\n       * @event Plugin#init\r\n       */\n      plugin.$element.trigger('init.zf.' + pluginName);\n\n      this._uuids.push(plugin.uuid);\n\n      return;\n    },\n    /**\r\n     * @function\r\n     * Removes the plugins uuid from the _uuids array.\r\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\r\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\r\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n     * @fires Plugin#destroyed\r\n     */\n    unregisterPlugin: function (plugin) {\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n      plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n      /**\r\n       * Fires when the plugin has been destroyed.\r\n       * @event Plugin#destroyed\r\n       */\n      .trigger('destroyed.zf.' + pluginName);\n      for (var prop in plugin) {\n        plugin[prop] = null; //clean up script to prep for garbage collection.\n      }\n      return;\n    },\n\n    /**\r\n     * @function\r\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\r\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\r\n     * @default If no argument is passed, reflow all currently active plugins.\r\n     */\n    reInit: function (plugins) {\n      var isJQ = plugins instanceof $;\n      try {\n        if (isJQ) {\n          plugins.each(function () {\n            $(this).data('zfPlugin')._init();\n          });\n        } else {\n          var type = typeof plugins,\n              _this = this,\n              fns = {\n            'object': function (plgs) {\n              plgs.forEach(function (p) {\n                p = hyphenate(p);\n                $('[data-' + p + ']').foundation('_init');\n              });\n            },\n            'string': function () {\n              plugins = hyphenate(plugins);\n              $('[data-' + plugins + ']').foundation('_init');\n            },\n            'undefined': function () {\n              this['object'](Object.keys(_this._plugins));\n            }\n          };\n          fns[type](plugins);\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        return plugins;\n      }\n    },\n\n    /**\r\n     * returns a random base-36 uid with namespacing\r\n     * @function\r\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\r\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\r\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\r\n     * @returns {String} - unique id\r\n     */\n    GetYoDigits: function (length, namespace) {\n      length = length || 6;\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n    },\n    /**\r\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\r\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\r\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\r\n     */\n    reflow: function (elem, plugins) {\n\n      // If plugins is undefined, just grab everything\n      if (typeof plugins === 'undefined') {\n        plugins = Object.keys(this._plugins);\n      }\n      // If plugins is a string, convert it to an array with one item\n      else if (typeof plugins === 'string') {\n          plugins = [plugins];\n        }\n\n      var _this = this;\n\n      // Iterate through each plugin\n      $.each(plugins, function (i, name) {\n        // Get the current plugin\n        var plugin = _this._plugins[name];\n\n        // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n        // For each plugin found, initialize it\n        $elem.each(function () {\n          var $el = $(this),\n              opts = {};\n          // Don't double-dip on plugins\n          if ($el.data('zfPlugin')) {\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n            return;\n          }\n\n          if ($el.attr('data-options')) {\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n              var opt = e.split(':').map(function (el) {\n                return el.trim();\n              });\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n            });\n          }\n          try {\n            $el.data('zfPlugin', new plugin($(this), opts));\n          } catch (er) {\n            console.error(er);\n          } finally {\n            return;\n          }\n        });\n      });\n    },\n    getFnName: functionName,\n    transitionend: function ($elem) {\n      var transitions = {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'otransitionend'\n      };\n      var elem = document.createElement('div'),\n          end;\n\n      for (var t in transitions) {\n        if (typeof elem.style[t] !== 'undefined') {\n          end = transitions[t];\n        }\n      }\n      if (end) {\n        return end;\n      } else {\n        end = setTimeout(function () {\n          $elem.triggerHandler('transitionend', [$elem]);\n        }, 1);\n        return 'transitionend';\n      }\n    }\n  };\n\n  Foundation.util = {\n    /**\r\n     * Function for applying a debounce effect to a function call.\r\n     * @function\r\n     * @param {Function} func - Function to be called at end of timeout.\r\n     * @param {Number} delay - Time in ms to delay the call of `func`.\r\n     * @returns function\r\n     */\n    throttle: function (func, delay) {\n      var timer = null;\n\n      return function () {\n        var context = this,\n            args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            func.apply(context, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\r\n   * The Foundation jQuery method.\r\n   * @param {String|Array} method - An action to perform on the current jQuery object.\r\n   */\n  var foundation = function (method) {\n    var type = typeof method,\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\r\n     * Polyfill for performance.now, required by rAF\r\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function () {\n          return Date.now() - this.start;\n        }\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function () {},\n          fBound = function () {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if ('true' === str) return true;else if ('false' === str) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  Foundation.Box = {\n    ImNotTouchingYou: ImNotTouchingYou,\n    GetDimensions: GetDimensions,\n    GetOffsets: GetOffsets\n  };\n\n  /**\r\n   * Compares the dimensions of an element to a container and determines collision events with container.\r\n   * @function\r\n   * @param {jQuery} element - jQuery object to test for collisions.\r\n   * @param {jQuery} parent - jQuery object to use as bounding container.\r\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\r\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\r\n   * @default if no parent object passed, detects collisions with `window`.\r\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\r\n   */\n  function ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n    var eleDims = GetDimensions(element),\n        top,\n        bottom,\n        left,\n        right;\n\n    if (parent) {\n      var parDims = GetDimensions(parent);\n\n      bottom = eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top;\n      top = eleDims.offset.top >= parDims.offset.top;\n      left = eleDims.offset.left >= parDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= parDims.width + parDims.offset.left;\n    } else {\n      bottom = eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top;\n      top = eleDims.offset.top >= eleDims.windowDims.offset.top;\n      left = eleDims.offset.left >= eleDims.windowDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= eleDims.windowDims.width;\n    }\n\n    var allDirs = [bottom, top, left, right];\n\n    if (lrOnly) {\n      return left === right === true;\n    }\n\n    if (tbOnly) {\n      return top === bottom === true;\n    }\n\n    return allDirs.indexOf(false) === -1;\n  };\n\n  /**\r\n   * Uses native methods to return an object of dimension values.\r\n   * @function\r\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\r\n   * @returns {Object} - nested object of integer pixel values\r\n   * TODO - if element is window, return only those values.\r\n   */\n  function GetDimensions(elem, test) {\n    elem = elem.length ? elem[0] : elem;\n\n    if (elem === window || elem === document) {\n      throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n    }\n\n    var rect = elem.getBoundingClientRect(),\n        parRect = elem.parentNode.getBoundingClientRect(),\n        winRect = document.body.getBoundingClientRect(),\n        winY = window.pageYOffset,\n        winX = window.pageXOffset;\n\n    return {\n      width: rect.width,\n      height: rect.height,\n      offset: {\n        top: rect.top + winY,\n        left: rect.left + winX\n      },\n      parentDims: {\n        width: parRect.width,\n        height: parRect.height,\n        offset: {\n          top: parRect.top + winY,\n          left: parRect.left + winX\n        }\n      },\n      windowDims: {\n        width: winRect.width,\n        height: winRect.height,\n        offset: {\n          top: winY,\n          left: winX\n        }\n      }\n    };\n  }\n\n  /**\r\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\r\n   * such as: Tooltip, Reveal, and Dropdown\r\n   * @function\r\n   * @param {jQuery} element - jQuery object for the element being positioned.\r\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\r\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\r\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\r\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\r\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\r\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\r\n   */\n  function GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n    var $eleDims = GetDimensions(element),\n        $anchorDims = anchor ? GetDimensions(anchor) : null;\n\n    switch (position) {\n      case 'top':\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'center top':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'center bottom':\n        return {\n          left: isOverflow ? hOffset : $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'center left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center':\n        return {\n          left: $eleDims.windowDims.offset.left + $eleDims.windowDims.width / 2 - $eleDims.width / 2,\n          top: $eleDims.windowDims.offset.top + $eleDims.windowDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'reveal':\n        return {\n          left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n          top: $eleDims.windowDims.offset.top + vOffset\n        };\n      case 'reveal full':\n        return {\n          left: $eleDims.windowDims.offset.left,\n          top: $eleDims.windowDims.offset.top\n        };\n        break;\n      case 'left bottom':\n        return {\n          left: $anchorDims.offset.left,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'right bottom':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset - $eleDims.width,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      default:\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left + hOffset,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n    }\n  }\n}(jQuery);\n/*******************************************\r\n *                                         *\r\n * This util was created by Marius Olbertz *\r\n * Please thank Marius on GitHub /owlbertz *\r\n * or the web http://www.mariusolbertz.de/ *\r\n *                                         *\r\n ******************************************/\n\n'use strict';\n\n!function ($) {\n\n  var keyCodes = {\n    9: 'TAB',\n    13: 'ENTER',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'ARROW_LEFT',\n    38: 'ARROW_UP',\n    39: 'ARROW_RIGHT',\n    40: 'ARROW_DOWN'\n  };\n\n  var commands = {};\n\n  var Keyboard = {\n    keys: getKeyCodes(keyCodes),\n\n    /**\r\n     * Parses the (keyboard) event and returns a String that represents its key\r\n     * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n     * @param {Event} event - the event generated by the event handler\r\n     * @return String key - String that represents the key pressed\r\n     */\n    parseKey: function (event) {\n      var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n\n      // Remove un-printable characters, e.g. for `fromCharCode` calls for CTRL only events\n      key = key.replace(/\\W+/, '');\n\n      if (event.shiftKey) key = 'SHIFT_' + key;\n      if (event.ctrlKey) key = 'CTRL_' + key;\n      if (event.altKey) key = 'ALT_' + key;\n\n      // Remove trailing underscore, in case only modifiers were used (e.g. only `CTRL_ALT`)\n      key = key.replace(/_$/, '');\n\n      return key;\n    },\n\n\n    /**\r\n     * Handles the given (keyboard) event\r\n     * @param {Event} event - the event generated by the event handler\r\n     * @param {String} component - Foundation component's name, e.g. Slider or Reveal\r\n     * @param {Objects} functions - collection of functions that are to be executed\r\n     */\n    handleKey: function (event, component, functions) {\n      var commandList = commands[component],\n          keyCode = this.parseKey(event),\n          cmds,\n          command,\n          fn;\n\n      if (!commandList) return console.warn('Component not defined!');\n\n      if (typeof commandList.ltr === 'undefined') {\n        // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n      } else {\n          // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n          if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n        }\n      command = cmds[keyCode];\n\n      fn = functions[command];\n      if (fn && typeof fn === 'function') {\n        // execute function  if exists\n        var returnValue = fn.apply();\n        if (functions.handled || typeof functions.handled === 'function') {\n          // execute function when event was handled\n          functions.handled(returnValue);\n        }\n      } else {\n        if (functions.unhandled || typeof functions.unhandled === 'function') {\n          // execute function when event was not handled\n          functions.unhandled();\n        }\n      }\n    },\n\n\n    /**\r\n     * Finds all focusable elements within the given `$element`\r\n     * @param {jQuery} $element - jQuery object to search within\r\n     * @return {jQuery} $focusable - all focusable elements within `$element`\r\n     */\n    findFocusable: function ($element) {\n      if (!$element) {\n        return false;\n      }\n      return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function () {\n        if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) {\n          return false;\n        } //only have visible elements and those that have a tabindex greater or equal 0\n        return true;\n      });\n    },\n\n\n    /**\r\n     * Returns the component name name\r\n     * @param {Object} component - Foundation component, e.g. Slider or Reveal\r\n     * @return String componentName\r\n     */\n\n    register: function (componentName, cmds) {\n      commands[componentName] = cmds;\n    },\n\n\n    /**\r\n     * Traps the focus in the given element.\r\n     * @param  {jQuery} $element  jQuery object to trap the foucs into.\r\n     */\n    trapFocus: function ($element) {\n      var $focusable = Foundation.Keyboard.findFocusable($element),\n          $firstFocusable = $focusable.eq(0),\n          $lastFocusable = $focusable.eq(-1);\n\n      $element.on('keydown.zf.trapfocus', function (event) {\n        if (event.target === $lastFocusable[0] && Foundation.Keyboard.parseKey(event) === 'TAB') {\n          event.preventDefault();\n          $firstFocusable.focus();\n        } else if (event.target === $firstFocusable[0] && Foundation.Keyboard.parseKey(event) === 'SHIFT_TAB') {\n          event.preventDefault();\n          $lastFocusable.focus();\n        }\n      });\n    },\n\n    /**\r\n     * Releases the trapped focus from the given element.\r\n     * @param  {jQuery} $element  jQuery object to release the focus for.\r\n     */\n    releaseFocus: function ($element) {\n      $element.off('keydown.zf.trapfocus');\n    }\n  };\n\n  /*\r\n   * Constants for easier comparing.\r\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n   */\n  function getKeyCodes(kcs) {\n    var k = {};\n    for (var kc in kcs) {\n      k[kcs[kc]] = kcs[kc];\n    }return k;\n  }\n\n  Foundation.Keyboard = Keyboard;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  // Default set of media queries\n  var defaultQueries = {\n    'default': 'only screen',\n    landscape: 'only screen and (orientation: landscape)',\n    portrait: 'only screen and (orientation: portrait)',\n    retina: 'only screen and (-webkit-min-device-pixel-ratio: 2),' + 'only screen and (min--moz-device-pixel-ratio: 2),' + 'only screen and (-o-min-device-pixel-ratio: 2/1),' + 'only screen and (min-device-pixel-ratio: 2),' + 'only screen and (min-resolution: 192dpi),' + 'only screen and (min-resolution: 2dppx)'\n  };\n\n  var MediaQuery = {\n    queries: [],\n\n    current: '',\n\n    /**\r\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\r\n     * @function\r\n     * @private\r\n     */\n    _init: function () {\n      var self = this;\n      var extractedStyles = $('.foundation-mq').css('font-family');\n      var namedQueries;\n\n      namedQueries = parseStyleToObject(extractedStyles);\n\n      for (var key in namedQueries) {\n        if (namedQueries.hasOwnProperty(key)) {\n          self.queries.push({\n            name: key,\n            value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n          });\n        }\n      }\n\n      this.current = this._getCurrentSize();\n\n      this._watcher();\n    },\n\n\n    /**\r\n     * Checks if the screen is at least as wide as a breakpoint.\r\n     * @function\r\n     * @param {String} size - Name of the breakpoint to check.\r\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\r\n     */\n    atLeast: function (size) {\n      var query = this.get(size);\n\n      if (query) {\n        return window.matchMedia(query).matches;\n      }\n\n      return false;\n    },\n\n\n    /**\r\n     * Checks if the screen matches to a breakpoint.\r\n     * @function\r\n     * @param {String} size - Name of the breakpoint to check, either 'small only' or 'small'. Omitting 'only' falls back to using atLeast() method.\r\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it does not.\r\n     */\n    is: function (size) {\n      size = size.trim().split(' ');\n      if (size.length > 1 && size[1] === 'only') {\n        if (size[0] === this._getCurrentSize()) return true;\n      } else {\n        return this.atLeast(size[0]);\n      }\n      return false;\n    },\n\n\n    /**\r\n     * Gets the media query of a breakpoint.\r\n     * @function\r\n     * @param {String} size - Name of the breakpoint to get.\r\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\r\n     */\n    get: function (size) {\n      for (var i in this.queries) {\n        if (this.queries.hasOwnProperty(i)) {\n          var query = this.queries[i];\n          if (size === query.name) return query.value;\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\r\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\r\n     * @function\r\n     * @private\r\n     * @returns {String} Name of the current breakpoint.\r\n     */\n    _getCurrentSize: function () {\n      var matched;\n\n      for (var i = 0; i < this.queries.length; i++) {\n        var query = this.queries[i];\n\n        if (window.matchMedia(query.value).matches) {\n          matched = query;\n        }\n      }\n\n      if (typeof matched === 'object') {\n        return matched.name;\n      } else {\n        return matched;\n      }\n    },\n\n\n    /**\r\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\r\n     * @function\r\n     * @private\r\n     */\n    _watcher: function () {\n      var _this = this;\n\n      $(window).on('resize.zf.mediaquery', function () {\n        var newSize = _this._getCurrentSize(),\n            currentSize = _this.current;\n\n        if (newSize !== currentSize) {\n          // Change the current media query\n          _this.current = newSize;\n\n          // Broadcast the media query change on the window\n          $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\n        }\n      });\n    }\n  };\n\n  Foundation.MediaQuery = MediaQuery;\n\n  // matchMedia() polyfill - Test a CSS media type/query in JS.\n  // Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\n  window.matchMedia || (window.matchMedia = function () {\n    'use strict';\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n\n    var styleMedia = window.styleMedia || window.media;\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n      var style = document.createElement('style'),\n          script = document.getElementsByTagName('script')[0],\n          info = null;\n\n      style.type = 'text/css';\n      style.id = 'matchmediajs-test';\n\n      script && script.parentNode && script.parentNode.insertBefore(style, script);\n\n      // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n      info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n      styleMedia = {\n        matchMedium: function (media) {\n          var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n          // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n          if (style.styleSheet) {\n            style.styleSheet.cssText = text;\n          } else {\n            style.textContent = text;\n          }\n\n          // Test if media query is true or false\n          return info.width === '1px';\n        }\n      };\n    }\n\n    return function (media) {\n      return {\n        matches: styleMedia.matchMedium(media || 'all'),\n        media: media || 'all'\n      };\n    };\n  }());\n\n  // Thank you: https://github.com/sindresorhus/query-string\n  function parseStyleToObject(str) {\n    var styleObject = {};\n\n    if (typeof str !== 'string') {\n      return styleObject;\n    }\n\n    str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n    if (!str) {\n      return styleObject;\n    }\n\n    styleObject = str.split('&').reduce(function (ret, param) {\n      var parts = param.replace(/\\+/g, ' ').split('=');\n      var key = parts[0];\n      var val = parts[1];\n      key = decodeURIComponent(key);\n\n      // missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n      val = val === undefined ? null : decodeURIComponent(val);\n\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = val;\n      } else if (Array.isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n      return ret;\n    }, {});\n\n    return styleObject;\n  }\n\n  Foundation.MediaQuery = MediaQuery;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  /**\r\n   * Motion module.\r\n   * @module foundation.motion\r\n   */\n\n  var initClasses = ['mui-enter', 'mui-leave'];\n  var activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\n  var Motion = {\n    animateIn: function (element, animation, cb) {\n      animate(true, element, animation, cb);\n    },\n\n    animateOut: function (element, animation, cb) {\n      animate(false, element, animation, cb);\n    }\n  };\n\n  function Move(duration, elem, fn) {\n    var anim,\n        prog,\n        start = null;\n    // console.log('called');\n\n    if (duration === 0) {\n      fn.apply(elem);\n      elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      return;\n    }\n\n    function move(ts) {\n      if (!start) start = ts;\n      // console.log(start, ts);\n      prog = ts - start;\n      fn.apply(elem);\n\n      if (prog < duration) {\n        anim = window.requestAnimationFrame(move, elem);\n      } else {\n        window.cancelAnimationFrame(anim);\n        elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      }\n    }\n    anim = window.requestAnimationFrame(move);\n  }\n\n  /**\r\n   * Animates an element in or out using a CSS transition class.\r\n   * @function\r\n   * @private\r\n   * @param {Boolean} isIn - Defines if the animation is in or out.\r\n   * @param {Object} element - jQuery or HTML object to animate.\r\n   * @param {String} animation - CSS class to use.\r\n   * @param {Function} cb - Callback to run when animation is finished.\r\n   */\n  function animate(isIn, element, animation, cb) {\n    element = $(element).eq(0);\n\n    if (!element.length) return;\n\n    var initClass = isIn ? initClasses[0] : initClasses[1];\n    var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n    // Set up the animation\n    reset();\n\n    element.addClass(animation).css('transition', 'none');\n\n    requestAnimationFrame(function () {\n      element.addClass(initClass);\n      if (isIn) element.show();\n    });\n\n    // Start the animation\n    requestAnimationFrame(function () {\n      element[0].offsetWidth;\n      element.css('transition', '').addClass(activeClass);\n    });\n\n    // Clean up the animation when it finishes\n    element.one(Foundation.transitionend(element), finish);\n\n    // Hides the element (for out animations), resets the element, and runs a callback\n    function finish() {\n      if (!isIn) element.hide();\n      reset();\n      if (cb) cb.apply(element);\n    }\n\n    // Resets transitions and removes motion-specific classes\n    function reset() {\n      element[0].style.transitionDuration = 0;\n      element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n    }\n  }\n\n  Foundation.Move = Move;\n  Foundation.Motion = Motion;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  var Nest = {\n    Feather: function (menu) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'zf';\n\n      menu.attr('role', 'menubar');\n\n      var items = menu.find('li').attr({ 'role': 'menuitem' }),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      items.each(function () {\n        var $item = $(this),\n            $sub = $item.children('ul');\n\n        if ($sub.length) {\n          $item.addClass(hasSubClass).attr({\n            'aria-haspopup': true,\n            'aria-label': $item.children('a:first').text()\n          });\n          // Note:  Drilldowns behave differently in how they hide, and so need\n          // additional attributes.  We should look if this possibly over-generalized\n          // utility (Nest) is appropriate when we rework menus in 6.4\n          if (type === 'drilldown') {\n            $item.attr({ 'aria-expanded': false });\n          }\n\n          $sub.addClass('submenu ' + subMenuClass).attr({\n            'data-submenu': '',\n            'role': 'menu'\n          });\n          if (type === 'drilldown') {\n            $sub.attr({ 'aria-hidden': true });\n          }\n        }\n\n        if ($item.parent('[data-submenu]').length) {\n          $item.addClass('is-submenu-item ' + subItemClass);\n        }\n      });\n\n      return;\n    },\n    Burn: function (menu, type) {\n      var //items = menu.find('li'),\n      subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('>li, .menu, .menu > li').removeClass(subMenuClass + ' ' + subItemClass + ' ' + hasSubClass + ' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display', '');\n\n      // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n      //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n      //           .removeAttr('data-submenu'));\n      // items.each(function(){\n      //   var $item = $(this),\n      //       $sub = $item.children('ul');\n      //   if($item.parent('[data-submenu]').length){\n      //     $item.removeClass('is-submenu-item ' + subItemClass);\n      //   }\n      //   if($sub.length){\n      //     $item.removeClass('has-submenu');\n      //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n      //   }\n      // });\n    }\n  };\n\n  Foundation.Nest = Nest;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.isPaused = false;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      this.isPaused = false;\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n        }\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      this.isPaused = true;\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  }\n\n  /**\r\n   * Runs a callback function when images are fully loaded.\r\n   * @param {Object} images - Image(s) to check if loaded.\r\n   * @param {Func} callback - Function to execute when image is fully loaded.\r\n   */\n  function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    images.each(function () {\n      // Check if image is loaded\n      if (this.complete || this.readyState === 4 || this.readyState === 'complete') {\n        singleImageLoaded();\n      }\n      // Force load the image\n      else {\n          // fix for IE. See https://css-tricks.com/snippets/jquery/fixing-load-in-ie-for-cached-images/\n          var src = $(this).attr('src');\n          $(this).attr('src', src + (src.indexOf('?') >= 0 ? '&' : '?') + new Date().getTime());\n          $(this).one('load', function () {\n            singleImageLoaded();\n          });\n        }\n    });\n\n    function singleImageLoaded() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    }\n  }\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery);\n'use strict';\n\n//**************************************************\n//**Work inspired by multiple jquery swipe plugins**\n//**Done by Yohai Ararat ***************************\n//**************************************************\n(function ($) {\n\n\t\t$.spotSwipe = {\n\t\t\t\tversion: '1.0.0',\n\t\t\t\tenabled: 'ontouchstart' in document.documentElement,\n\t\t\t\tpreventDefault: false,\n\t\t\t\tmoveThreshold: 75,\n\t\t\t\ttimeThreshold: 200\n\t\t};\n\n\t\tvar startPosX,\n\t\t    startPosY,\n\t\t    startTime,\n\t\t    elapsedTime,\n\t\t    isMoving = false;\n\n\t\tfunction onTouchEnd() {\n\t\t\t\t//  alert(this);\n\t\t\t\tthis.removeEventListener('touchmove', onTouchMove);\n\t\t\t\tthis.removeEventListener('touchend', onTouchEnd);\n\t\t\t\tisMoving = false;\n\t\t}\n\n\t\tfunction onTouchMove(e) {\n\t\t\t\tif ($.spotSwipe.preventDefault) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\tif (isMoving) {\n\t\t\t\t\t\tvar x = e.touches[0].pageX;\n\t\t\t\t\t\tvar y = e.touches[0].pageY;\n\t\t\t\t\t\tvar dx = startPosX - x;\n\t\t\t\t\t\tvar dy = startPosY - y;\n\t\t\t\t\t\tvar dir;\n\t\t\t\t\t\telapsedTime = new Date().getTime() - startTime;\n\t\t\t\t\t\tif (Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t\t\t\t\t\tdir = dx > 0 ? 'left' : 'right';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t\t\t\t//   dir = dy > 0 ? 'down' : 'up';\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tif (dir) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tonTouchEnd.call(this);\n\t\t\t\t\t\t\t\t$(this).trigger('swipe', dir).trigger('swipe' + dir);\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\n\t\tfunction onTouchStart(e) {\n\t\t\t\tif (e.touches.length == 1) {\n\t\t\t\t\t\tstartPosX = e.touches[0].pageX;\n\t\t\t\t\t\tstartPosY = e.touches[0].pageY;\n\t\t\t\t\t\tisMoving = true;\n\t\t\t\t\t\tstartTime = new Date().getTime();\n\t\t\t\t\t\tthis.addEventListener('touchmove', onTouchMove, false);\n\t\t\t\t\t\tthis.addEventListener('touchend', onTouchEnd, false);\n\t\t\t\t}\n\t\t}\n\n\t\tfunction init() {\n\t\t\t\tthis.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\n\t\t}\n\n\t\tfunction teardown() {\n\t\t\t\tthis.removeEventListener('touchstart', onTouchStart);\n\t\t}\n\n\t\t$.event.special.swipe = { setup: init };\n\n\t\t$.each(['left', 'up', 'down', 'right'], function () {\n\t\t\t\t$.event.special['swipe' + this] = { setup: function () {\n\t\t\t\t\t\t\t\t$(this).on('swipe', $.noop);\n\t\t\t\t\t\t} };\n\t\t});\n})(jQuery);\n/****************************************************\r\n * Method for adding psuedo drag events to elements *\r\n ***************************************************/\n!function ($) {\n\t\t$.fn.addTouch = function () {\n\t\t\t\tthis.each(function (i, el) {\n\t\t\t\t\t\t$(el).bind('touchstart touchmove touchend touchcancel', function () {\n\t\t\t\t\t\t\t\t//we pass the original event object because the jQuery event\n\t\t\t\t\t\t\t\t//object is normalized to w3c specs and does not provide the TouchList\n\t\t\t\t\t\t\t\thandleTouch(event);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tvar handleTouch = function (event) {\n\t\t\t\t\t\tvar touches = event.changedTouches,\n\t\t\t\t\t\t    first = touches[0],\n\t\t\t\t\t\t    eventTypes = {\n\t\t\t\t\t\t\t\ttouchstart: 'mousedown',\n\t\t\t\t\t\t\t\ttouchmove: 'mousemove',\n\t\t\t\t\t\t\t\ttouchend: 'mouseup'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t    type = eventTypes[event.type],\n\t\t\t\t\t\t    simulatedEvent;\n\n\t\t\t\t\t\tif ('MouseEvent' in window && typeof window.MouseEvent === 'function') {\n\t\t\t\t\t\t\t\tsimulatedEvent = new window.MouseEvent(type, {\n\t\t\t\t\t\t\t\t\t\t'bubbles': true,\n\t\t\t\t\t\t\t\t\t\t'cancelable': true,\n\t\t\t\t\t\t\t\t\t\t'screenX': first.screenX,\n\t\t\t\t\t\t\t\t\t\t'screenY': first.screenY,\n\t\t\t\t\t\t\t\t\t\t'clientX': first.clientX,\n\t\t\t\t\t\t\t\t\t\t'clientY': first.clientY\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsimulatedEvent = document.createEvent('MouseEvent');\n\t\t\t\t\t\t\t\tsimulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0 /*left*/, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfirst.target.dispatchEvent(simulatedEvent);\n\t\t\t\t};\n\t\t};\n}(jQuery);\n\n//**********************************\n//**From the jQuery Mobile Library**\n//**need to recreate functionality**\n//**and try to improve if possible**\n//**********************************\n\n/* Removing the jQuery function ****\r\n************************************\r\n\r\n(function( $, window, undefined ) {\r\n\r\n\tvar $document = $( document ),\r\n\t\t// supportTouch = $.mobile.support.touch,\r\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\r\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\r\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\r\n\r\n\t// setup new event shortcuts\r\n\t$.each( ( \"touchstart touchmove touchend \" +\r\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\r\n\r\n\t\t$.fn[ name ] = function( fn ) {\r\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\r\n\t\t};\r\n\r\n\t\t// jQuery < 1.8\r\n\t\tif ( $.attrFn ) {\r\n\t\t\t$.attrFn[ name ] = true;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\r\n\t\tvar originalType = event.type;\r\n\t\tevent.type = eventType;\r\n\t\tif ( bubble ) {\r\n\t\t\t$.event.trigger( event, undefined, obj );\r\n\t\t} else {\r\n\t\t\t$.event.dispatch.call( obj, event );\r\n\t\t}\r\n\t\tevent.type = originalType;\r\n\t}\r\n\r\n\t// also handles taphold\r\n\r\n\t// Also handles swipeleft, swiperight\r\n\t$.event.special.swipe = {\r\n\r\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\r\n\t\tscrollSupressionThreshold: 30,\r\n\r\n\t\t// More time than this, and it isn't a swipe.\r\n\t\tdurationThreshold: 1000,\r\n\r\n\t\t// Swipe horizontal displacement must be more than this.\r\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\t// Swipe vertical displacement must be less than this.\r\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\tgetLocation: function ( event ) {\r\n\t\t\tvar winPageX = window.pageXOffset,\r\n\t\t\t\twinPageY = window.pageYOffset,\r\n\t\t\t\tx = event.clientX,\r\n\t\t\t\ty = event.clientY;\r\n\r\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\r\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\r\n\r\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\r\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\r\n\t\t\t\tx = x - winPageX;\r\n\t\t\t\ty = y - winPageY;\r\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\r\n\r\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\r\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\r\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\r\n\t\t\t\tx = event.pageX - winPageX;\r\n\t\t\t\ty = event.pageY - winPageY;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tstart: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\r\n\t\t\t\t\t\torigin: $( event.target )\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\tstop: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\r\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\r\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\r\n\r\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\r\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t// This serves as a flag to ensure that at most one swipe event event is\r\n\t\t// in work at any given time\r\n\t\teventInProgress: false,\r\n\r\n\t\tsetup: function() {\r\n\t\t\tvar events,\r\n\t\t\t\tthisObject = this,\r\n\t\t\t\t$this = $( thisObject ),\r\n\t\t\t\tcontext = {};\r\n\r\n\t\t\t// Retrieve the events data for this element and add the swipe context\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( !events ) {\r\n\t\t\t\tevents = { length: 0 };\r\n\t\t\t\t$.data( this, \"mobile-events\", events );\r\n\t\t\t}\r\n\t\t\tevents.length++;\r\n\t\t\tevents.swipe = context;\r\n\r\n\t\t\tcontext.start = function( event ) {\r\n\r\n\t\t\t\t// Bail if we're already working on a swipe event\r\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\r\n\r\n\t\t\t\tvar stop,\r\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\r\n\t\t\t\t\torigTarget = event.target,\r\n\t\t\t\t\temitted = false;\r\n\r\n\t\t\t\tcontext.move = function( event ) {\r\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\r\n\t\t\t\t\tif ( !emitted ) {\r\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\r\n\t\t\t\t\t\tif ( emitted ) {\r\n\r\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// prevent scrolling\r\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcontext.stop = function() {\r\n\t\t\t\t\t\temitted = true;\r\n\r\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t\t\tcontext.move = null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$document.on( touchMoveEvent, context.move )\r\n\t\t\t\t\t.one( touchStopEvent, context.stop );\r\n\t\t\t};\r\n\t\t\t$this.on( touchStartEvent, context.start );\r\n\t\t},\r\n\r\n\t\tteardown: function() {\r\n\t\t\tvar events, context;\r\n\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( events ) {\r\n\t\t\t\tcontext = events.swipe;\r\n\t\t\t\tdelete events.swipe;\r\n\t\t\t\tevents.length--;\r\n\t\t\t\tif ( events.length === 0 ) {\r\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( context ) {\r\n\t\t\t\tif ( context.start ) {\r\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.move ) {\r\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.stop ) {\r\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t$.each({\r\n\t\tswipeleft: \"swipe.left\",\r\n\t\tswiperight: \"swipe.right\"\r\n\t}, function( event, sourceEvent ) {\r\n\r\n\t\t$.event.special[ event ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\t$( this ).unbind( sourceEvent );\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n})( jQuery, this );\r\n*/\n'use strict';\n\n!function ($) {\n\n  var MutationObserver = function () {\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n    for (var i = 0; i < prefixes.length; i++) {\n      if (prefixes[i] + 'MutationObserver' in window) {\n        return window[prefixes[i] + 'MutationObserver'];\n      }\n    }\n    return false;\n  }();\n\n  var triggers = function (el, type) {\n    el.data(type).split(' ').forEach(function (id) {\n      $('#' + id)[type === 'close' ? 'trigger' : 'triggerHandler'](type + '.zf.trigger', [el]);\n    });\n  };\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-open]', function () {\n    triggers($(this), 'open');\n  });\n\n  // Elements with [data-close] will close a plugin that supports it when clicked.\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n  $(document).on('click.zf.trigger', '[data-close]', function () {\n    var id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    } else {\n      $(this).trigger('close.zf.trigger');\n    }\n  });\n\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-toggle]', function () {\n    var id = $(this).data('toggle');\n    if (id) {\n      triggers($(this), 'toggle');\n    } else {\n      $(this).trigger('toggle.zf.trigger');\n    }\n  });\n\n  // Elements with [data-closable] will respond to close.zf.trigger events.\n  $(document).on('close.zf.trigger', '[data-closable]', function (e) {\n    e.stopPropagation();\n    var animation = $(this).data('closable');\n\n    if (animation !== '') {\n      Foundation.Motion.animateOut($(this), animation, function () {\n        $(this).trigger('closed.zf');\n      });\n    } else {\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  });\n\n  $(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function () {\n    var id = $(this).data('toggle-focus');\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\n  });\n\n  /**\r\n  * Fires once after all other scripts have loaded\r\n  * @function\r\n  * @private\r\n  */\n  $(window).on('load', function () {\n    checkListeners();\n  });\n\n  function checkListeners() {\n    eventsListener();\n    resizeListener();\n    scrollListener();\n    closemeListener();\n  }\n\n  //******** only fires this function once on load, if there's something to watch ********\n  function closemeListener(pluginName) {\n    var yetiBoxes = $('[data-yeti-box]'),\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n    if (pluginName) {\n      if (typeof pluginName === 'string') {\n        plugNames.push(pluginName);\n      } else if (typeof pluginName === 'object' && typeof pluginName[0] === 'string') {\n        plugNames.concat(pluginName);\n      } else {\n        console.error('Plugin names must be strings');\n      }\n    }\n    if (yetiBoxes.length) {\n      var listeners = plugNames.map(function (name) {\n        return 'closeme.zf.' + name;\n      }).join(' ');\n\n      $(window).off(listeners).on(listeners, function (e, pluginId) {\n        var plugin = e.namespace.split('.')[0];\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\n\n        plugins.each(function () {\n          var _this = $(this);\n\n          _this.triggerHandler('close.zf.trigger', [_this]);\n        });\n      });\n    }\n  }\n\n  function resizeListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-resize]');\n    if ($nodes.length) {\n      $(window).off('resize.zf.trigger').on('resize.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('resizeme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a resize event\n          $nodes.attr('data-events', \"resize\");\n        }, debounce || 10); //default time to emit resize event\n      });\n    }\n  }\n\n  function scrollListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-scroll]');\n    if ($nodes.length) {\n      $(window).off('scroll.zf.trigger').on('scroll.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('scrollme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a scroll event\n          $nodes.attr('data-events', \"scroll\");\n        }, debounce || 10); //default time to emit scroll event\n      });\n    }\n  }\n\n  function eventsListener() {\n    if (!MutationObserver) {\n      return false;\n    }\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n    //element callback\n    var listeningElementsMutation = function (mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n\n      //trigger the event handler for the element depending on type\n      switch (mutationRecordsList[0].type) {\n\n        case \"attributes\":\n          if ($target.attr(\"data-events\") === \"scroll\" && mutationRecordsList[0].attributeName === \"data-events\") {\n            $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n          }\n          if ($target.attr(\"data-events\") === \"resize\" && mutationRecordsList[0].attributeName === \"data-events\") {\n            $target.triggerHandler('resizeme.zf.trigger', [$target]);\n          }\n          if (mutationRecordsList[0].attributeName === \"style\") {\n            $target.closest(\"[data-mutate]\").attr(\"data-events\", \"mutate\");\n            $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n          }\n          break;\n\n        case \"childList\":\n          $target.closest(\"[data-mutate]\").attr(\"data-events\", \"mutate\");\n          $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n          break;\n\n        default:\n          return false;\n        //nothing\n      }\n    };\n\n    if (nodes.length) {\n      //for each element that needs to listen for resizing, scrolling, or mutation add a single observer\n      for (var i = 0; i <= nodes.length - 1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: true, characterData: false, subtree: true, attributeFilter: [\"data-events\", \"style\"] });\n      }\n    }\n  }\n\n  // ------------------------------------\n\n  // [PH]\n  // Foundation.CheckWatchers = checkWatchers;\n  Foundation.IHearYou = checkListeners;\n  // Foundation.ISeeYou = scrollListener;\n  // Foundation.IFeelYou = closemeListener;\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Abide module.\r\n   * @module foundation.abide\r\n   */\n\n  var Abide = function () {\n    /**\r\n     * Creates a new instance of Abide.\r\n     * @class\r\n     * @fires Abide#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Abide(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Abide);\n\n      this.$element = element;\n      this.options = $.extend({}, Abide.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Abide');\n    }\n\n    /**\r\n     * Initializes the Abide plugin and calls functions to get Abide functioning on load.\r\n     * @private\r\n     */\n\n\n    _createClass(Abide, [{\n      key: '_init',\n      value: function _init() {\n        this.$inputs = this.$element.find('input, textarea, select');\n\n        this._events();\n      }\n\n      /**\r\n       * Initializes events for Abide.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        this.$element.off('.abide').on('reset.zf.abide', function () {\n          _this2.resetForm();\n        }).on('submit.zf.abide', function () {\n          return _this2.validateForm();\n        });\n\n        if (this.options.validateOn === 'fieldChange') {\n          this.$inputs.off('change.zf.abide').on('change.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n\n        if (this.options.liveValidate) {\n          this.$inputs.off('input.zf.abide').on('input.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n\n        if (this.options.validateOnBlur) {\n          this.$inputs.off('blur.zf.abide').on('blur.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n      }\n\n      /**\r\n       * Calls necessary functions to update Abide upon DOM change\r\n       * @private\r\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        this._init();\n      }\n\n      /**\r\n       * Checks whether or not a form element has the required attribute and if it's checked or not\r\n       * @param {Object} element - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */\n\n    }, {\n      key: 'requiredCheck',\n      value: function requiredCheck($el) {\n        if (!$el.attr('required')) return true;\n\n        var isGood = true;\n\n        switch ($el[0].type) {\n          case 'checkbox':\n            isGood = $el[0].checked;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            var opt = $el.find('option:selected');\n            if (!opt.length || !opt.val()) isGood = false;\n            break;\n\n          default:\n            if (!$el.val() || !$el.val().length) isGood = false;\n        }\n\n        return isGood;\n      }\n\n      /**\r\n       * Get:\r\n       * - Based on $el, the first element(s) corresponding to `formErrorSelector` in this order:\r\n       *   1. The element's direct sibling('s).\r\n       *   2. The element's parent's children.\r\n       * - Element(s) with the attribute `[data-form-error-for]` set with the element's id.\r\n       *\r\n       * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\r\n       *\r\n       * @param {Object} $el - jQuery object to use as reference to find the form error selector.\r\n       * @returns {Object} jQuery object with the selector.\r\n       */\n\n    }, {\n      key: 'findFormError',\n      value: function findFormError($el) {\n        var id = $el[0].id;\n        var $error = $el.siblings(this.options.formErrorSelector);\n\n        if (!$error.length) {\n          $error = $el.parent().find(this.options.formErrorSelector);\n        }\n\n        $error = $error.add(this.$element.find('[data-form-error-for=\"' + id + '\"]'));\n\n        return $error;\n      }\n\n      /**\r\n       * Get the first element in this order:\r\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n       * 3. The `.closest()` <label>\r\n       *\r\n       * @param {Object} $el - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */\n\n    }, {\n      key: 'findLabel',\n      value: function findLabel($el) {\n        var id = $el[0].id;\n        var $label = this.$element.find('label[for=\"' + id + '\"]');\n\n        if (!$label.length) {\n          return $el.closest('label');\n        }\n\n        return $label;\n      }\n\n      /**\r\n       * Get the set of labels associated with a set of radio els in this order\r\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n       * 3. The `.closest()` <label>\r\n       *\r\n       * @param {Object} $el - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */\n\n    }, {\n      key: 'findRadioLabels',\n      value: function findRadioLabels($els) {\n        var _this3 = this;\n\n        var labels = $els.map(function (i, el) {\n          var id = el.id;\n          var $label = _this3.$element.find('label[for=\"' + id + '\"]');\n\n          if (!$label.length) {\n            $label = $(el).closest('label');\n          }\n          return $label[0];\n        });\n\n        return $(labels);\n      }\n\n      /**\r\n       * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\r\n       * @param {Object} $el - jQuery object to add the class to\r\n       */\n\n    }, {\n      key: 'addErrorClasses',\n      value: function addErrorClasses($el) {\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.addClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.addClass(this.options.formErrorClass);\n        }\n\n        $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\n      }\n\n      /**\r\n       * Remove CSS error classes etc from an entire radio button group\r\n       * @param {String} groupName - A string that specifies the name of a radio button group\r\n       *\r\n       */\n\n    }, {\n      key: 'removeRadioErrorClasses',\n      value: function removeRadioErrorClasses(groupName) {\n        var $els = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var $labels = this.findRadioLabels($els);\n        var $formErrors = this.findFormError($els);\n\n        if ($labels.length) {\n          $labels.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formErrors.length) {\n          $formErrors.removeClass(this.options.formErrorClass);\n        }\n\n        $els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\r\n       * Removes CSS error class as specified by the Abide settings from the label, input, and the form\r\n       * @param {Object} $el - jQuery object to remove the class from\r\n       */\n\n    }, {\n      key: 'removeErrorClasses',\n      value: function removeErrorClasses($el) {\n        // radios need to clear all of the els\n        if ($el[0].type == 'radio') {\n          return this.removeRadioErrorClasses($el.attr('name'));\n        }\n\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.removeClass(this.options.formErrorClass);\n        }\n\n        $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\r\n       * Goes through a form to find inputs and proceeds to validate them in ways specific to their type. \r\n       * Ignores inputs with data-abide-ignore, type=\"hidden\" or disabled attributes set\r\n       * @fires Abide#invalid\r\n       * @fires Abide#valid\r\n       * @param {Object} element - jQuery object to validate, should be an HTML input\r\n       * @returns {Boolean} goodToGo - If the input is valid or not.\r\n       */\n\n    }, {\n      key: 'validateInput',\n      value: function validateInput($el) {\n        var _this4 = this;\n\n        var clearRequire = this.requiredCheck($el),\n            validated = false,\n            customValidator = true,\n            validator = $el.attr('data-validator'),\n            equalTo = true;\n\n        // don't validate ignored inputs or hidden inputs or disabled inputs\n        if ($el.is('[data-abide-ignore]') || $el.is('[type=\"hidden\"]') || $el.is('[disabled]')) {\n          return true;\n        }\n\n        switch ($el[0].type) {\n          case 'radio':\n            validated = this.validateRadio($el.attr('name'));\n            break;\n\n          case 'checkbox':\n            validated = clearRequire;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            validated = clearRequire;\n            break;\n\n          default:\n            validated = this.validateText($el);\n        }\n\n        if (validator) {\n          customValidator = this.matchValidation($el, validator, $el.attr('required'));\n        }\n\n        if ($el.attr('data-equalto')) {\n          equalTo = this.options.validators.equalTo($el);\n        }\n\n        var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\n        var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\n\n        if (goodToGo) {\n          // Re-validate inputs that depend on this one with equalto\n          var dependentElements = this.$element.find('[data-equalto=\"' + $el.attr('id') + '\"]');\n          if (dependentElements.length) {\n            (function () {\n              var _this = _this4;\n              dependentElements.each(function () {\n                if ($(this).val()) {\n                  _this.validateInput($(this));\n                }\n              });\n            })();\n          }\n        }\n\n        this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\n\n        /**\r\n         * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\r\n         * Trigger includes the DOM element of the input.\r\n         * @event Abide#valid\r\n         * @event Abide#invalid\r\n         */\n        $el.trigger(message, [$el]);\n\n        return goodToGo;\n      }\n\n      /**\r\n       * Goes through a form and if there are any invalid inputs, it will display the form error element\r\n       * @returns {Boolean} noError - true if no errors were detected...\r\n       * @fires Abide#formvalid\r\n       * @fires Abide#forminvalid\r\n       */\n\n    }, {\n      key: 'validateForm',\n      value: function validateForm() {\n        var acc = [];\n        var _this = this;\n\n        this.$inputs.each(function () {\n          acc.push(_this.validateInput($(this)));\n        });\n\n        var noError = acc.indexOf(false) === -1;\n\n        this.$element.find('[data-abide-error]').css('display', noError ? 'none' : 'block');\n\n        /**\r\n         * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\r\n         * Trigger includes the element of the form.\r\n         * @event Abide#formvalid\r\n         * @event Abide#forminvalid\r\n         */\n        this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\n\n        return noError;\n      }\n\n      /**\r\n       * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\r\n       * @param {Object} $el - jQuery object to validate, should be a text input HTML element\r\n       * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\r\n       * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\r\n       */\n\n    }, {\n      key: 'validateText',\n      value: function validateText($el, pattern) {\n        // A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute\n        pattern = pattern || $el.attr('pattern') || $el.attr('type');\n        var inputText = $el.val();\n        var valid = false;\n\n        if (inputText.length) {\n          // If the pattern attribute on the element is in Abide's list of patterns, then test that regexp\n          if (this.options.patterns.hasOwnProperty(pattern)) {\n            valid = this.options.patterns[pattern].test(inputText);\n          }\n          // If the pattern name isn't also the type attribute of the field, then test it as a regexp\n          else if (pattern !== $el.attr('type')) {\n              valid = new RegExp(pattern).test(inputText);\n            } else {\n              valid = true;\n            }\n        }\n        // An empty field is valid if it's not required\n        else if (!$el.prop('required')) {\n            valid = true;\n          }\n\n        return valid;\n      }\n\n      /**\r\n       * Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\r\n       * @param {String} groupName - A string that specifies the name of a radio button group\r\n       * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\r\n       */\n\n    }, {\n      key: 'validateRadio',\n      value: function validateRadio(groupName) {\n        // If at least one radio in the group has the `required` attribute, the group is considered required\n        // Per W3C spec, all radio buttons in a group should have `required`, but we're being nice\n        var $group = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var valid = false,\n            required = false;\n\n        // For the group to be required, at least one radio needs to be required\n        $group.each(function (i, e) {\n          if ($(e).attr('required')) {\n            required = true;\n          }\n        });\n        if (!required) valid = true;\n\n        if (!valid) {\n          // For the group to be valid, at least one radio needs to be checked\n          $group.each(function (i, e) {\n            if ($(e).prop('checked')) {\n              valid = true;\n            }\n          });\n        };\n\n        return valid;\n      }\n\n      /**\r\n       * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\r\n       * @param {Object} $el - jQuery input element.\r\n       * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\r\n       * @param {Boolean} required - self explanatory?\r\n       * @returns {Boolean} - true if validations passed.\r\n       */\n\n    }, {\n      key: 'matchValidation',\n      value: function matchValidation($el, validators, required) {\n        var _this5 = this;\n\n        required = required ? true : false;\n\n        var clear = validators.split(' ').map(function (v) {\n          return _this5.options.validators[v]($el, required, $el.parent());\n        });\n        return clear.indexOf(false) === -1;\n      }\n\n      /**\r\n       * Resets form inputs and styles\r\n       * @fires Abide#formreset\r\n       */\n\n    }, {\n      key: 'resetForm',\n      value: function resetForm() {\n        var $form = this.$element,\n            opts = this.options;\n\n        $('.' + opts.labelErrorClass, $form).not('small').removeClass(opts.labelErrorClass);\n        $('.' + opts.inputErrorClass, $form).not('small').removeClass(opts.inputErrorClass);\n        $(opts.formErrorSelector + '.' + opts.formErrorClass).removeClass(opts.formErrorClass);\n        $form.find('[data-abide-error]').css('display', 'none');\n        $(':input', $form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');\n        $(':input:radio', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        $(':input:checkbox', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        /**\r\n         * Fires when the form has been reset.\r\n         * @event Abide#formreset\r\n         */\n        $form.trigger('formreset.zf.abide', [$form]);\n      }\n\n      /**\r\n       * Destroys an instance of Abide.\r\n       * Removes error styles and classes from elements, without resetting their values.\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var _this = this;\n        this.$element.off('.abide').find('[data-abide-error]').css('display', 'none');\n\n        this.$inputs.off('.abide').each(function () {\n          _this.removeErrorClasses($(this));\n        });\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Abide;\n  }();\n\n  /**\r\n   * Default settings for plugin\r\n   */\n\n\n  Abide.defaults = {\n    /**\r\n     * The default event to validate inputs. Checkboxes and radios validate immediately.\r\n     * Remove or change this value for manual validation.\r\n     * @option\r\n     * @type {?string}\r\n     * @default 'fieldChange'\r\n     */\n    validateOn: 'fieldChange',\n\n    /**\r\n     * Class to be applied to input labels on failed validation.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'is-invalid-label'\r\n     */\n    labelErrorClass: 'is-invalid-label',\n\n    /**\r\n     * Class to be applied to inputs on failed validation.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'is-invalid-input'\r\n     */\n    inputErrorClass: 'is-invalid-input',\n\n    /**\r\n     * Class selector to use to target Form Errors for show/hide.\r\n     * @option\r\n     * @type {string}\r\n     * @default '.form-error'\r\n     */\n    formErrorSelector: '.form-error',\n\n    /**\r\n     * Class added to Form Errors on failed validation.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'is-visible'\r\n     */\n    formErrorClass: 'is-visible',\n\n    /**\r\n     * Set to true to validate text inputs on any value change.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    liveValidate: false,\n\n    /**\r\n     * Set to true to validate inputs on blur.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    validateOnBlur: false,\n\n    patterns: {\n      alpha: /^[a-zA-Z]+$/,\n      alpha_numeric: /^[a-zA-Z0-9]+$/,\n      integer: /^[-+]?\\d+$/,\n      number: /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\n\n      // amex, visa, diners\n      card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n      cvv: /^([0-9]){3,4}$/,\n\n      // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n      email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\n\n      url: /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\n      // abc.de\n      domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\n\n      datetime: /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\n      // YYYY-MM-DD\n      date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\n      // HH:MM:SS\n      time: /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\n      dateISO: /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\n      // MM/DD/YYYY\n      month_day_year: /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\n      // DD/MM/YYYY\n      day_month_year: /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\n\n      // #FFF or #FFFFFF\n      color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n    },\n\n    /**\r\n     * Optional validation functions to be used. `equalTo` being the only default included function.\r\n     * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\r\n     * el : The jQuery element to validate.\r\n     * required : Boolean value of the required attribute be present or not.\r\n     * parent : The direct parent of the input.\r\n     * @option\r\n     */\n    validators: {\n      equalTo: function (el, required, parent) {\n        return $('#' + el.attr('data-equalto')).val() === el.val();\n      }\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(Abide, 'Abide');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Accordion module.\r\n   * @module foundation.accordion\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   */\n\n  var Accordion = function () {\n    /**\r\n     * Creates a new instance of an accordion.\r\n     * @class\r\n     * @fires Accordion#init\r\n     * @param {jQuery} element - jQuery object to make into an accordion.\r\n     * @param {Object} options - a plain object with settings to override the default options.\r\n     */\n\n    function Accordion(element, options) {\n      _classCallCheck(this, Accordion);\n\n      this.$element = element;\n      this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Accordion');\n      Foundation.Keyboard.register('Accordion', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_DOWN': 'next',\n        'ARROW_UP': 'previous'\n      });\n    }\n\n    /**\r\n     * Initializes the accordion by animating the preset active pane(s).\r\n     * @private\r\n     */\n\n\n    _createClass(Accordion, [{\n      key: '_init',\n      value: function _init() {\n        var _this2 = this;\n\n        this.$element.attr('role', 'tablist');\n        this.$tabs = this.$element.children('[data-accordion-item]');\n\n        this.$tabs.each(function (idx, el) {\n          var $el = $(el),\n              $content = $el.children('[data-tab-content]'),\n              id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n              linkId = el.id || id + '-label';\n\n          $el.find('a:first').attr({\n            'aria-controls': id,\n            'role': 'tab',\n            'id': linkId,\n            'aria-expanded': false,\n            'aria-selected': false\n          });\n\n          $content.attr({ 'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id });\n        });\n        var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n        this.firstTimeInit = true;\n        if ($initActive.length) {\n          this.down($initActive, this.firstTimeInit);\n          this.firstTimeInit = false;\n        }\n\n        this._checkDeepLink = function () {\n          var anchor = window.location.hash;\n          //need a hash and a relevant anchor in this tabset\n          if (anchor.length) {\n            var $link = _this2.$element.find('[href$=\"' + anchor + '\"]'),\n                $anchor = $(anchor);\n\n            if ($link.length && $anchor) {\n              if (!$link.parent('[data-accordion-item]').hasClass('is-active')) {\n                _this2.down($anchor, _this2.firstTimeInit);\n                _this2.firstTimeInit = false;\n              };\n\n              //roll up a little to show the titles\n              if (_this2.options.deepLinkSmudge) {\n                var _this = _this2;\n                $(window).load(function () {\n                  var offset = _this.$element.offset();\n                  $('html, body').animate({ scrollTop: offset.top }, _this.options.deepLinkSmudgeDelay);\n                });\n              }\n\n              /**\r\n                * Fires when the zplugin has deeplinked at pageload\r\n                * @event Accordion#deeplink\r\n                */\n              _this2.$element.trigger('deeplink.zf.accordion', [$link, $anchor]);\n            }\n          }\n        };\n\n        //use browser to open a tab, if it exists in this tabset\n        if (this.options.deepLink) {\n          this._checkDeepLink();\n        }\n\n        this._events();\n      }\n\n      /**\r\n       * Adds event handlers for items within the accordion.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$tabs.each(function () {\n          var $elem = $(this);\n          var $tabContent = $elem.children('[data-tab-content]');\n          if ($tabContent.length) {\n            $elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion', function (e) {\n              e.preventDefault();\n              _this.toggle($tabContent);\n            }).on('keydown.zf.accordion', function (e) {\n              Foundation.Keyboard.handleKey(e, 'Accordion', {\n                toggle: function () {\n                  _this.toggle($tabContent);\n                },\n                next: function () {\n                  var $a = $elem.next().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                previous: function () {\n                  var $a = $elem.prev().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                handled: function () {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n              });\n            });\n          }\n        });\n        if (this.options.deepLink) {\n          $(window).on('popstate', this._checkDeepLink);\n        }\n      }\n\n      /**\r\n       * Toggles the selected content pane's open/close state.\r\n       * @param {jQuery} $target - jQuery object of the pane to toggle (`.accordion-content`).\r\n       * @function\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if ($target.parent().hasClass('is-active')) {\n          this.up($target);\n        } else {\n          this.down($target);\n        }\n        //either replace or update browser history\n        if (this.options.deepLink) {\n          var anchor = $target.prev('a').attr('href');\n\n          if (this.options.updateHistory) {\n            history.pushState({}, '', anchor);\n          } else {\n            history.replaceState({}, '', anchor);\n          }\n        }\n      }\n\n      /**\r\n       * Opens the accordion tab defined by `$target`.\r\n       * @param {jQuery} $target - Accordion pane to open (`.accordion-content`).\r\n       * @param {Boolean} firstTime - flag to determine if reflow should happen.\r\n       * @fires Accordion#down\r\n       * @function\r\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target, firstTime) {\n        var _this3 = this;\n\n        $target.attr('aria-hidden', false).parent('[data-tab-content]').addBack().parent().addClass('is-active');\n\n        if (!this.options.multiExpand && !firstTime) {\n          var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\n          if ($currentActive.length) {\n            this.up($currentActive.not($target));\n          }\n        }\n\n        $target.slideDown(this.options.slideSpeed, function () {\n          /**\r\n           * Fires when the tab is done opening.\r\n           * @event Accordion#down\r\n           */\n          _this3.$element.trigger('down.zf.accordion', [$target]);\n        });\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': true,\n          'aria-selected': true\n        });\n      }\n\n      /**\r\n       * Closes the tab defined by `$target`.\r\n       * @param {jQuery} $target - Accordion tab to close (`.accordion-content`).\r\n       * @fires Accordion#up\r\n       * @function\r\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var $aunts = $target.parent().siblings(),\n            _this = this;\n\n        if (!this.options.allowAllClosed && !$aunts.hasClass('is-active') || !$target.parent().hasClass('is-active')) {\n          return;\n        }\n\n        // Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\r\n           * Fires when the tab is done collapsing up.\r\n           * @event Accordion#up\r\n           */\n          _this.$element.trigger('up.zf.accordion', [$target]);\n        });\n        // });\n\n        $target.attr('aria-hidden', true).parent().removeClass('is-active');\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': false,\n          'aria-selected': false\n        });\n      }\n\n      /**\r\n       * Destroys an instance of an accordion.\r\n       * @fires Accordion#destroyed\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\n        this.$element.find('a').off('.zf.accordion');\n        if (this.options.deepLink) {\n          $(window).off('popstate', this._checkDeepLink);\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Accordion;\n  }();\n\n  Accordion.defaults = {\n    /**\r\n     * Amount of time to animate the opening of an accordion pane.\r\n     * @option\r\n     * @type {number}\r\n     * @default 250\r\n     */\n    slideSpeed: 250,\n    /**\r\n     * Allow the accordion to have multiple open panes.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    multiExpand: false,\n    /**\r\n     * Allow the accordion to close all panes.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    allowAllClosed: false,\n    /**\r\n     * Allows the window to scroll to content of pane specified by hash anchor\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    deepLink: false,\n\n    /**\r\n     * Adjust the deep link scroll to make sure the top of the accordion panel is visible\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    deepLinkSmudge: false,\n\n    /**\r\n     * Animation time (ms) for the deep link adjustment\r\n     * @option\r\n     * @type {number}\r\n     * @default 300\r\n     */\n    deepLinkSmudgeDelay: 300,\n\n    /**\r\n     * Update the browser history with the open accordion\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    updateHistory: false\n  };\n\n  // Window exports\n  Foundation.plugin(Accordion, 'Accordion');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * AccordionMenu module.\r\n   * @module foundation.accordionMenu\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.nest\r\n   */\n\n  var AccordionMenu = function () {\n    /**\r\n     * Creates a new instance of an accordion menu.\r\n     * @class\r\n     * @fires AccordionMenu#init\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function AccordionMenu(element, options) {\n      _classCallCheck(this, AccordionMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'accordion');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'AccordionMenu');\n      Foundation.Keyboard.register('AccordionMenu', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_RIGHT': 'open',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'close',\n        'ESCAPE': 'closeAll'\n      });\n    }\n\n    /**\r\n     * Initializes the accordion menu by hiding all nested menus.\r\n     * @private\r\n     */\n\n\n    _createClass(AccordionMenu, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.find('[data-submenu]').not('.is-active').slideUp(0); //.find('a').css('padding-left', '1rem');\n        this.$element.attr({\n          'role': 'menu',\n          'aria-multiselectable': this.options.multiOpen\n        });\n\n        this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\n        this.$menuLinks.each(function () {\n          var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\n              $elem = $(this),\n              $sub = $elem.children('[data-submenu]'),\n              subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\n              isActive = $sub.hasClass('is-active');\n          $elem.attr({\n            'aria-controls': subId,\n            'aria-expanded': isActive,\n            'role': 'menuitem',\n            'id': linkId\n          });\n          $sub.attr({\n            'aria-labelledby': linkId,\n            'aria-hidden': !isActive,\n            'role': 'menu',\n            'id': subId\n          });\n        });\n        var initPanes = this.$element.find('.is-active');\n        if (initPanes.length) {\n          var _this = this;\n          initPanes.each(function () {\n            _this.down($(this));\n          });\n        }\n        this._events();\n      }\n\n      /**\r\n       * Adds event handlers for items within the menu.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$element.find('li').each(function () {\n          var $submenu = $(this).children('[data-submenu]');\n\n          if ($submenu.length) {\n            $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function (e) {\n              e.preventDefault();\n\n              _this.toggle($submenu);\n            });\n          }\n        }).on('keydown.zf.accordionmenu', function (e) {\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement,\n              $target = $element.children('[data-submenu]');\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1)).find('a').first();\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1)).find('a').first();\n\n              if ($(this).children('[data-submenu]:visible').length) {\n                // has open sub menu\n                $nextElement = $element.find('li:first-child').find('a').first();\n              }\n              if ($(this).is(':first-child')) {\n                // is first element of sub menu\n                $prevElement = $element.parents('li').first().find('a').first();\n              } else if ($prevElement.parents('li').first().children('[data-submenu]:visible').length) {\n                // if previous element has open sub menu\n                $prevElement = $prevElement.parents('li').find('li:last-child').find('a').first();\n              }\n              if ($(this).is(':last-child')) {\n                // is last element of sub menu\n                $nextElement = $element.parents('li').first().next('li').find('a').first();\n              }\n\n              return;\n            }\n          });\n\n          Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\n            open: function () {\n              if ($target.is(':hidden')) {\n                _this.down($target);\n                $target.find('li').first().find('a').first().focus();\n              }\n            },\n            close: function () {\n              if ($target.length && !$target.is(':hidden')) {\n                // close active sub of this item\n                _this.up($target);\n              } else if ($element.parent('[data-submenu]').length) {\n                // close currently open sub\n                _this.up($element.parent('[data-submenu]'));\n                $element.parents('li').first().find('a').first().focus();\n              }\n            },\n            up: function () {\n              $prevElement.focus();\n              return true;\n            },\n            down: function () {\n              $nextElement.focus();\n              return true;\n            },\n            toggle: function () {\n              if ($element.children('[data-submenu]').length) {\n                _this.toggle($element.children('[data-submenu]'));\n              }\n            },\n            closeAll: function () {\n              _this.hideAll();\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n              e.stopImmediatePropagation();\n            }\n          });\n        }); //.attr('tabindex', 0);\n      }\n\n      /**\r\n       * Closes all panes of the menu.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'hideAll',\n      value: function hideAll() {\n        this.up(this.$element.find('[data-submenu]'));\n      }\n\n      /**\r\n       * Opens all panes of the menu.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'showAll',\n      value: function showAll() {\n        this.down(this.$element.find('[data-submenu]'));\n      }\n\n      /**\r\n       * Toggles the open/close state of a submenu.\r\n       * @function\r\n       * @param {jQuery} $target - the submenu to toggle\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if (!$target.is(':animated')) {\n          if (!$target.is(':hidden')) {\n            this.up($target);\n          } else {\n            this.down($target);\n          }\n        }\n      }\n\n      /**\r\n       * Opens the sub-menu defined by `$target`.\r\n       * @param {jQuery} $target - Sub-menu to open.\r\n       * @fires AccordionMenu#down\r\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target) {\n        var _this = this;\n\n        if (!this.options.multiOpen) {\n          this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\n        }\n\n        $target.addClass('is-active').attr({ 'aria-hidden': false }).parent('.is-accordion-submenu-parent').attr({ 'aria-expanded': true });\n\n        //Foundation.Move(this.options.slideSpeed, $target, function() {\n        $target.slideDown(_this.options.slideSpeed, function () {\n          /**\r\n           * Fires when the menu is done opening.\r\n           * @event AccordionMenu#down\r\n           */\n          _this.$element.trigger('down.zf.accordionMenu', [$target]);\n        });\n        //});\n      }\n\n      /**\r\n       * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\r\n       * @param {jQuery} $target - Sub-menu to close.\r\n       * @fires AccordionMenu#up\r\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var _this = this;\n        //Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\r\n           * Fires when the menu is done collapsing up.\r\n           * @event AccordionMenu#up\r\n           */\n          _this.$element.trigger('up.zf.accordionMenu', [$target]);\n        });\n        //});\n\n        var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\n\n        $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\n      }\n\n      /**\r\n       * Destroys an instance of accordion menu.\r\n       * @fires AccordionMenu#destroyed\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-submenu]').slideDown(0).css('display', '');\n        this.$element.find('a').off('click.zf.accordionMenu');\n\n        Foundation.Nest.Burn(this.$element, 'accordion');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return AccordionMenu;\n  }();\n\n  AccordionMenu.defaults = {\n    /**\r\n     * Amount of time to animate the opening of a submenu in ms.\r\n     * @option\r\n     * @type {number}\r\n     * @default 250\r\n     */\n    slideSpeed: 250,\n    /**\r\n     * Allow the menu to have multiple open panes.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    multiOpen: true\n  };\n\n  // Window exports\n  Foundation.plugin(AccordionMenu, 'AccordionMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Drilldown module.\r\n   * @module foundation.drilldown\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.nest\r\n   */\n\n  var Drilldown = function () {\n    /**\r\n     * Creates a new instance of a drilldown menu.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Drilldown(element, options) {\n      _classCallCheck(this, Drilldown);\n\n      this.$element = element;\n      this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'drilldown');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Drilldown');\n      Foundation.Keyboard.register('Drilldown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close',\n        'TAB': 'down',\n        'SHIFT_TAB': 'up'\n      });\n    }\n\n    /**\r\n     * Initializes the drilldown by creating jQuery collections of elements\r\n     * @private\r\n     */\n\n\n    _createClass(Drilldown, [{\n      key: '_init',\n      value: function _init() {\n        this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent').children('a');\n        this.$submenus = this.$submenuAnchors.parent('li').children('[data-submenu]');\n        this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem').find('a');\n        this.$element.attr('data-mutate', this.$element.attr('data-drilldown') || Foundation.GetYoDigits(6, 'drilldown'));\n\n        this._prepareMenu();\n        this._registerEvents();\n\n        this._keyboardEvents();\n      }\n\n      /**\r\n       * prepares drilldown menu by setting attributes to links and elements\r\n       * sets a min height to prevent content jumping\r\n       * wraps the element if not already wrapped\r\n       * @private\r\n       * @function\r\n       */\n\n    }, {\n      key: '_prepareMenu',\n      value: function _prepareMenu() {\n        var _this = this;\n        // if(!this.options.holdOpen){\n        //   this._menuLinkEvents();\n        // }\n        this.$submenuAnchors.each(function () {\n          var $link = $(this);\n          var $sub = $link.parent();\n          if (_this.options.parentLink) {\n            $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\n          }\n          $link.data('savedHref', $link.attr('href')).removeAttr('href').attr('tabindex', 0);\n          $link.children('[data-submenu]').attr({\n            'aria-hidden': true,\n            'tabindex': 0,\n            'role': 'menu'\n          });\n          _this._events($link);\n        });\n        this.$submenus.each(function () {\n          var $menu = $(this),\n              $back = $menu.find('.js-drilldown-back');\n          if (!$back.length) {\n            switch (_this.options.backButtonPosition) {\n              case \"bottom\":\n                $menu.append(_this.options.backButton);\n                break;\n              case \"top\":\n                $menu.prepend(_this.options.backButton);\n                break;\n              default:\n                console.error(\"Unsupported backButtonPosition value '\" + _this.options.backButtonPosition + \"'\");\n            }\n          }\n          _this._back($menu);\n        });\n\n        this.$submenus.addClass('invisible');\n        if (!this.options.autoHeight) {\n          this.$submenus.addClass('drilldown-submenu-cover-previous');\n        }\n\n        // create a wrapper on element if it doesn't exist.\n        if (!this.$element.parent().hasClass('is-drilldown')) {\n          this.$wrapper = $(this.options.wrapper).addClass('is-drilldown');\n          if (this.options.animateHeight) this.$wrapper.addClass('animate-height');\n          this.$element.wrap(this.$wrapper);\n        }\n        // set wrapper\n        this.$wrapper = this.$element.parent();\n        this.$wrapper.css(this._getMaxDims());\n      }\n    }, {\n      key: '_resize',\n      value: function _resize() {\n        this.$wrapper.css({ 'max-width': 'none', 'min-height': 'none' });\n        // _getMaxDims has side effects (boo) but calling it should update all other necessary heights & widths\n        this.$wrapper.css(this._getMaxDims());\n      }\n\n      /**\r\n       * Adds event handlers to elements in the menu.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $elem - the current menu item to add handlers to.\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events($elem) {\n        var _this = this;\n\n        $elem.off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          if ($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n\n          // if(e.target !== e.currentTarget.firstElementChild){\n          //   return false;\n          // }\n          _this._show($elem.parent('li'));\n\n          if (_this.options.closeOnClick) {\n            var $body = $('body');\n            $body.off('.zf.drilldown').on('click.zf.drilldown', function (e) {\n              if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n                return;\n              }\n              e.preventDefault();\n              _this._hideAll();\n              $body.off('.zf.drilldown');\n            });\n          }\n        });\n        this.$element.on('mutateme.zf.trigger', this._resize.bind(this));\n      }\n\n      /**\r\n       * Adds event handlers to the menu element.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_registerEvents',\n      value: function _registerEvents() {\n        if (this.options.scrollTop) {\n          this._bindHandler = this._scrollTop.bind(this);\n          this.$element.on('open.zf.drilldown hide.zf.drilldown closed.zf.drilldown', this._bindHandler);\n        }\n      }\n\n      /**\r\n       * Scroll to Top of Element or data-scroll-top-element\r\n       * @function\r\n       * @fires Drilldown#scrollme\r\n       */\n\n    }, {\n      key: '_scrollTop',\n      value: function _scrollTop() {\n        var _this = this;\n        var $scrollTopElement = _this.options.scrollTopElement != '' ? $(_this.options.scrollTopElement) : _this.$element,\n            scrollPos = parseInt($scrollTopElement.offset().top + _this.options.scrollTopOffset);\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, _this.options.animationDuration, _this.options.animationEasing, function () {\n          /**\r\n            * Fires after the menu has scrolled\r\n            * @event Drilldown#scrollme\r\n            */\n          if (this === $('html')[0]) _this.$element.trigger('scrollme.zf.drilldown');\n        });\n      }\n\n      /**\r\n       * Adds keydown event listener to `li`'s in the menu.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_keyboardEvents',\n      value: function _keyboardEvents() {\n        var _this = this;\n\n        this.$menuItems.add(this.$element.find('.js-drilldown-back > a, .is-submenu-parent-item > a')).on('keydown.zf.drilldown', function (e) {\n          var $element = $(this),\n              $elements = $element.parent('li').parent('ul').children('li').children('a'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1));\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              return;\n            }\n          });\n\n          Foundation.Keyboard.handleKey(e, 'Drilldown', {\n            next: function () {\n              if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element.parent('li'));\n                $element.parent('li').one(Foundation.transitionend($element), function () {\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n                });\n                return true;\n              }\n            },\n            previous: function () {\n              _this._hide($element.parent('li').parent('ul'));\n              $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\n                setTimeout(function () {\n                  $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n                }, 1);\n              });\n              return true;\n            },\n            up: function () {\n              $prevElement.focus();\n              // Don't tap focus on first element in root ul\n              return !$element.is(_this.$element.find('> li:first-child > a'));\n            },\n            down: function () {\n              $nextElement.focus();\n              // Don't tap focus on last element in root ul\n              return !$element.is(_this.$element.find('> li:last-child > a'));\n            },\n            close: function () {\n              // Don't close on element in root ul\n              if (!$element.is(_this.$element.find('> li > a'))) {\n                _this._hide($element.parent().parent());\n                $element.parent().parent().siblings('a').focus();\n              }\n            },\n            open: function () {\n              if (!$element.is(_this.$menuItems)) {\n                // not menu item means back button\n                _this._hide($element.parent('li').parent('ul'));\n                $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\n                  setTimeout(function () {\n                    $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n                  }, 1);\n                });\n                return true;\n              } else if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element.parent('li'));\n                $element.parent('li').one(Foundation.transitionend($element), function () {\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n                });\n                return true;\n              }\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n              e.stopImmediatePropagation();\n            }\n          });\n        }); // end keyboardAccess\n      }\n\n      /**\r\n       * Closes all open elements, and returns to root menu.\r\n       * @function\r\n       * @fires Drilldown#closed\r\n       */\n\n    }, {\n      key: '_hideAll',\n      value: function _hideAll() {\n        var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\n        if (this.options.autoHeight) this.$wrapper.css({ height: $elem.parent().closest('ul').data('calcHeight') });\n        $elem.one(Foundation.transitionend($elem), function (e) {\n          $elem.removeClass('is-active is-closing');\n        });\n        /**\r\n         * Fires when the menu is fully closed.\r\n         * @event Drilldown#closed\r\n         */\n        this.$element.trigger('closed.zf.drilldown');\n      }\n\n      /**\r\n       * Adds event listener for each `back` button, and closes open menus.\r\n       * @function\r\n       * @fires Drilldown#back\r\n       * @param {jQuery} $elem - the current sub-menu to add `back` event.\r\n       */\n\n    }, {\n      key: '_back',\n      value: function _back($elem) {\n        var _this = this;\n        $elem.off('click.zf.drilldown');\n        $elem.children('.js-drilldown-back').on('click.zf.drilldown', function (e) {\n          e.stopImmediatePropagation();\n          // console.log('mouseup on back');\n          _this._hide($elem);\n\n          // If there is a parent submenu, call show\n          var parentSubMenu = $elem.parent('li').parent('ul').parent('li');\n          if (parentSubMenu.length) {\n            _this._show(parentSubMenu);\n          }\n        });\n      }\n\n      /**\r\n       * Adds event listener to menu items w/o submenus to close open menus on click.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_menuLinkEvents',\n      value: function _menuLinkEvents() {\n        var _this = this;\n        this.$menuItems.not('.is-drilldown-submenu-parent').off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          // e.stopImmediatePropagation();\n          setTimeout(function () {\n            _this._hideAll();\n          }, 0);\n        });\n      }\n\n      /**\r\n       * Opens a submenu.\r\n       * @function\r\n       * @fires Drilldown#open\r\n       * @param {jQuery} $elem - the current element with a submenu to open, i.e. the `li` tag.\r\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($elem) {\n        if (this.options.autoHeight) this.$wrapper.css({ height: $elem.children('[data-submenu]').data('calcHeight') });\n        $elem.attr('aria-expanded', true);\n        $elem.children('[data-submenu]').addClass('is-active').removeClass('invisible').attr('aria-hidden', false);\n        /**\r\n         * Fires when the submenu has opened.\r\n         * @event Drilldown#open\r\n         */\n        this.$element.trigger('open.zf.drilldown', [$elem]);\n      }\n    }, {\n      key: '_hide',\n\n\n      /**\r\n       * Hides a submenu\r\n       * @function\r\n       * @fires Drilldown#hide\r\n       * @param {jQuery} $elem - the current sub-menu to hide, i.e. the `ul` tag.\r\n       */\n      value: function _hide($elem) {\n        if (this.options.autoHeight) this.$wrapper.css({ height: $elem.parent().closest('ul').data('calcHeight') });\n        var _this = this;\n        $elem.parent('li').attr('aria-expanded', false);\n        $elem.attr('aria-hidden', true).addClass('is-closing');\n        $elem.addClass('is-closing').one(Foundation.transitionend($elem), function () {\n          $elem.removeClass('is-active is-closing');\n          $elem.blur().addClass('invisible');\n        });\n        /**\r\n         * Fires when the submenu has closed.\r\n         * @event Drilldown#hide\r\n         */\n        $elem.trigger('hide.zf.drilldown', [$elem]);\n      }\n\n      /**\r\n       * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\r\n       * Prevents content jumping.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_getMaxDims',\n      value: function _getMaxDims() {\n        var maxHeight = 0,\n            result = {},\n            _this = this;\n        this.$submenus.add(this.$element).each(function () {\n          var numOfElems = $(this).children('li').length;\n          var height = Foundation.Box.GetDimensions(this).height;\n          maxHeight = height > maxHeight ? height : maxHeight;\n          if (_this.options.autoHeight) {\n            $(this).data('calcHeight', height);\n            if (!$(this).hasClass('is-drilldown-submenu')) result['height'] = height;\n          }\n        });\n\n        if (!this.options.autoHeight) result['min-height'] = maxHeight + 'px';\n\n        result['max-width'] = this.$element[0].getBoundingClientRect().width + 'px';\n\n        return result;\n      }\n\n      /**\r\n       * Destroys the Drilldown Menu\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        if (this.options.scrollTop) this.$element.off('.zf.drilldown', this._bindHandler);\n        this._hideAll();\n        this.$element.off('mutateme.zf.trigger');\n        Foundation.Nest.Burn(this.$element, 'drilldown');\n        this.$element.unwrap().find('.js-drilldown-back, .is-submenu-parent-item').remove().end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu').end().find('[data-submenu]').removeAttr('aria-hidden tabindex role');\n        this.$submenuAnchors.each(function () {\n          $(this).off('.zf.drilldown');\n        });\n\n        this.$submenus.removeClass('drilldown-submenu-cover-previous');\n\n        this.$element.find('a').each(function () {\n          var $link = $(this);\n          $link.removeAttr('tabindex');\n          if ($link.data('savedHref')) {\n            $link.attr('href', $link.data('savedHref')).removeData('savedHref');\n          } else {\n            return;\n          }\n        });\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Drilldown;\n  }();\n\n  Drilldown.defaults = {\n    /**\r\n     * Markup used for JS generated back button. Prepended  or appended (see backButtonPosition) to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\r\n     * @option\r\n     * @type {string}\r\n     * @default '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>'\r\n     */\n    backButton: '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>',\n    /**\r\n     * Position the back button either at the top or bottom of drilldown submenus. Can be `'left'` or `'bottom'`.\r\n     * @option\r\n     * @type {string}\r\n     * @default top\r\n     */\n    backButtonPosition: 'top',\n    /**\r\n     * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\r\n     * @option\r\n     * @type {string}\r\n     * @default '<div></div>'\r\n     */\n    wrapper: '<div></div>',\n    /**\r\n     * Adds the parent link to the submenu.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    parentLink: false,\n    /**\r\n     * Allow the menu to return to root list on body click.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    closeOnClick: false,\n    /**\r\n     * Allow the menu to auto adjust height.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    autoHeight: false,\n    /**\r\n     * Animate the auto adjust height.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    animateHeight: false,\n    /**\r\n     * Scroll to the top of the menu after opening a submenu or navigating back using the menu back button\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    scrollTop: false,\n    /**\r\n     * String jquery selector (for example 'body') of element to take offset().top from, if empty string the drilldown menu offset().top is taken\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    scrollTopElement: '',\n    /**\r\n     * ScrollTop offset\r\n     * @option\r\n     * @type {number}\r\n     * @default 0\r\n     */\n    scrollTopOffset: 0,\n    /**\r\n     * Scroll animation duration\r\n     * @option\r\n     * @type {number}\r\n     * @default 500\r\n     */\n    animationDuration: 500,\n    /**\r\n     * Scroll animation easing. Can be `'swing'` or `'linear'`.\r\n     * @option\r\n     * @type {string}\r\n     * @see {@link https://api.jquery.com/animate|JQuery animate}\r\n     * @default 'swing'\r\n     */\n    animationEasing: 'swing'\n    // holdOpen: false\n  };\n\n  // Window exports\n  Foundation.plugin(Drilldown, 'Drilldown');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Dropdown module.\r\n   * @module foundation.dropdown\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.triggers\r\n   */\n\n  var Dropdown = function () {\n    /**\r\n     * Creates a new instance of a dropdown.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into a dropdown.\r\n     *        Object should be of the dropdown panel, rather than its anchor.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Dropdown(element, options) {\n      _classCallCheck(this, Dropdown);\n\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Dropdown');\n      Foundation.Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\r\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(Dropdown, [{\n      key: '_init',\n      value: function _init() {\n        var $id = this.$element.attr('id');\n\n        this.$anchor = $('[data-toggle=\"' + $id + '\"]').length ? $('[data-toggle=\"' + $id + '\"]') : $('[data-open=\"' + $id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': $id,\n          'data-is-focus': false,\n          'data-yeti-box': $id,\n          'aria-haspopup': true,\n          'aria-expanded': false\n\n        });\n\n        if (this.options.parentClass) {\n          this.$parent = this.$element.parents('.' + this.options.parentClass);\n        } else {\n          this.$parent = null;\n        }\n        this.options.positionClass = this.getPositionClass();\n        this.counter = 4;\n        this.usedPositions = [];\n        this.$element.attr({\n          'aria-hidden': 'true',\n          'data-yeti-box': $id,\n          'data-resize': $id,\n          'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n        });\n        this._events();\n      }\n\n      /**\r\n       * Helper function to determine current orientation of dropdown pane.\r\n       * @function\r\n       * @returns {String} position - string value of a position class.\r\n       */\n\n    }, {\n      key: 'getPositionClass',\n      value: function getPositionClass() {\n        var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\n        var horizontalPosition = /float-(\\S+)/.exec(this.$anchor[0].className);\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n        var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n\n        return position;\n      }\n\n      /**\r\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\r\n       * @function\r\n       * @private\r\n       * @param {String} position - position class to remove.\r\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.$element.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.$element.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.$element.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.$element.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.$element.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\r\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\r\n       * Recursively calls itself if a collision is detected, with a new position class.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        if (this.$anchor.attr('aria-expanded') === 'false') {\n          return false;\n        }\n        var position = this.getPositionClass(),\n            $eleDims = Foundation.Box.GetDimensions(this.$element),\n            $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n            _this = this,\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\n\n        if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element, this.$parent)) {\n          var newWidth = $eleDims.windowDims.width,\n              parentHOffset = 0;\n          if (this.$parent) {\n            var $parentDims = Foundation.Box.GetDimensions(this.$parent),\n                parentHOffset = $parentDims.offset.left;\n            if ($parentDims.width < newWidth) {\n              newWidth = $parentDims.width;\n            }\n          }\n\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset + parentHOffset, true)).css({\n            'width': newWidth - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          this.classChanged = true;\n          return false;\n        }\n\n        this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.$element, this.$parent, true) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\r\n       * Adds event listeners to the element utilizing the triggers utility library.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': this._setPosition.bind(this)\n        });\n\n        if (this.options.hover) {\n          this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n            var bodyData = $('body').data();\n            if (typeof bodyData.whatinput === 'undefined' || bodyData.whatinput === 'mouse') {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.open();\n                _this.$anchor.data('hover', true);\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n          if (this.options.hoverPane) {\n            this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n          }\n        }\n        this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n\n          var $target = $(this),\n              visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n          Foundation.Keyboard.handleKey(e, 'Dropdown', {\n            open: function () {\n              if ($target.is(_this.$anchor)) {\n                _this.open();\n                _this.$element.attr('tabindex', -1).focus();\n                e.preventDefault();\n              }\n            },\n            close: function () {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          });\n        });\n      }\n\n      /**\r\n       * Adds an event handler to the body to close any dropdowns on a click.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body).not(this.$element),\n            _this = this;\n        $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n          if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n            return;\n          }\n          if (_this.$element.find(e.target).length) {\n            return;\n          }\n          _this.close();\n          $body.off('click.zf.dropdown');\n        });\n      }\n\n      /**\r\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\r\n       * @function\r\n       * @fires Dropdown#closeme\r\n       * @fires Dropdown#show\r\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        // var _this = this;\n        /**\r\n         * Fires to close other open dropdowns, typically when dropdown is opening\r\n         * @event Dropdown#closeme\r\n         */\n        this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n        this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\n        // this.$element/*.show()*/;\n        this._setPosition();\n        this.$element.addClass('is-open').attr({ 'aria-hidden': false });\n\n        if (this.options.autoFocus) {\n          var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n          if ($focusable.length) {\n            $focusable.eq(0).focus();\n          }\n        }\n\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n\n        if (this.options.trapFocus) {\n          Foundation.Keyboard.trapFocus(this.$element);\n        }\n\n        /**\r\n         * Fires once the dropdown is visible.\r\n         * @event Dropdown#show\r\n         */\n        this.$element.trigger('show.zf.dropdown', [this.$element]);\n      }\n\n      /**\r\n       * Closes the open dropdown pane.\r\n       * @function\r\n       * @fires Dropdown#hide\r\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.$element.hasClass('is-open')) {\n          return false;\n        }\n        this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\n\n        this.$anchor.removeClass('hover').attr('aria-expanded', false);\n\n        if (this.classChanged) {\n          var curPositionClass = this.getPositionClass();\n          if (curPositionClass) {\n            this.$element.removeClass(curPositionClass);\n          }\n          this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({ height: '', width: '' });\n          this.classChanged = false;\n          this.counter = 4;\n          this.usedPositions.length = 0;\n        }\n        /**\r\n         * Fires once the dropdown is no longer visible.\r\n         * @event Dropdown#hide\r\n         */\n        this.$element.trigger('hide.zf.dropdown', [this.$element]);\n\n        if (this.options.trapFocus) {\n          Foundation.Keyboard.releaseFocus(this.$element);\n        }\n      }\n\n      /**\r\n       * Toggles the dropdown pane's visibility.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.$element.hasClass('is-open')) {\n          if (this.$anchor.data('hover')) return;\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n\n      /**\r\n       * Destroys the dropdown.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger').hide();\n        this.$anchor.off('.zf.dropdown');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Dropdown;\n  }();\n\n  Dropdown.defaults = {\n    /**\r\n     * Class that designates bounding container of Dropdown (default: window)\r\n     * @option\r\n     * @type {?string}\r\n     * @default null\r\n     */\n    parentClass: null,\n    /**\r\n     * Amount of time to delay opening a submenu on hover event.\r\n     * @option\r\n     * @type {number}\r\n     * @default 250\r\n     */\n    hoverDelay: 250,\n    /**\r\n     * Allow submenus to open on hover events\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    hover: false,\n    /**\r\n     * Don't close dropdown when hovering over dropdown pane\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    hoverPane: false,\n    /**\r\n     * Number of pixels between the dropdown pane and the triggering element on open.\r\n     * @option\r\n     * @type {number}\r\n     * @default 1\r\n     */\n    vOffset: 1,\n    /**\r\n     * Number of pixels between the dropdown pane and the triggering element on open.\r\n     * @option\r\n     * @type {number}\r\n     * @default 1\r\n     */\n    hOffset: 1,\n    /**\r\n     * Class applied to adjust open position. JS will test and fill this in.\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    positionClass: '',\n    /**\r\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    trapFocus: false,\n    /**\r\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    autoFocus: false,\n    /**\r\n     * Allows a click on the body to close the dropdown.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    closeOnClick: false\n  };\n\n  // Window exports\n  Foundation.plugin(Dropdown, 'Dropdown');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * DropdownMenu module.\r\n   * @module foundation.dropdown-menu\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.nest\r\n   */\n\n  var DropdownMenu = function () {\n    /**\r\n     * Creates a new instance of DropdownMenu.\r\n     * @class\r\n     * @fires DropdownMenu#init\r\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function DropdownMenu(element, options) {\n      _classCallCheck(this, DropdownMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'dropdown');\n      this._init();\n\n      Foundation.registerPlugin(this, 'DropdownMenu');\n      Foundation.Keyboard.register('DropdownMenu', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\r\n     * Initializes the plugin, and calls _prepareMenu\r\n     * @private\r\n     * @function\r\n     */\n\n\n    _createClass(DropdownMenu, [{\n      key: '_init',\n      value: function _init() {\n        var subs = this.$element.find('li.is-dropdown-submenu-parent');\n        this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n        this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n        this.$tabs = this.$element.children('[role=\"menuitem\"]');\n        this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n        if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\n          this.options.alignment = 'right';\n          subs.addClass('opens-left');\n        } else {\n          subs.addClass('opens-right');\n        }\n        this.changed = false;\n        this._events();\n      }\n    }, {\n      key: '_isVertical',\n      value: function _isVertical() {\n        return this.$tabs.css('display') === 'block';\n      }\n\n      /**\r\n       * Adds event listeners to elements within the menu\r\n       * @private\r\n       * @function\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this,\n            hasTouch = 'ontouchstart' in window || typeof window.ontouchstart !== 'undefined',\n            parClass = 'is-dropdown-submenu-parent';\n\n        // used for onClick and in the keyboard handlers\n        var handleClickFn = function (e) {\n          var $elem = $(e.target).parentsUntil('ul', '.' + parClass),\n              hasSub = $elem.hasClass(parClass),\n              hasClicked = $elem.attr('data-is-click') === 'true',\n              $sub = $elem.children('.is-dropdown-submenu');\n\n          if (hasSub) {\n            if (hasClicked) {\n              if (!_this.options.closeOnClick || !_this.options.clickOpen && !hasTouch || _this.options.forceFollow && hasTouch) {\n                return;\n              } else {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n                _this._hide($elem);\n              }\n            } else {\n              e.preventDefault();\n              e.stopImmediatePropagation();\n              _this._show($sub);\n              $elem.add($elem.parentsUntil(_this.$element, '.' + parClass)).attr('data-is-click', true);\n            }\n          }\n        };\n\n        if (this.options.clickOpen || hasTouch) {\n          this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\n        }\n\n        // Handle Leaf element Clicks\n        if (_this.options.closeOnClickInside) {\n          this.$menuItems.on('click.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n            if (!hasSub) {\n              _this._hide();\n            }\n          });\n        }\n\n        if (!this.options.disableHover) {\n          this.$menuItems.on('mouseenter.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n\n            if (hasSub) {\n              clearTimeout($elem.data('_delay'));\n              $elem.data('_delay', setTimeout(function () {\n                _this._show($elem.children('.is-dropdown-submenu'));\n              }, _this.options.hoverDelay));\n            }\n          }).on('mouseleave.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n            if (hasSub && _this.options.autoclose) {\n              if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) {\n                return false;\n              }\n\n              clearTimeout($elem.data('_delay'));\n              $elem.data('_delay', setTimeout(function () {\n                _this._hide($elem);\n              }, _this.options.closingTime));\n            }\n          });\n        }\n        this.$menuItems.on('keydown.zf.dropdownmenu', function (e) {\n          var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n              isTab = _this.$tabs.index($element) > -1,\n              $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(i - 1);\n              $nextElement = $elements.eq(i + 1);\n              return;\n            }\n          });\n\n          var nextSibling = function () {\n            if (!$element.is(':last-child')) {\n              $nextElement.children('a:first').focus();\n              e.preventDefault();\n            }\n          },\n              prevSibling = function () {\n            $prevElement.children('a:first').focus();\n            e.preventDefault();\n          },\n              openSub = function () {\n            var $sub = $element.children('ul.is-dropdown-submenu');\n            if ($sub.length) {\n              _this._show($sub);\n              $element.find('li > a:first').focus();\n              e.preventDefault();\n            } else {\n              return;\n            }\n          },\n              closeSub = function () {\n            //if ($element.is(':first-child')) {\n            var close = $element.parent('ul').parent('li');\n            close.children('a:first').focus();\n            _this._hide(close);\n            e.preventDefault();\n            //}\n          };\n          var functions = {\n            open: openSub,\n            close: function () {\n              _this._hide(_this.$element);\n              _this.$menuItems.find('a:first').focus(); // focus to first element\n              e.preventDefault();\n            },\n            handled: function () {\n              e.stopImmediatePropagation();\n            }\n          };\n\n          if (isTab) {\n            if (_this._isVertical()) {\n              // vertical menu\n              if (Foundation.rtl()) {\n                // right aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: closeSub,\n                  previous: openSub\n                });\n              } else {\n                // left aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: openSub,\n                  previous: closeSub\n                });\n              }\n            } else {\n              // horizontal menu\n              if (Foundation.rtl()) {\n                // right aligned\n                $.extend(functions, {\n                  next: prevSibling,\n                  previous: nextSibling,\n                  down: openSub,\n                  up: closeSub\n                });\n              } else {\n                // left aligned\n                $.extend(functions, {\n                  next: nextSibling,\n                  previous: prevSibling,\n                  down: openSub,\n                  up: closeSub\n                });\n              }\n            }\n          } else {\n            // not tabs -> one sub\n            if (Foundation.rtl()) {\n              // right aligned\n              $.extend(functions, {\n                next: closeSub,\n                previous: openSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            } else {\n              // left aligned\n              $.extend(functions, {\n                next: openSub,\n                previous: closeSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            }\n          }\n          Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n        });\n      }\n\n      /**\r\n       * Adds an event handler to the body to close any dropdowns on a click.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body),\n            _this = this;\n        $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\n          var $link = _this.$element.find(e.target);\n          if ($link.length) {\n            return;\n          }\n\n          _this._hide();\n          $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n        });\n      }\n\n      /**\r\n       * Opens a dropdown pane, and checks for collisions first.\r\n       * @param {jQuery} $sub - ul element that is a submenu to show\r\n       * @function\r\n       * @private\r\n       * @fires DropdownMenu#show\r\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($sub) {\n        var idx = this.$tabs.index(this.$tabs.filter(function (i, el) {\n          return $(el).find($sub).length > 0;\n        }));\n        var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n        this._hide($sibs, idx);\n        $sub.css('visibility', 'hidden').addClass('js-dropdown-active').parent('li.is-dropdown-submenu-parent').addClass('is-active');\n        var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n        if (!clear) {\n          var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n              $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n          $parentLi.removeClass('opens' + oldClass).addClass('opens-' + this.options.alignment);\n          clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n          if (!clear) {\n            $parentLi.removeClass('opens-' + this.options.alignment).addClass('opens-inner');\n          }\n          this.changed = true;\n        }\n        $sub.css('visibility', '');\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n        /**\r\n         * Fires when the new dropdown pane is visible.\r\n         * @event DropdownMenu#show\r\n         */\n        this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n      }\n\n      /**\r\n       * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\r\n       * @function\r\n       * @param {jQuery} $elem - element with a submenu to hide\r\n       * @param {Number} idx - index of the $tabs collection to hide\r\n       * @private\r\n       */\n\n    }, {\n      key: '_hide',\n      value: function _hide($elem, idx) {\n        var $toClose;\n        if ($elem && $elem.length) {\n          $toClose = $elem;\n        } else if (idx !== undefined) {\n          $toClose = this.$tabs.not(function (i, el) {\n            return i === idx;\n          });\n        } else {\n          $toClose = this.$element;\n        }\n        var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n        if (somethingToClose) {\n          $toClose.find('li.is-active').add($toClose).attr({\n            'data-is-click': false\n          }).removeClass('is-active');\n\n          $toClose.find('ul.js-dropdown-active').removeClass('js-dropdown-active');\n\n          if (this.changed || $toClose.find('opens-inner').length) {\n            var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n            $toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-' + this.options.alignment).addClass('opens-' + oldClass);\n            this.changed = false;\n          }\n          /**\r\n           * Fires when the open menus are closed.\r\n           * @event DropdownMenu#hide\r\n           */\n          this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n        }\n      }\n\n      /**\r\n       * Destroys the plugin.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n        $(document.body).off('.zf.dropdownmenu');\n        Foundation.Nest.Burn(this.$element, 'dropdown');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return DropdownMenu;\n  }();\n\n  /**\r\n   * Default settings for plugin\r\n   */\n\n\n  DropdownMenu.defaults = {\n    /**\r\n     * Disallows hover events from opening submenus\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    disableHover: false,\n    /**\r\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    autoclose: true,\n    /**\r\n     * Amount of time to delay opening a submenu on hover event.\r\n     * @option\r\n     * @type {number}\r\n     * @default 50\r\n     */\n    hoverDelay: 50,\n    /**\r\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    clickOpen: false,\n    /**\r\n     * Amount of time to delay closing a submenu on a mouseleave event.\r\n     * @option\r\n     * @type {number}\r\n     * @default 500\r\n     */\n\n    closingTime: 500,\n    /**\r\n     * Position of the menu relative to what direction the submenus should open. Handled by JS. Can be `'left'` or `'right'`.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'left'\r\n     */\n    alignment: 'left',\n    /**\r\n     * Allow clicks on the body to close any open submenus.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    closeOnClick: true,\n    /**\r\n     * Allow clicks on leaf anchor links to close any open submenus.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    closeOnClickInside: true,\n    /**\r\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'vertical'\r\n     */\n    verticalClass: 'vertical',\n    /**\r\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'align-right'\r\n     */\n    rightClass: 'align-right',\n    /**\r\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    forceFollow: true\n  };\n\n  // Window exports\n  Foundation.plugin(DropdownMenu, 'DropdownMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Equalizer module.\r\n   * @module foundation.equalizer\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.timerAndImageLoader if equalizer contains images\r\n   */\n\n  var Equalizer = function () {\n    /**\r\n     * Creates a new instance of Equalizer.\r\n     * @class\r\n     * @fires Equalizer#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Equalizer(element, options) {\n      _classCallCheck(this, Equalizer);\n\n      this.$element = element;\n      this.options = $.extend({}, Equalizer.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Equalizer');\n    }\n\n    /**\r\n     * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\r\n     * @private\r\n     */\n\n\n    _createClass(Equalizer, [{\n      key: '_init',\n      value: function _init() {\n        var eqId = this.$element.attr('data-equalizer') || '';\n        var $watched = this.$element.find('[data-equalizer-watch=\"' + eqId + '\"]');\n\n        this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\n        this.$element.attr('data-resize', eqId || Foundation.GetYoDigits(6, 'eq'));\n        this.$element.attr('data-mutate', eqId || Foundation.GetYoDigits(6, 'eq'));\n\n        this.hasNested = this.$element.find('[data-equalizer]').length > 0;\n        this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\n        this.isOn = false;\n        this._bindHandler = {\n          onResizeMeBound: this._onResizeMe.bind(this),\n          onPostEqualizedBound: this._onPostEqualized.bind(this)\n        };\n\n        var imgs = this.$element.find('img');\n        var tooSmall;\n        if (this.options.equalizeOn) {\n          tooSmall = this._checkMQ();\n          $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\n        } else {\n          this._events();\n        }\n        if (tooSmall !== undefined && tooSmall === false || tooSmall === undefined) {\n          if (imgs.length) {\n            Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\n          } else {\n            this._reflow();\n          }\n        }\n      }\n\n      /**\r\n       * Removes event listeners if the breakpoint is too small.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_pauseEvents',\n      value: function _pauseEvents() {\n        this.isOn = false;\n        this.$element.off({\n          '.zf.equalizer': this._bindHandler.onPostEqualizedBound,\n          'resizeme.zf.trigger': this._bindHandler.onResizeMeBound,\n          'mutateme.zf.trigger': this._bindHandler.onResizeMeBound\n        });\n      }\n\n      /**\r\n       * function to handle $elements resizeme.zf.trigger, with bound this on _bindHandler.onResizeMeBound\r\n       * @private\r\n       */\n\n    }, {\n      key: '_onResizeMe',\n      value: function _onResizeMe(e) {\n        this._reflow();\n      }\n\n      /**\r\n       * function to handle $elements postequalized.zf.equalizer, with bound this on _bindHandler.onPostEqualizedBound\r\n       * @private\r\n       */\n\n    }, {\n      key: '_onPostEqualized',\n      value: function _onPostEqualized(e) {\n        if (e.target !== this.$element[0]) {\n          this._reflow();\n        }\n      }\n\n      /**\r\n       * Initializes events for Equalizer.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this._pauseEvents();\n        if (this.hasNested) {\n          this.$element.on('postequalized.zf.equalizer', this._bindHandler.onPostEqualizedBound);\n        } else {\n          this.$element.on('resizeme.zf.trigger', this._bindHandler.onResizeMeBound);\n          this.$element.on('mutateme.zf.trigger', this._bindHandler.onResizeMeBound);\n        }\n        this.isOn = true;\n      }\n\n      /**\r\n       * Checks the current breakpoint to the minimum required size.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_checkMQ',\n      value: function _checkMQ() {\n        var tooSmall = !Foundation.MediaQuery.is(this.options.equalizeOn);\n        if (tooSmall) {\n          if (this.isOn) {\n            this._pauseEvents();\n            this.$watched.css('height', 'auto');\n          }\n        } else {\n          if (!this.isOn) {\n            this._events();\n          }\n        }\n        return tooSmall;\n      }\n\n      /**\r\n       * A noop version for the plugin\r\n       * @private\r\n       */\n\n    }, {\n      key: '_killswitch',\n      value: function _killswitch() {\n        return;\n      }\n\n      /**\r\n       * Calls necessary functions to update Equalizer upon DOM change\r\n       * @private\r\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        if (!this.options.equalizeOnStack) {\n          if (this._isStacked()) {\n            this.$watched.css('height', 'auto');\n            return false;\n          }\n        }\n        if (this.options.equalizeByRow) {\n          this.getHeightsByRow(this.applyHeightByRow.bind(this));\n        } else {\n          this.getHeights(this.applyHeight.bind(this));\n        }\n      }\n\n      /**\r\n       * Manually determines if the first 2 elements are *NOT* stacked.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_isStacked',\n      value: function _isStacked() {\n        if (!this.$watched[0] || !this.$watched[1]) {\n          return true;\n        }\n        return this.$watched[0].getBoundingClientRect().top !== this.$watched[1].getBoundingClientRect().top;\n      }\n\n      /**\r\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n       * @param {Function} cb - A non-optional callback to return the heights array to.\r\n       * @returns {Array} heights - An array of heights of children within Equalizer container\r\n       */\n\n    }, {\n      key: 'getHeights',\n      value: function getHeights(cb) {\n        var heights = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          heights.push(this.$watched[i].offsetHeight);\n        }\n        cb(heights);\n      }\n\n      /**\r\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n       * @param {Function} cb - A non-optional callback to return the heights array to.\r\n       * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n       */\n\n    }, {\n      key: 'getHeightsByRow',\n      value: function getHeightsByRow(cb) {\n        var lastElTopOffset = this.$watched.length ? this.$watched.first().offset().top : 0,\n            groups = [],\n            group = 0;\n        //group by Row\n        groups[group] = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          //maybe could use this.$watched[i].offsetTop\n          var elOffsetTop = $(this.$watched[i]).offset().top;\n          if (elOffsetTop != lastElTopOffset) {\n            group++;\n            groups[group] = [];\n            lastElTopOffset = elOffsetTop;\n          }\n          groups[group].push([this.$watched[i], this.$watched[i].offsetHeight]);\n        }\n\n        for (var j = 0, ln = groups.length; j < ln; j++) {\n          var heights = $(groups[j]).map(function () {\n            return this[1];\n          }).get();\n          var max = Math.max.apply(null, heights);\n          groups[j].push(max);\n        }\n        cb(groups);\n      }\n\n      /**\r\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest\r\n       * @param {array} heights - An array of heights of children within Equalizer container\r\n       * @fires Equalizer#preequalized\r\n       * @fires Equalizer#postequalized\r\n       */\n\n    }, {\n      key: 'applyHeight',\n      value: function applyHeight(heights) {\n        var max = Math.max.apply(null, heights);\n        /**\r\n         * Fires before the heights are applied\r\n         * @event Equalizer#preequalized\r\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n\n        this.$watched.css('height', max);\n\n        /**\r\n         * Fires when the heights have been applied\r\n         * @event Equalizer#postequalized\r\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\r\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\r\n       * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n       * @fires Equalizer#preequalized\r\n       * @fires Equalizer#preequalizedrow\r\n       * @fires Equalizer#postequalizedrow\r\n       * @fires Equalizer#postequalized\r\n       */\n\n    }, {\n      key: 'applyHeightByRow',\n      value: function applyHeightByRow(groups) {\n        /**\r\n         * Fires before the heights are applied\r\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n        for (var i = 0, len = groups.length; i < len; i++) {\n          var groupsILength = groups[i].length,\n              max = groups[i][groupsILength - 1];\n          if (groupsILength <= 2) {\n            $(groups[i][0][0]).css({ 'height': 'auto' });\n            continue;\n          }\n          /**\r\n            * Fires before the heights per row are applied\r\n            * @event Equalizer#preequalizedrow\r\n            */\n          this.$element.trigger('preequalizedrow.zf.equalizer');\n          for (var j = 0, lenJ = groupsILength - 1; j < lenJ; j++) {\n            $(groups[i][j][0]).css({ 'height': max });\n          }\n          /**\r\n            * Fires when the heights per row have been applied\r\n            * @event Equalizer#postequalizedrow\r\n            */\n          this.$element.trigger('postequalizedrow.zf.equalizer');\n        }\n        /**\r\n         * Fires when the heights have been applied\r\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\r\n       * Destroys an instance of Equalizer.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._pauseEvents();\n        this.$watched.css('height', 'auto');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Equalizer;\n  }();\n\n  /**\r\n   * Default settings for plugin\r\n   */\n\n\n  Equalizer.defaults = {\n    /**\r\n     * Enable height equalization when stacked on smaller screens.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    equalizeOnStack: false,\n    /**\r\n     * Enable height equalization row by row.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    equalizeByRow: false,\n    /**\r\n     * String representing the minimum breakpoint size the plugin should equalize heights on.\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    equalizeOn: ''\n  };\n\n  // Window exports\n  Foundation.plugin(Equalizer, 'Equalizer');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Interchange module.\r\n   * @module foundation.interchange\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.timerAndImageLoader\r\n   */\n\n  var Interchange = function () {\n    /**\r\n     * Creates a new instance of Interchange.\r\n     * @class\r\n     * @fires Interchange#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Interchange(element, options) {\n      _classCallCheck(this, Interchange);\n\n      this.$element = element;\n      this.options = $.extend({}, Interchange.defaults, options);\n      this.rules = [];\n      this.currentPath = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Interchange');\n    }\n\n    /**\r\n     * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(Interchange, [{\n      key: '_init',\n      value: function _init() {\n        this._addBreakpoints();\n        this._generateRules();\n        this._reflow();\n      }\n\n      /**\r\n       * Initializes events for Interchange.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        $(window).on('resize.zf.interchange', Foundation.util.throttle(function () {\n          _this2._reflow();\n        }, 50));\n      }\n\n      /**\r\n       * Calls necessary functions to update Interchange upon DOM change\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        var match;\n\n        // Iterate through each rule, but only save the last match\n        for (var i in this.rules) {\n          if (this.rules.hasOwnProperty(i)) {\n            var rule = this.rules[i];\n            if (window.matchMedia(rule.query).matches) {\n              match = rule;\n            }\n          }\n        }\n\n        if (match) {\n          this.replace(match.path);\n        }\n      }\n\n      /**\r\n       * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_addBreakpoints',\n      value: function _addBreakpoints() {\n        for (var i in Foundation.MediaQuery.queries) {\n          if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\n            var query = Foundation.MediaQuery.queries[i];\n            Interchange.SPECIAL_QUERIES[query.name] = query.value;\n          }\n        }\n      }\n\n      /**\r\n       * Checks the Interchange element for the provided media query + content pairings\r\n       * @function\r\n       * @private\r\n       * @param {Object} element - jQuery object that is an Interchange instance\r\n       * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\r\n       */\n\n    }, {\n      key: '_generateRules',\n      value: function _generateRules(element) {\n        var rulesList = [];\n        var rules;\n\n        if (this.options.rules) {\n          rules = this.options.rules;\n        } else {\n          rules = this.$element.data('interchange');\n        }\n\n        rules = typeof rules === 'string' ? rules.match(/\\[.*?\\]/g) : rules;\n\n        for (var i in rules) {\n          if (rules.hasOwnProperty(i)) {\n            var rule = rules[i].slice(1, -1).split(', ');\n            var path = rule.slice(0, -1).join('');\n            var query = rule[rule.length - 1];\n\n            if (Interchange.SPECIAL_QUERIES[query]) {\n              query = Interchange.SPECIAL_QUERIES[query];\n            }\n\n            rulesList.push({\n              path: path,\n              query: query\n            });\n          }\n        }\n\n        this.rules = rulesList;\n      }\n\n      /**\r\n       * Update the `src` property of an image, or change the HTML of a container, to the specified path.\r\n       * @function\r\n       * @param {String} path - Path to the image or HTML partial.\r\n       * @fires Interchange#replaced\r\n       */\n\n    }, {\n      key: 'replace',\n      value: function replace(path) {\n        if (this.currentPath === path) return;\n\n        var _this = this,\n            trigger = 'replaced.zf.interchange';\n\n        // Replacing images\n        if (this.$element[0].nodeName === 'IMG') {\n          this.$element.attr('src', path).on('load', function () {\n            _this.currentPath = path;\n          }).trigger(trigger);\n        }\n        // Replacing background images\n        else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\n            this.$element.css({ 'background-image': 'url(' + path + ')' }).trigger(trigger);\n          }\n          // Replacing HTML\n          else {\n              $.get(path, function (response) {\n                _this.$element.html(response).trigger(trigger);\n                $(response).foundation();\n                _this.currentPath = path;\n              });\n            }\n\n        /**\r\n         * Fires when content in an Interchange element is done being loaded.\r\n         * @event Interchange#replaced\r\n         */\n        // this.$element.trigger('replaced.zf.interchange');\n      }\n\n      /**\r\n       * Destroys an instance of interchange.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        //TODO this.\n      }\n    }]);\n\n    return Interchange;\n  }();\n\n  /**\r\n   * Default settings for plugin\r\n   */\n\n\n  Interchange.defaults = {\n    /**\r\n     * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\r\n     * @option\r\n     * @type {?array}\r\n     * @default null\r\n     */\n    rules: null\n  };\n\n  Interchange.SPECIAL_QUERIES = {\n    'landscape': 'screen and (orientation: landscape)',\n    'portrait': 'screen and (orientation: portrait)',\n    'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\n  };\n\n  // Window exports\n  Foundation.plugin(Interchange, 'Interchange');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Magellan module.\r\n   * @module foundation.magellan\r\n   */\n\n  var Magellan = function () {\n    /**\r\n     * Creates a new instance of Magellan.\r\n     * @class\r\n     * @fires Magellan#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Magellan(element, options) {\n      _classCallCheck(this, Magellan);\n\n      this.$element = element;\n      this.options = $.extend({}, Magellan.defaults, this.$element.data(), options);\n\n      this._init();\n      this.calcPoints();\n\n      Foundation.registerPlugin(this, 'Magellan');\n    }\n\n    /**\r\n     * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\r\n     * @private\r\n     */\n\n\n    _createClass(Magellan, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\n        var _this = this;\n        this.$targets = $('[data-magellan-target]');\n        this.$links = this.$element.find('a');\n        this.$element.attr({\n          'data-resize': id,\n          'data-scroll': id,\n          'id': id\n        });\n        this.$active = $();\n        this.scrollPos = parseInt(window.pageYOffset, 10);\n\n        this._events();\n      }\n\n      /**\r\n       * Calculates an array of pixel values that are the demarcation lines between locations on the page.\r\n       * Can be invoked if new elements are added or the size of a location changes.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'calcPoints',\n      value: function calcPoints() {\n        var _this = this,\n            body = document.body,\n            html = document.documentElement;\n\n        this.points = [];\n        this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\n        this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\n\n        this.$targets.each(function () {\n          var $tar = $(this),\n              pt = Math.round($tar.offset().top - _this.options.threshold);\n          $tar.targetPoint = pt;\n          _this.points.push(pt);\n        });\n      }\n\n      /**\r\n       * Initializes events for Magellan.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this,\n            $body = $('html, body'),\n            opts = {\n          duration: _this.options.animationDuration,\n          easing: _this.options.animationEasing\n        };\n        $(window).one('load', function () {\n          if (_this.options.deepLinking) {\n            if (location.hash) {\n              _this.scrollToLoc(location.hash);\n            }\n          }\n          _this.calcPoints();\n          _this._updateActive();\n        });\n\n        this.$element.on({\n          'resizeme.zf.trigger': this.reflow.bind(this),\n          'scrollme.zf.trigger': this._updateActive.bind(this)\n        }).on('click.zf.magellan', 'a[href^=\"#\"]', function (e) {\n          e.preventDefault();\n          var arrival = this.getAttribute('href');\n          _this.scrollToLoc(arrival);\n        });\n        $(window).on('popstate', function (e) {\n          if (_this.options.deepLinking) {\n            _this.scrollToLoc(window.location.hash);\n          }\n        });\n      }\n\n      /**\r\n       * Function to scroll to a given location on the page.\r\n       * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\r\n       * @function\r\n       */\n\n    }, {\n      key: 'scrollToLoc',\n      value: function scrollToLoc(loc) {\n        // Do nothing if target does not exist to prevent errors\n        if (!$(loc).length) {\n          return false;\n        }\n        this._inTransition = true;\n        var _this = this,\n            scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\n\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing, function () {\n          _this._inTransition = false;_this._updateActive();\n        });\n      }\n\n      /**\r\n       * Calls necessary functions to update Magellan upon DOM change\r\n       * @function\r\n       */\n\n    }, {\n      key: 'reflow',\n      value: function reflow() {\n        this.calcPoints();\n        this._updateActive();\n      }\n\n      /**\r\n       * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\r\n       * @private\r\n       * @function\r\n       * @fires Magellan#update\r\n       */\n\n    }, {\n      key: '_updateActive',\n      value: function _updateActive() /*evt, elem, scrollPos*/{\n        if (this._inTransition) {\n          return;\n        }\n        var winPos = /*scrollPos ||*/parseInt(window.pageYOffset, 10),\n            curIdx;\n\n        if (winPos + this.winHeight === this.docHeight) {\n          curIdx = this.points.length - 1;\n        } else if (winPos < this.points[0]) {\n          curIdx = undefined;\n        } else {\n          var isDown = this.scrollPos < winPos,\n              _this = this,\n              curVisible = this.points.filter(function (p, i) {\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\n          });\n          curIdx = curVisible.length ? curVisible.length - 1 : 0;\n        }\n\n        this.$active.removeClass(this.options.activeClass);\n        this.$active = this.$links.filter('[href=\"#' + this.$targets.eq(curIdx).data('magellan-target') + '\"]').addClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = \"\";\n          if (curIdx != undefined) {\n            hash = this.$active[0].getAttribute('href');\n          }\n          if (hash !== window.location.hash) {\n            if (window.history.pushState) {\n              window.history.pushState(null, null, hash);\n            } else {\n              window.location.hash = hash;\n            }\n          }\n        }\n\n        this.scrollPos = winPos;\n        /**\r\n         * Fires when magellan is finished updating to the new active element.\r\n         * @event Magellan#update\r\n         */\n        this.$element.trigger('update.zf.magellan', [this.$active]);\n      }\n\n      /**\r\n       * Destroys an instance of Magellan and resets the url of the window.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger .zf.magellan').find('.' + this.options.activeClass).removeClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          window.location.hash.replace(hash, '');\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Magellan;\n  }();\n\n  /**\r\n   * Default settings for plugin\r\n   */\n\n\n  Magellan.defaults = {\n    /**\r\n     * Amount of time, in ms, the animated scrolling should take between locations.\r\n     * @option\r\n     * @type {number}\r\n     * @default 500\r\n     */\n    animationDuration: 500,\n    /**\r\n     * Animation style to use when scrolling between locations. Can be `'swing'` or `'linear'`.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'linear'\r\n     * @see {@link https://api.jquery.com/animate|Jquery animate}\r\n     */\n    animationEasing: 'linear',\n    /**\r\n     * Number of pixels to use as a marker for location changes.\r\n     * @option\r\n     * @type {number}\r\n     * @default 50\r\n     */\n    threshold: 50,\n    /**\r\n     * Class applied to the active locations link on the magellan container.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'active'\r\n     */\n    activeClass: 'active',\n    /**\r\n     * Allows the script to manipulate the url of the current page, and if supported, alter the history.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    deepLinking: false,\n    /**\r\n     * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\r\n     * @option\r\n     * @type {number}\r\n     * @default 0\r\n     */\n    barOffset: 0\n  };\n\n  // Window exports\n  Foundation.plugin(Magellan, 'Magellan');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * OffCanvas module.\r\n   * @module foundation.offcanvas\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.motion\r\n   */\n\n  var OffCanvas = function () {\n    /**\r\n     * Creates a new instance of an off-canvas wrapper.\r\n     * @class\r\n     * @fires OffCanvas#init\r\n     * @param {Object} element - jQuery object to initialize.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function OffCanvas(element, options) {\n      _classCallCheck(this, OffCanvas);\n\n      this.$element = element;\n      this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n      this.$lastTrigger = $();\n      this.$triggers = $();\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'OffCanvas');\n      Foundation.Keyboard.register('OffCanvas', {\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\r\n     * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(OffCanvas, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element.attr('id');\n\n        this.$element.attr('aria-hidden', 'true');\n\n        this.$element.addClass('is-transition-' + this.options.transition);\n\n        // Find triggers that affect this element and add aria-expanded to them\n        this.$triggers = $(document).find('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-expanded', 'false').attr('aria-controls', id);\n\n        // Add an overlay over the content if necessary\n        if (this.options.contentOverlay === true) {\n          var overlay = document.createElement('div');\n          var overlayPosition = $(this.$element).css(\"position\") === 'fixed' ? 'is-overlay-fixed' : 'is-overlay-absolute';\n          overlay.setAttribute('class', 'js-off-canvas-overlay ' + overlayPosition);\n          this.$overlay = $(overlay);\n          if (overlayPosition === 'is-overlay-fixed') {\n            $('body').append(this.$overlay);\n          } else {\n            this.$element.siblings('[data-off-canvas-content]').append(this.$overlay);\n          }\n        }\n\n        this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n        if (this.options.isRevealed === true) {\n          this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n          this._setMQChecker();\n        }\n        if (!this.options.transitionTime === true) {\n          this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas]')[0]).transitionDuration) * 1000;\n        }\n      }\n\n      /**\r\n       * Adds event handlers to the off-canvas wrapper and the exit overlay.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('.zf.trigger .zf.offcanvas').on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n        });\n\n        if (this.options.closeOnClick === true) {\n          var $target = this.options.contentOverlay ? this.$overlay : $('[data-off-canvas-content]');\n          $target.on({ 'click.zf.offcanvas': this.close.bind(this) });\n        }\n      }\n\n      /**\r\n       * Applies event listener for elements that will reveal at certain breakpoints.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setMQChecker',\n      value: function _setMQChecker() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          } else {\n            _this.reveal(false);\n          }\n        }).one('load.zf.offcanvas', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          }\n        });\n      }\n\n      /**\r\n       * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\r\n       * @param {Boolean} isRevealed - true if element should be revealed.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'reveal',\n      value: function reveal(isRevealed) {\n        var $closer = this.$element.find('[data-close]');\n        if (isRevealed) {\n          this.close();\n          this.isRevealed = true;\n          this.$element.attr('aria-hidden', 'false');\n          this.$element.off('open.zf.trigger toggle.zf.trigger');\n          if ($closer.length) {\n            $closer.hide();\n          }\n        } else {\n          this.isRevealed = false;\n          this.$element.attr('aria-hidden', 'true');\n          this.$element.off('open.zf.trigger toggle.zf.trigger').on({\n            'open.zf.trigger': this.open.bind(this),\n            'toggle.zf.trigger': this.toggle.bind(this)\n          });\n          if ($closer.length) {\n            $closer.show();\n          }\n        }\n      }\n\n      /**\r\n       * Stops scrolling of the body when offcanvas is open on mobile Safari and other troublesome browsers.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_stopScrolling',\n      value: function _stopScrolling(event) {\n        return false;\n      }\n\n      // Taken and adapted from http://stackoverflow.com/questions/16889447/prevent-full-page-scrolling-ios\n      // Only really works for y, not sure how to extend to x or if we need to.\n\n    }, {\n      key: '_recordScrollable',\n      value: function _recordScrollable(event) {\n        var elem = this; // called from event handler context with this as elem\n\n        // If the element is scrollable (content overflows), then...\n        if (elem.scrollHeight !== elem.clientHeight) {\n          // If we're at the top, scroll down one pixel to allow scrolling up\n          if (elem.scrollTop === 0) {\n            elem.scrollTop = 1;\n          }\n          // If we're at the bottom, scroll up one pixel to allow scrolling down\n          if (elem.scrollTop === elem.scrollHeight - elem.clientHeight) {\n            elem.scrollTop = elem.scrollHeight - elem.clientHeight - 1;\n          }\n        }\n        elem.allowUp = elem.scrollTop > 0;\n        elem.allowDown = elem.scrollTop < elem.scrollHeight - elem.clientHeight;\n        elem.lastY = event.originalEvent.pageY;\n      }\n    }, {\n      key: '_stopScrollPropagation',\n      value: function _stopScrollPropagation(event) {\n        var elem = this; // called from event handler context with this as elem\n        var up = event.pageY < elem.lastY;\n        var down = !up;\n        elem.lastY = event.pageY;\n\n        if (up && elem.allowUp || down && elem.allowDown) {\n          event.stopPropagation();\n        } else {\n          event.preventDefault();\n        }\n      }\n\n      /**\r\n       * Opens the off-canvas menu.\r\n       * @function\r\n       * @param {Object} event - Event object passed from listener.\r\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n       * @fires OffCanvas#opened\r\n       */\n\n    }, {\n      key: 'open',\n      value: function open(event, trigger) {\n        if (this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n        var _this = this;\n\n        if (trigger) {\n          this.$lastTrigger = trigger;\n        }\n\n        if (this.options.forceTo === 'top') {\n          window.scrollTo(0, 0);\n        } else if (this.options.forceTo === 'bottom') {\n          window.scrollTo(0, document.body.scrollHeight);\n        }\n\n        /**\r\n         * Fires when the off-canvas menu opens.\r\n         * @event OffCanvas#opened\r\n         */\n        _this.$element.addClass('is-open');\n\n        this.$triggers.attr('aria-expanded', 'true');\n        this.$element.attr('aria-hidden', 'false').trigger('opened.zf.offcanvas');\n\n        // If `contentScroll` is set to false, add class and disable scrolling on touch devices.\n        if (this.options.contentScroll === false) {\n          $('body').addClass('is-off-canvas-open').on('touchmove', this._stopScrolling);\n          this.$element.on('touchstart', this._recordScrollable);\n          this.$element.on('touchmove', this._stopScrollPropagation);\n        }\n\n        if (this.options.contentOverlay === true) {\n          this.$overlay.addClass('is-visible');\n        }\n\n        if (this.options.closeOnClick === true && this.options.contentOverlay === true) {\n          this.$overlay.addClass('is-closable');\n        }\n\n        if (this.options.autoFocus === true) {\n          this.$element.one(Foundation.transitionend(this.$element), function () {\n            var canvasFocus = _this.$element.find('[data-autofocus]');\n            if (canvasFocus.length) {\n              canvasFocus.eq(0).focus();\n            } else {\n              _this.$element.find('a, button').eq(0).focus();\n            }\n          });\n        }\n\n        if (this.options.trapFocus === true) {\n          this.$element.siblings('[data-off-canvas-content]').attr('tabindex', '-1');\n          Foundation.Keyboard.trapFocus(this.$element);\n        }\n      }\n\n      /**\r\n       * Closes the off-canvas menu.\r\n       * @function\r\n       * @param {Function} cb - optional cb to fire after closure.\r\n       * @fires OffCanvas#closed\r\n       */\n\n    }, {\n      key: 'close',\n      value: function close(cb) {\n        if (!this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n\n        var _this = this;\n\n        _this.$element.removeClass('is-open');\n\n        this.$element.attr('aria-hidden', 'true')\n        /**\r\n         * Fires when the off-canvas menu opens.\r\n         * @event OffCanvas#closed\r\n         */\n        .trigger('closed.zf.offcanvas');\n\n        // If `contentScroll` is set to false, remove class and re-enable scrolling on touch devices.\n        if (this.options.contentScroll === false) {\n          $('body').removeClass('is-off-canvas-open').off('touchmove', this._stopScrolling);\n          this.$element.off('touchstart', this._recordScrollable);\n          this.$element.off('touchmove', this._stopScrollPropagation);\n        }\n\n        if (this.options.contentOverlay === true) {\n          this.$overlay.removeClass('is-visible');\n        }\n\n        if (this.options.closeOnClick === true && this.options.contentOverlay === true) {\n          this.$overlay.removeClass('is-closable');\n        }\n\n        this.$triggers.attr('aria-expanded', 'false');\n\n        if (this.options.trapFocus === true) {\n          this.$element.siblings('[data-off-canvas-content]').removeAttr('tabindex');\n          Foundation.Keyboard.releaseFocus(this.$element);\n        }\n      }\n\n      /**\r\n       * Toggles the off-canvas menu open or closed.\r\n       * @function\r\n       * @param {Object} event - Event object passed from listener.\r\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle(event, trigger) {\n        if (this.$element.hasClass('is-open')) {\n          this.close(event, trigger);\n        } else {\n          this.open(event, trigger);\n        }\n      }\n\n      /**\r\n       * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_handleKeyboard',\n      value: function _handleKeyboard(e) {\n        var _this2 = this;\n\n        Foundation.Keyboard.handleKey(e, 'OffCanvas', {\n          close: function () {\n            _this2.close();\n            _this2.$lastTrigger.focus();\n            return true;\n          },\n          handled: function () {\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        });\n      }\n\n      /**\r\n       * Destroys the offcanvas plugin.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.close();\n        this.$element.off('.zf.trigger .zf.offcanvas');\n        this.$overlay.off('.zf.offcanvas');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return OffCanvas;\n  }();\n\n  OffCanvas.defaults = {\n    /**\r\n     * Allow the user to click outside of the menu to close it.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    closeOnClick: true,\n\n    /**\r\n     * Adds an overlay on top of `[data-off-canvas-content]`.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    contentOverlay: true,\n\n    /**\r\n     * Enable/disable scrolling of the main content when an off canvas panel is open.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    contentScroll: true,\n\n    /**\r\n     * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\r\n     * @option\r\n     * @type {number}\r\n     * @default 0\r\n     */\n    transitionTime: 0,\n\n    /**\r\n     * Type of transition for the offcanvas menu. Options are 'push', 'detached' or 'slide'.\r\n     * @option\r\n     * @type {string}\r\n     * @default push\r\n     */\n    transition: 'push',\n\n    /**\r\n     * Force the page to scroll to top or bottom on open.\r\n     * @option\r\n     * @type {?string}\r\n     * @default null\r\n     */\n    forceTo: null,\n\n    /**\r\n     * Allow the offcanvas to remain open for certain breakpoints.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    isRevealed: false,\n\n    /**\r\n     * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\r\n     * @option\r\n     * @type {?string}\r\n     * @default null\r\n     */\n    revealOn: null,\n\n    /**\r\n     * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    autoFocus: true,\n\n    /**\r\n     * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\r\n     * @option\r\n     * @type {string}\r\n     * @default reveal-for-\r\n     * @todo improve the regex testing for this.\r\n     */\n    revealClass: 'reveal-for-',\n\n    /**\r\n     * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    trapFocus: false\n  };\n\n  // Window exports\n  Foundation.plugin(OffCanvas, 'OffCanvas');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Orbit module.\r\n   * @module foundation.orbit\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.timerAndImageLoader\r\n   * @requires foundation.util.touch\r\n   */\n\n  var Orbit = function () {\n    /**\r\n    * Creates a new instance of an orbit carousel.\r\n    * @class\r\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\r\n    * @param {Object} options - Overrides to the default plugin settings.\r\n    */\n\n    function Orbit(element, options) {\n      _classCallCheck(this, Orbit);\n\n      this.$element = element;\n      this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Orbit');\n      Foundation.Keyboard.register('Orbit', {\n        'ltr': {\n          'ARROW_RIGHT': 'next',\n          'ARROW_LEFT': 'previous'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'next',\n          'ARROW_RIGHT': 'previous'\n        }\n      });\n    }\n\n    /**\r\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\r\n    * @function\r\n    * @private\r\n    */\n\n\n    _createClass(Orbit, [{\n      key: '_init',\n      value: function _init() {\n        // @TODO: consider discussion on PR #9278 about DOM pollution by changeSlide\n        this._reset();\n\n        this.$wrapper = this.$element.find('.' + this.options.containerClass);\n        this.$slides = this.$element.find('.' + this.options.slideClass);\n\n        var $images = this.$element.find('img'),\n            initActive = this.$slides.filter('.is-active'),\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'orbit');\n\n        this.$element.attr({\n          'data-resize': id,\n          'id': id\n        });\n\n        if (!initActive.length) {\n          this.$slides.eq(0).addClass('is-active');\n        }\n\n        if (!this.options.useMUI) {\n          this.$slides.addClass('no-motionui');\n        }\n\n        if ($images.length) {\n          Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n        } else {\n          this._prepareForOrbit(); //hehe\n        }\n\n        if (this.options.bullets) {\n          this._loadBullets();\n        }\n\n        this._events();\n\n        if (this.options.autoPlay && this.$slides.length > 1) {\n          this.geoSync();\n        }\n\n        if (this.options.accessible) {\n          // allow wrapper to be focusable to enable arrow navigation\n          this.$wrapper.attr('tabindex', 0);\n        }\n      }\n\n      /**\r\n      * Creates a jQuery collection of bullets, if they are being used.\r\n      * @function\r\n      * @private\r\n      */\n\n    }, {\n      key: '_loadBullets',\n      value: function _loadBullets() {\n        this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n      }\n\n      /**\r\n      * Sets a `timer` object on the orbit, and starts the counter for the next slide.\r\n      * @function\r\n      */\n\n    }, {\n      key: 'geoSync',\n      value: function geoSync() {\n        var _this = this;\n        this.timer = new Foundation.Timer(this.$element, {\n          duration: this.options.timerDelay,\n          infinite: false\n        }, function () {\n          _this.changeSlide(true);\n        });\n        this.timer.start();\n      }\n\n      /**\r\n      * Sets wrapper and slide heights for the orbit.\r\n      * @function\r\n      * @private\r\n      */\n\n    }, {\n      key: '_prepareForOrbit',\n      value: function _prepareForOrbit() {\n        var _this = this;\n        this._setWrapperHeight();\n      }\n\n      /**\r\n      * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\r\n      * @function\r\n      * @private\r\n      * @param {Function} cb - a callback function to fire when complete.\r\n      */\n\n    }, {\n      key: '_setWrapperHeight',\n      value: function _setWrapperHeight(cb) {\n        //rewrite this to `for` loop\n        var max = 0,\n            temp,\n            counter = 0,\n            _this = this;\n\n        this.$slides.each(function () {\n          temp = this.getBoundingClientRect().height;\n          $(this).attr('data-slide', counter);\n\n          if (_this.$slides.filter('.is-active')[0] !== _this.$slides.eq(counter)[0]) {\n            //if not the active slide, set css position and display property\n            $(this).css({ 'position': 'relative', 'display': 'none' });\n          }\n          max = temp > max ? temp : max;\n          counter++;\n        });\n\n        if (counter === this.$slides.length) {\n          this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\n          if (cb) {\n            cb(max);\n          } //fire callback with max height dimension.\n        }\n      }\n\n      /**\r\n      * Sets the max-height of each slide.\r\n      * @function\r\n      * @private\r\n      */\n\n    }, {\n      key: '_setSlideHeight',\n      value: function _setSlideHeight(height) {\n        this.$slides.each(function () {\n          $(this).css('max-height', height);\n        });\n      }\n\n      /**\r\n      * Adds event listeners to basically everything within the element.\r\n      * @function\r\n      * @private\r\n      */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        //***************************************\n        //**Now using custom event - thanks to:**\n        //**      Yohai Ararat of Toronto      **\n        //***************************************\n        //\n        this.$element.off('.resizeme.zf.trigger').on({\n          'resizeme.zf.trigger': this._prepareForOrbit.bind(this)\n        });\n        if (this.$slides.length > 1) {\n\n          if (this.options.swipe) {\n            this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(true);\n            }).on('swiperight.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(false);\n            });\n          }\n          //***************************************\n\n          if (this.options.autoPlay) {\n            this.$slides.on('click.zf.orbit', function () {\n              _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n              _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n            });\n\n            if (this.options.pauseOnHover) {\n              this.$element.on('mouseenter.zf.orbit', function () {\n                _this.timer.pause();\n              }).on('mouseleave.zf.orbit', function () {\n                if (!_this.$element.data('clickedOn')) {\n                  _this.timer.start();\n                }\n              });\n            }\n          }\n\n          if (this.options.navButtons) {\n            var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n            $controls.attr('tabindex', 0)\n            //also need to handle enter/return and spacebar key presses\n            .on('click.zf.orbit touchend.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide($(this).hasClass(_this.options.nextClass));\n            });\n          }\n\n          if (this.options.bullets) {\n            this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\n              if (/is-active/g.test(this.className)) {\n                return false;\n              } //if this is active, kick out of function.\n              var idx = $(this).data('slide'),\n                  ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n                  $slide = _this.$slides.eq(idx);\n\n              _this.changeSlide(ltr, $slide, idx);\n            });\n          }\n\n          if (this.options.accessible) {\n            this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\n              // handle keyboard event with keyboard util\n              Foundation.Keyboard.handleKey(e, 'Orbit', {\n                next: function () {\n                  _this.changeSlide(true);\n                },\n                previous: function () {\n                  _this.changeSlide(false);\n                },\n                handled: function () {\n                  // if bullet is focused, make sure focus moves\n                  if ($(e.target).is(_this.$bullets)) {\n                    _this.$bullets.filter('.is-active').focus();\n                  }\n                }\n              });\n            });\n          }\n        }\n      }\n\n      /**\r\n       * Resets Orbit so it can be reinitialized\r\n       */\n\n    }, {\n      key: '_reset',\n      value: function _reset() {\n        // Don't do anything if there are no slides (first run)\n        if (typeof this.$slides == 'undefined') {\n          return;\n        }\n\n        if (this.$slides.length > 1) {\n          // Remove old events\n          this.$element.off('.zf.orbit').find('*').off('.zf.orbit');\n\n          // Restart timer if autoPlay is enabled\n          if (this.options.autoPlay) {\n            this.timer.restart();\n          }\n\n          // Reset all sliddes\n          this.$slides.each(function (el) {\n            $(el).removeClass('is-active is-active is-in').removeAttr('aria-live').hide();\n          });\n\n          // Show the first slide\n          this.$slides.first().addClass('is-active').show();\n\n          // Triggers when the slide has finished animating\n          this.$element.trigger('slidechange.zf.orbit', [this.$slides.first()]);\n\n          // Select first bullet if bullets are present\n          if (this.options.bullets) {\n            this._updateBullets(0);\n          }\n        }\n      }\n\n      /**\r\n      * Changes the current slide to a new one.\r\n      * @function\r\n      * @param {Boolean} isLTR - flag if the slide should move left to right.\r\n      * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\r\n      * @param {Number} idx - the index of the new slide in its collection, if one chosen.\r\n      * @fires Orbit#slidechange\r\n      */\n\n    }, {\n      key: 'changeSlide',\n      value: function changeSlide(isLTR, chosenSlide, idx) {\n        if (!this.$slides) {\n          return;\n        } // Don't freak out if we're in the middle of cleanup\n        var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n        if (/mui/g.test($curSlide[0].className)) {\n          return false;\n        } //if the slide is currently animating, kick out of the function\n\n        var $firstSlide = this.$slides.first(),\n            $lastSlide = this.$slides.last(),\n            dirIn = isLTR ? 'Right' : 'Left',\n            dirOut = isLTR ? 'Left' : 'Right',\n            _this = this,\n            $newSlide;\n\n        if (!chosenSlide) {\n          //most of the time, this will be auto played or clicked from the navButtons.\n          $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n          this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\n          this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\n        } else {\n            $newSlide = chosenSlide;\n          }\n\n        if ($newSlide.length) {\n          /**\r\n          * Triggers before the next slide starts animating in and only if a next slide has been found.\r\n          * @event Orbit#beforeslidechange\r\n          */\n          this.$element.trigger('beforeslidechange.zf.orbit', [$curSlide, $newSlide]);\n\n          if (this.options.bullets) {\n            idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n            this._updateBullets(idx);\n          }\n\n          if (this.options.useMUI && !this.$element.is(':hidden')) {\n            Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\n              $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\n            });\n\n            Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\n              $curSlide.removeAttr('aria-live');\n              if (_this.options.autoPlay && !_this.timer.isPaused) {\n                _this.timer.restart();\n              }\n              //do stuff?\n            });\n          } else {\n              $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n              $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n              if (this.options.autoPlay && !this.timer.isPaused) {\n                this.timer.restart();\n              }\n            }\n          /**\r\n          * Triggers when the slide has finished animating in.\r\n          * @event Orbit#slidechange\r\n          */\n          this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n        }\n      }\n\n      /**\r\n      * Updates the active state of the bullets, if displayed.\r\n      * @function\r\n      * @private\r\n      * @param {Number} idx - the index of the current slide.\r\n      */\n\n    }, {\n      key: '_updateBullets',\n      value: function _updateBullets(idx) {\n        var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\n            span = $oldBullet.find('span:last').detach(),\n            $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n      }\n\n      /**\r\n      * Destroys the carousel and hides the element.\r\n      * @function\r\n      */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Orbit;\n  }();\n\n  Orbit.defaults = {\n    /**\r\n    * Tells the JS to look for and loadBullets.\r\n    * @option\r\n     * @type {boolean}\r\n    * @default true\r\n    */\n    bullets: true,\n    /**\r\n    * Tells the JS to apply event listeners to nav buttons\r\n    * @option\r\n     * @type {boolean}\r\n    * @default true\r\n    */\n    navButtons: true,\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n     * @type {string}\r\n    * @default 'slide-in-right'\r\n    */\n    animInFromRight: 'slide-in-right',\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n     * @type {string}\r\n    * @default 'slide-out-right'\r\n    */\n    animOutToRight: 'slide-out-right',\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n     * @type {string}\r\n    * @default 'slide-in-left'\r\n    *\r\n    */\n    animInFromLeft: 'slide-in-left',\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n     * @type {string}\r\n    * @default 'slide-out-left'\r\n    */\n    animOutToLeft: 'slide-out-left',\n    /**\r\n    * Allows Orbit to automatically animate on page load.\r\n    * @option\r\n     * @type {boolean}\r\n    * @default true\r\n    */\n    autoPlay: true,\n    /**\r\n    * Amount of time, in ms, between slide transitions\r\n    * @option\r\n     * @type {number}\r\n    * @default 5000\r\n    */\n    timerDelay: 5000,\n    /**\r\n    * Allows Orbit to infinitely loop through the slides\r\n    * @option\r\n     * @type {boolean}\r\n    * @default true\r\n    */\n    infiniteWrap: true,\n    /**\r\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\r\n    * @option\r\n     * @type {boolean}\r\n    * @default true\r\n    */\n    swipe: true,\n    /**\r\n    * Allows the timing function to pause animation on hover.\r\n    * @option\r\n     * @type {boolean}\r\n    * @default true\r\n    */\n    pauseOnHover: true,\n    /**\r\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\r\n    * @option\r\n     * @type {boolean}\r\n    * @default true\r\n    */\n    accessible: true,\n    /**\r\n    * Class applied to the container of Orbit\r\n    * @option\r\n     * @type {string}\r\n    * @default 'orbit-container'\r\n    */\n    containerClass: 'orbit-container',\n    /**\r\n    * Class applied to individual slides.\r\n    * @option\r\n     * @type {string}\r\n    * @default 'orbit-slide'\r\n    */\n    slideClass: 'orbit-slide',\n    /**\r\n    * Class applied to the bullet container. You're welcome.\r\n    * @option\r\n     * @type {string}\r\n    * @default 'orbit-bullets'\r\n    */\n    boxOfBullets: 'orbit-bullets',\n    /**\r\n    * Class applied to the `next` navigation button.\r\n    * @option\r\n     * @type {string}\r\n    * @default 'orbit-next'\r\n    */\n    nextClass: 'orbit-next',\n    /**\r\n    * Class applied to the `previous` navigation button.\r\n    * @option\r\n     * @type {string}\r\n    * @default 'orbit-previous'\r\n    */\n    prevClass: 'orbit-previous',\n    /**\r\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\r\n    * @option\r\n     * @type {boolean}\r\n    * @default true\r\n    */\n    useMUI: true\n  };\n\n  // Window exports\n  Foundation.plugin(Orbit, 'Orbit');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * ResponsiveMenu module.\r\n   * @module foundation.responsiveMenu\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   */\n\n  var ResponsiveMenu = function () {\n    /**\r\n     * Creates a new instance of a responsive menu.\r\n     * @class\r\n     * @fires ResponsiveMenu#init\r\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function ResponsiveMenu(element, options) {\n      _classCallCheck(this, ResponsiveMenu);\n\n      this.$element = $(element);\n      this.rules = this.$element.data('responsive-menu');\n      this.currentMq = null;\n      this.currentPlugin = null;\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveMenu');\n    }\n\n    /**\r\n     * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(ResponsiveMenu, [{\n      key: '_init',\n      value: function _init() {\n        // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n        if (typeof this.rules === 'string') {\n          var rulesTree = {};\n\n          // Parse rules from \"classes\" pulled from data attribute\n          var rules = this.rules.split(' ');\n\n          // Iterate through every rule found\n          for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i].split('-');\n            var ruleSize = rule.length > 1 ? rule[0] : 'small';\n            var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n            if (MenuPlugins[rulePlugin] !== null) {\n              rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n            }\n          }\n\n          this.rules = rulesTree;\n        }\n\n        if (!$.isEmptyObject(this.rules)) {\n          this._checkMediaQueries();\n        }\n        // Add data-mutate since children may need it.\n        this.$element.attr('data-mutate', this.$element.attr('data-mutate') || Foundation.GetYoDigits(6, 'responsive-menu'));\n      }\n\n      /**\r\n       * Initializes events for the Menu.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          _this._checkMediaQueries();\n        });\n        // $(window).on('resize.zf.ResponsiveMenu', function() {\n        //   _this._checkMediaQueries();\n        // });\n      }\n\n      /**\r\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function _checkMediaQueries() {\n        var matchedMq,\n            _this = this;\n        // Iterate through each rule and find the last matching rule\n        $.each(this.rules, function (key) {\n          if (Foundation.MediaQuery.atLeast(key)) {\n            matchedMq = key;\n          }\n        });\n\n        // No match? No dice\n        if (!matchedMq) return;\n\n        // Plugin already initialized? We good\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n        // Remove existing plugin-specific CSS classes\n        $.each(MenuPlugins, function (key, value) {\n          _this.$element.removeClass(value.cssClass);\n        });\n\n        // Add the CSS class for the new plugin\n        this.$element.addClass(this.rules[matchedMq].cssClass);\n\n        // Create an instance of the new plugin\n        if (this.currentPlugin) this.currentPlugin.destroy();\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n      }\n\n      /**\r\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.currentPlugin.destroy();\n        $(window).off('.zf.ResponsiveMenu');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveMenu;\n  }();\n\n  ResponsiveMenu.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    dropdown: {\n      cssClass: 'dropdown',\n      plugin: Foundation._plugins['dropdown-menu'] || null\n    },\n    drilldown: {\n      cssClass: 'drilldown',\n      plugin: Foundation._plugins['drilldown'] || null\n    },\n    accordion: {\n      cssClass: 'accordion-menu',\n      plugin: Foundation._plugins['accordion-menu'] || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * ResponsiveToggle module.\r\n   * @module foundation.responsiveToggle\r\n   * @requires foundation.util.mediaQuery\r\n   */\n\n  var ResponsiveToggle = function () {\n    /**\r\n     * Creates a new instance of Tab Bar.\r\n     * @class\r\n     * @fires ResponsiveToggle#init\r\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function ResponsiveToggle(element, options) {\n      _classCallCheck(this, ResponsiveToggle);\n\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\n    }\n\n    /**\r\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(ResponsiveToggle, [{\n      key: '_init',\n      value: function _init() {\n        var targetID = this.$element.data('responsive-toggle');\n        if (!targetID) {\n          console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n        }\n\n        this.$targetMenu = $('#' + targetID);\n        this.$toggler = this.$element.find('[data-toggle]').filter(function () {\n          var target = $(this).data('toggle');\n          return target === targetID || target === \"\";\n        });\n        this.options = $.extend({}, this.options, this.$targetMenu.data());\n\n        // If they were set, parse the animation classes\n        if (this.options.animate) {\n          var input = this.options.animate.split(' ');\n\n          this.animationIn = input[0];\n          this.animationOut = input[1] || null;\n        }\n\n        this._update();\n      }\n\n      /**\r\n       * Adds necessary event handlers for the tab bar to work.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this._updateMqHandler = this._update.bind(this);\n\n        $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n        this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n      }\n\n      /**\r\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_update',\n      value: function _update() {\n        // Mobile\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$element.show();\n          this.$targetMenu.hide();\n        }\n\n        // Desktop\n        else {\n            this.$element.hide();\n            this.$targetMenu.show();\n          }\n      }\n\n      /**\r\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\r\n       * @function\r\n       * @fires ResponsiveToggle#toggled\r\n       */\n\n    }, {\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this2 = this;\n\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          /**\r\n           * Fires when the element attached to the tab bar toggles.\r\n           * @event ResponsiveToggle#toggled\r\n           */\n          if (this.options.animate) {\n            if (this.$targetMenu.is(':hidden')) {\n              Foundation.Motion.animateIn(this.$targetMenu, this.animationIn, function () {\n                _this2.$element.trigger('toggled.zf.responsiveToggle');\n                _this2.$targetMenu.find('[data-mutate]').triggerHandler('mutateme.zf.trigger');\n              });\n            } else {\n              Foundation.Motion.animateOut(this.$targetMenu, this.animationOut, function () {\n                _this2.$element.trigger('toggled.zf.responsiveToggle');\n              });\n            }\n          } else {\n            this.$targetMenu.toggle(0);\n            this.$targetMenu.find('[data-mutate]').trigger('mutateme.zf.trigger');\n            this.$element.trigger('toggled.zf.responsiveToggle');\n          }\n        }\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.responsiveToggle');\n        this.$toggler.off('.zf.responsiveToggle');\n\n        $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveToggle;\n  }();\n\n  ResponsiveToggle.defaults = {\n    /**\r\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'medium'\r\n     */\n    hideFor: 'medium',\n\n    /**\r\n     * To decide if the toggle should be animated or not.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    animate: false\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Reveal module.\r\n   * @module foundation.reveal\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.motion if using animations\r\n   */\n\n  var Reveal = function () {\n    /**\r\n     * Creates a new instance of Reveal.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to use for the modal.\r\n     * @param {Object} options - optional parameters.\r\n     */\n\n    function Reveal(element, options) {\n      _classCallCheck(this, Reveal);\n\n      this.$element = element;\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Reveal');\n      Foundation.Keyboard.register('Reveal', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\r\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\r\n     * @private\r\n     */\n\n\n    _createClass(Reveal, [{\n      key: '_init',\n      value: function _init() {\n        this.id = this.$element.attr('id');\n        this.isActive = false;\n        this.cached = { mq: Foundation.MediaQuery.current };\n        this.isMobile = mobileSniff();\n\n        this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': this.id,\n          'aria-haspopup': true,\n          'tabindex': 0\n        });\n\n        if (this.options.fullScreen || this.$element.hasClass('full')) {\n          this.options.fullScreen = true;\n          this.options.overlay = false;\n        }\n        if (this.options.overlay && !this.$overlay) {\n          this.$overlay = this._makeOverlay(this.id);\n        }\n\n        this.$element.attr({\n          'role': 'dialog',\n          'aria-hidden': true,\n          'data-yeti-box': this.id,\n          'data-resize': this.id\n        });\n\n        if (this.$overlay) {\n          this.$element.detach().appendTo(this.$overlay);\n        } else {\n          this.$element.detach().appendTo($(this.options.appendTo));\n          this.$element.addClass('without-overlay');\n        }\n        this._events();\n        if (this.options.deepLink && window.location.hash === '#' + this.id) {\n          $(window).one('load.zf.reveal', this.open.bind(this));\n        }\n      }\n\n      /**\r\n       * Creates an overlay div to display behind the modal.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_makeOverlay',\n      value: function _makeOverlay() {\n        return $('<div></div>').addClass('reveal-overlay').appendTo(this.options.appendTo);\n      }\n\n      /**\r\n       * Updates position of modal\r\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\r\n       * @private\r\n       */\n\n    }, {\n      key: '_updatePosition',\n      value: function _updatePosition() {\n        var width = this.$element.outerWidth();\n        var outerWidth = $(window).width();\n        var height = this.$element.outerHeight();\n        var outerHeight = $(window).height();\n        var left, top;\n        if (this.options.hOffset === 'auto') {\n          left = parseInt((outerWidth - width) / 2, 10);\n        } else {\n          left = parseInt(this.options.hOffset, 10);\n        }\n        if (this.options.vOffset === 'auto') {\n          if (height > outerHeight) {\n            top = parseInt(Math.min(100, outerHeight / 10), 10);\n          } else {\n            top = parseInt((outerHeight - height) / 4, 10);\n          }\n        } else {\n          top = parseInt(this.options.vOffset, 10);\n        }\n        this.$element.css({ top: top + 'px' });\n        // only worry about left if we don't have an overlay or we havea  horizontal offset,\n        // otherwise we're perfectly in the middle\n        if (!this.$overlay || this.options.hOffset !== 'auto') {\n          this.$element.css({ left: left + 'px' });\n          this.$element.css({ margin: '0px' });\n        }\n      }\n\n      /**\r\n       * Adds event handlers for the modal.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        var _this = this;\n\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': function (event, $element) {\n            if (event.target === _this.$element[0] || $(event.target).parents('[data-closable]')[0] === $element) {\n              // only close reveal when it's explicitly called\n              return _this2.close.apply(_this2);\n            }\n          },\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': function () {\n            _this._updatePosition();\n          }\n        });\n\n        if (this.$anchor.length) {\n          this.$anchor.on('keydown.zf.reveal', function (e) {\n            if (e.which === 13 || e.which === 32) {\n              e.stopPropagation();\n              e.preventDefault();\n              _this.open();\n            }\n          });\n        }\n\n        if (this.options.closeOnClick && this.options.overlay) {\n          this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n        if (this.options.deepLink) {\n          $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n        }\n      }\n\n      /**\r\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_handleState',\n      value: function _handleState(e) {\n        if (window.location.hash === '#' + this.id && !this.isActive) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      /**\r\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\r\n       * @function\r\n       * @fires Reveal#closeme\r\n       * @fires Reveal#open\r\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        var _this3 = this;\n\n        if (this.options.deepLink) {\n          var hash = '#' + this.id;\n\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.isActive = true;\n\n        // Make elements invisible, but remove display: none so we can get size and positioning\n        this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\n        if (this.options.overlay) {\n          this.$overlay.css({ 'visibility': 'hidden' }).show();\n        }\n\n        this._updatePosition();\n\n        this.$element.hide().css({ 'visibility': '' });\n\n        if (this.$overlay) {\n          this.$overlay.css({ 'visibility': '' }).hide();\n          if (this.$element.hasClass('fast')) {\n            this.$overlay.addClass('fast');\n          } else if (this.$element.hasClass('slow')) {\n            this.$overlay.addClass('slow');\n          }\n        }\n\n        if (!this.options.multipleOpened) {\n          /**\r\n           * Fires immediately before the modal opens.\r\n           * Closes any other modals that are currently open\r\n           * @event Reveal#closeme\r\n           */\n          this.$element.trigger('closeme.zf.reveal', this.id);\n        }\n\n        var _this = this;\n\n        function addRevealOpenClasses() {\n          if (_this.isMobile) {\n            if (!_this.originalScrollPos) {\n              _this.originalScrollPos = window.pageYOffset;\n            }\n            $('html, body').addClass('is-reveal-open');\n          } else {\n            $('body').addClass('is-reveal-open');\n          }\n        }\n        // Motion UI method of reveal\n        if (this.options.animationIn) {\n          (function () {\n            var afterAnimation = function () {\n              _this.$element.attr({\n                'aria-hidden': false,\n                'tabindex': -1\n              }).focus();\n              addRevealOpenClasses();\n              Foundation.Keyboard.trapFocus(_this.$element);\n            };\n\n            if (_this3.options.overlay) {\n              Foundation.Motion.animateIn(_this3.$overlay, 'fade-in');\n            }\n            Foundation.Motion.animateIn(_this3.$element, _this3.options.animationIn, function () {\n              if (_this3.$element) {\n                // protect against object having been removed\n                _this3.focusableElements = Foundation.Keyboard.findFocusable(_this3.$element);\n                afterAnimation();\n              }\n            });\n          })();\n        }\n        // jQuery method of reveal\n        else {\n            if (this.options.overlay) {\n              this.$overlay.show(0);\n            }\n            this.$element.show(this.options.showDelay);\n          }\n\n        // handle accessibility\n        this.$element.attr({\n          'aria-hidden': false,\n          'tabindex': -1\n        }).focus();\n        Foundation.Keyboard.trapFocus(this.$element);\n\n        /**\r\n         * Fires when the modal has successfully opened.\r\n         * @event Reveal#open\r\n         */\n        this.$element.trigger('open.zf.reveal');\n\n        addRevealOpenClasses();\n\n        setTimeout(function () {\n          _this3._extraHandlers();\n        }, 0);\n      }\n\n      /**\r\n       * Adds extra event handlers for the body and window if necessary.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_extraHandlers',\n      value: function _extraHandlers() {\n        var _this = this;\n        if (!this.$element) {\n          return;\n        } // If we're in the middle of cleanup, don't freak out\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n        if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n          $('body').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n\n        if (this.options.closeOnEsc) {\n          $(window).on('keydown.zf.reveal', function (e) {\n            Foundation.Keyboard.handleKey(e, 'Reveal', {\n              close: function () {\n                if (_this.options.closeOnEsc) {\n                  _this.close();\n                  _this.$anchor.focus();\n                }\n              }\n            });\n          });\n        }\n\n        // lock focus within modal while tabbing\n        this.$element.on('keydown.zf.reveal', function (e) {\n          var $target = $(this);\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Reveal', {\n            open: function () {\n              if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n                setTimeout(function () {\n                  // set focus back to anchor if close button has been activated\n                  _this.$anchor.focus();\n                }, 1);\n              } else if ($target.is(_this.focusableElements)) {\n                // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n                _this.open();\n              }\n            },\n            close: function () {\n              if (_this.options.closeOnEsc) {\n                _this.close();\n                _this.$anchor.focus();\n              }\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n            }\n          });\n        });\n      }\n\n      /**\r\n       * Closes the modal.\r\n       * @function\r\n       * @fires Reveal#closed\r\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.isActive || !this.$element.is(':visible')) {\n          return false;\n        }\n        var _this = this;\n\n        // Motion UI method of hiding\n        if (this.options.animationOut) {\n          if (this.options.overlay) {\n            Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n          } else {\n            finishUp();\n          }\n\n          Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n        }\n        // jQuery method of hiding\n        else {\n\n            this.$element.hide(this.options.hideDelay);\n\n            if (this.options.overlay) {\n              this.$overlay.hide(0, finishUp);\n            } else {\n              finishUp();\n            }\n          }\n\n        // Conditionals to remove extra event listeners added on open\n        if (this.options.closeOnEsc) {\n          $(window).off('keydown.zf.reveal');\n        }\n\n        if (!this.options.overlay && this.options.closeOnClick) {\n          $('body').off('click.zf.reveal');\n        }\n\n        this.$element.off('keydown.zf.reveal');\n\n        function finishUp() {\n          if (_this.isMobile) {\n            if ($('.reveal:visible').length === 0) {\n              $('html, body').removeClass('is-reveal-open');\n            }\n            if (_this.originalScrollPos) {\n              $('body').scrollTop(_this.originalScrollPos);\n              _this.originalScrollPos = null;\n            }\n          } else {\n            if ($('.reveal:visible').length === 0) {\n              $('body').removeClass('is-reveal-open');\n            }\n          }\n\n          Foundation.Keyboard.releaseFocus(_this.$element);\n\n          _this.$element.attr('aria-hidden', true);\n\n          /**\r\n          * Fires when the modal is done closing.\r\n          * @event Reveal#closed\r\n          */\n          _this.$element.trigger('closed.zf.reveal');\n        }\n\n        /**\r\n        * Resets the modal content\r\n        * This prevents a running video to keep going in the background\r\n        */\n        if (this.options.resetOnClose) {\n          this.$element.html(this.$element.html());\n        }\n\n        this.isActive = false;\n        if (_this.options.deepLink) {\n          if (window.history.replaceState) {\n            window.history.replaceState('', document.title, window.location.href.replace('#' + this.id, ''));\n          } else {\n            window.location.hash = '';\n          }\n        }\n      }\n\n      /**\r\n       * Toggles the open/closed state of a modal.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n    }, {\n      key: 'destroy',\n\n\n      /**\r\n       * Destroys an instance of a modal.\r\n       * @function\r\n       */\n      value: function destroy() {\n        if (this.options.overlay) {\n          this.$element.appendTo($(this.options.appendTo)); // move $element outside of $overlay to prevent error unregisterPlugin()\n          this.$overlay.hide().off().remove();\n        }\n        this.$element.hide().off();\n        this.$anchor.off('.zf');\n        $(window).off('.zf.reveal:' + this.id);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Reveal;\n  }();\n\n  Reveal.defaults = {\n    /**\r\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    animationIn: '',\n    /**\r\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    animationOut: '',\n    /**\r\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\r\n     * @option\r\n     * @type {number}\r\n     * @default 0\r\n     */\n    showDelay: 0,\n    /**\r\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\r\n     * @option\r\n     * @type {number}\r\n     * @default 0\r\n     */\n    hideDelay: 0,\n    /**\r\n     * Allows a click on the body/overlay to close the modal.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    closeOnClick: true,\n    /**\r\n     * Allows the modal to close if the user presses the `ESCAPE` key.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    closeOnEsc: true,\n    /**\r\n     * If true, allows multiple modals to be displayed at once.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    multipleOpened: false,\n    /**\r\n     * Distance, in pixels, the modal should push down from the top of the screen.\r\n     * @option\r\n     * @type {number|string}\r\n     * @default auto\r\n     */\n    vOffset: 'auto',\n    /**\r\n     * Distance, in pixels, the modal should push in from the side of the screen.\r\n     * @option\r\n     * @type {number|string}\r\n     * @default auto\r\n     */\n    hOffset: 'auto',\n    /**\r\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    fullScreen: false,\n    /**\r\n     * Percentage of screen height the modal should push up from the bottom of the view.\r\n     * @option\r\n     * @type {number}\r\n     * @default 10\r\n     */\n    btmOffsetPct: 10,\n    /**\r\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    overlay: true,\n    /**\r\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    resetOnClose: false,\n    /**\r\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    deepLink: false,\n    /**\r\n    * Allows the modal to append to custom div.\r\n    * @option\r\n    * @type {string}\r\n    * @default \"body\"\r\n    */\n    appendTo: \"body\"\n\n  };\n\n  // Window exports\n  Foundation.plugin(Reveal, 'Reveal');\n\n  function iPhoneSniff() {\n    return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n    );\n  }\n\n  function androidSniff() {\n    return (/Android/.test(window.navigator.userAgent)\n    );\n  }\n\n  function mobileSniff() {\n    return iPhoneSniff() || androidSniff();\n  }\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Slider module.\r\n   * @module foundation.slider\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.touch\r\n   */\n\n  var Slider = function () {\n    /**\r\n     * Creates a new instance of a slider control.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into a slider control.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Slider(element, options) {\n      _classCallCheck(this, Slider);\n\n      this.$element = element;\n      this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Slider');\n      Foundation.Keyboard.register('Slider', {\n        'ltr': {\n          'ARROW_RIGHT': 'increase',\n          'ARROW_UP': 'increase',\n          'ARROW_DOWN': 'decrease',\n          'ARROW_LEFT': 'decrease',\n          'SHIFT_ARROW_RIGHT': 'increase_fast',\n          'SHIFT_ARROW_UP': 'increase_fast',\n          'SHIFT_ARROW_DOWN': 'decrease_fast',\n          'SHIFT_ARROW_LEFT': 'decrease_fast'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'increase',\n          'ARROW_RIGHT': 'decrease',\n          'SHIFT_ARROW_LEFT': 'increase_fast',\n          'SHIFT_ARROW_RIGHT': 'decrease_fast'\n        }\n      });\n    }\n\n    /**\r\n     * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(Slider, [{\n      key: '_init',\n      value: function _init() {\n        this.inputs = this.$element.find('input');\n        this.handles = this.$element.find('[data-slider-handle]');\n\n        this.$handle = this.handles.eq(0);\n        this.$input = this.inputs.length ? this.inputs.eq(0) : $('#' + this.$handle.attr('aria-controls'));\n        this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n        var isDbl = false,\n            _this = this;\n        if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n          this.options.disabled = true;\n          this.$element.addClass(this.options.disabledClass);\n        }\n        if (!this.inputs.length) {\n          this.inputs = $().add(this.$input);\n          this.options.binding = true;\n        }\n\n        this._setInitAttr(0);\n\n        if (this.handles[1]) {\n          this.options.doubleSided = true;\n          this.$handle2 = this.handles.eq(1);\n          this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $('#' + this.$handle2.attr('aria-controls'));\n\n          if (!this.inputs[1]) {\n            this.inputs = this.inputs.add(this.$input2);\n          }\n          isDbl = true;\n\n          // this.$handle.triggerHandler('click.zf.slider');\n          this._setInitAttr(1);\n        }\n\n        // Set handle positions\n        this.setHandles();\n\n        this._events();\n      }\n    }, {\n      key: 'setHandles',\n      value: function setHandles() {\n        var _this2 = this;\n\n        if (this.handles[1]) {\n          this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true, function () {\n            _this2._setHandlePos(_this2.$handle2, _this2.inputs.eq(1).val(), true);\n          });\n        } else {\n          this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true);\n        }\n      }\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        this.setHandles();\n      }\n      /**\r\n      * @function\r\n      * @private\r\n      * @param {Number} value - floating point (the value) to be transformed using to a relative position on the slider (the inverse of _value)\r\n      */\n\n    }, {\n      key: '_pctOfBar',\n      value: function _pctOfBar(value) {\n        var pctOfBar = percent(value - this.options.start, this.options.end - this.options.start);\n\n        switch (this.options.positionValueFunction) {\n          case \"pow\":\n            pctOfBar = this._logTransform(pctOfBar);\n            break;\n          case \"log\":\n            pctOfBar = this._powTransform(pctOfBar);\n            break;\n        }\n\n        return pctOfBar.toFixed(2);\n      }\n\n      /**\r\n      * @function\r\n      * @private\r\n      * @param {Number} pctOfBar - floating point, the relative position of the slider (typically between 0-1) to be transformed to a value\r\n      */\n\n    }, {\n      key: '_value',\n      value: function _value(pctOfBar) {\n        switch (this.options.positionValueFunction) {\n          case \"pow\":\n            pctOfBar = this._powTransform(pctOfBar);\n            break;\n          case \"log\":\n            pctOfBar = this._logTransform(pctOfBar);\n            break;\n        }\n        var value = (this.options.end - this.options.start) * pctOfBar + this.options.start;\n\n        return value;\n      }\n\n      /**\r\n      * @function\r\n      * @private\r\n      * @param {Number} value - floating point (typically between 0-1) to be transformed using the log function\r\n      */\n\n    }, {\n      key: '_logTransform',\n      value: function _logTransform(value) {\n        return baseLog(this.options.nonLinearBase, value * (this.options.nonLinearBase - 1) + 1);\n      }\n\n      /**\r\n      * @function\r\n      * @private\r\n      * @param {Number} value - floating point (typically between 0-1) to be transformed using the power function\r\n      */\n\n    }, {\n      key: '_powTransform',\n      value: function _powTransform(value) {\n        return (Math.pow(this.options.nonLinearBase, value) - 1) / (this.options.nonLinearBase - 1);\n      }\n\n      /**\r\n       * Sets the position of the selected handle and fill bar.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $hndl - the selected handle to move.\r\n       * @param {Number} location - floating point between the start and end values of the slider bar.\r\n       * @param {Function} cb - callback function to fire on completion.\r\n       * @fires Slider#moved\r\n       * @fires Slider#changed\r\n       */\n\n    }, {\n      key: '_setHandlePos',\n      value: function _setHandlePos($hndl, location, noInvert, cb) {\n        // don't move if the slider has been disabled since its initialization\n        if (this.$element.hasClass(this.options.disabledClass)) {\n          return;\n        }\n        //might need to alter that slightly for bars that will have odd number selections.\n        location = parseFloat(location); //on input change events, convert string to number...grumble.\n\n        // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n        if (location < this.options.start) {\n          location = this.options.start;\n        } else if (location > this.options.end) {\n          location = this.options.end;\n        }\n\n        var isDbl = this.options.doubleSided;\n\n        if (isDbl) {\n          //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n          if (this.handles.index($hndl) === 0) {\n            var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n            location = location >= h2Val ? h2Val - this.options.step : location;\n          } else {\n            var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n            location = location <= h1Val ? h1Val + this.options.step : location;\n          }\n        }\n\n        //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n        //for click and drag events, it's weird due to the scale(-1, 1) css property\n        if (this.options.vertical && !noInvert) {\n          location = this.options.end - location;\n        }\n\n        var _this = this,\n            vert = this.options.vertical,\n            hOrW = vert ? 'height' : 'width',\n            lOrT = vert ? 'top' : 'left',\n            handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n            elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = this._pctOfBar(location),\n\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n        var css = {};\n\n        this._setValues($hndl, location);\n\n        // TODO update to calculate based on values set to respective inputs??\n        if (isDbl) {\n          var isLeftHndl = this.handles.index($hndl) === 0,\n\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n\n          //percentage w/h of the handle compared to the slider bar\n          handlePct = ~ ~(percent(handleDim, elemDim) * 100);\n          //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n          if (isLeftHndl) {\n            //left or top percentage value to apply to the fill bar.\n            css[lOrT] = movement + '%';\n            //calculate the new min-height/width for the fill bar.\n            dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n            //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n            //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n            if (cb && typeof cb === 'function') {\n              cb();\n            } //this is only needed for the initialization of 2 handled sliders\n          } else {\n              //just caching the value of the left/bottom handle's left/top property\n              var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n              //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n              //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n              dim = movement - (isNaN(handlePos) ? (this.options.initialStart - this.options.start) / ((this.options.end - this.options.start) / 100) : handlePos) + handlePct;\n            }\n          // assign the min-height/width to our css object\n          css['min-' + hOrW] = dim + '%';\n        }\n\n        this.$element.one('finished.zf.animate', function () {\n          /**\r\n           * Fires when the handle is done moving.\r\n           * @event Slider#moved\r\n           */\n          _this.$element.trigger('moved.zf.slider', [$hndl]);\n        });\n\n        //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n        var moveTime = this.$element.data('dragging') ? 1000 / 60 : this.options.moveTime;\n\n        Foundation.Move(moveTime, $hndl, function () {\n          // adjusting the left/top property of the handle, based on the percentage calculated above\n          // if movement isNaN, that is because the slider is hidden and we cannot determine handle width,\n          // fall back to next best guess.\n          if (isNaN(movement)) {\n            $hndl.css(lOrT, pctOfBar * 100 + '%');\n          } else {\n            $hndl.css(lOrT, movement + '%');\n          }\n\n          if (!_this.options.doubleSided) {\n            //if single-handled, a simple method to expand the fill bar\n            _this.$fill.css(hOrW, pctOfBar * 100 + '%');\n          } else {\n            //otherwise, use the css object we created above\n            _this.$fill.css(css);\n          }\n        });\n\n        /**\r\n         * Fires when the value has not been change for a given time.\r\n         * @event Slider#changed\r\n         */\n        clearTimeout(_this.timeout);\n        _this.timeout = setTimeout(function () {\n          _this.$element.trigger('changed.zf.slider', [$hndl]);\n        }, _this.options.changedDelay);\n      }\n\n      /**\r\n       * Sets the initial attribute for the slider element.\r\n       * @function\r\n       * @private\r\n       * @param {Number} idx - index of the current handle/input to use.\r\n       */\n\n    }, {\n      key: '_setInitAttr',\n      value: function _setInitAttr(idx) {\n        var initVal = idx === 0 ? this.options.initialStart : this.options.initialEnd;\n        var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\n        this.inputs.eq(idx).attr({\n          'id': id,\n          'max': this.options.end,\n          'min': this.options.start,\n          'step': this.options.step\n        });\n        this.inputs.eq(idx).val(initVal);\n        this.handles.eq(idx).attr({\n          'role': 'slider',\n          'aria-controls': id,\n          'aria-valuemax': this.options.end,\n          'aria-valuemin': this.options.start,\n          'aria-valuenow': initVal,\n          'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n          'tabindex': 0\n        });\n      }\n\n      /**\r\n       * Sets the input and `aria-valuenow` values for the slider element.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the currently selected handle.\r\n       * @param {Number} val - floating point of the new value.\r\n       */\n\n    }, {\n      key: '_setValues',\n      value: function _setValues($handle, val) {\n        var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n        this.inputs.eq(idx).val(val);\n        $handle.attr('aria-valuenow', val);\n      }\n\n      /**\r\n       * Handles events on the slider element.\r\n       * Calculates the new location of the current handle.\r\n       * If there are two handles and the bar was clicked, it determines which handle to move.\r\n       * @function\r\n       * @private\r\n       * @param {Object} e - the `event` object passed from the listener.\r\n       * @param {jQuery} $handle - the current handle to calculate for, if selected.\r\n       * @param {Number} val - floating point number for the new value of the slider.\r\n       * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\r\n       */\n\n    }, {\n      key: '_handleEvent',\n      value: function _handleEvent(e, $handle, val) {\n        var value, hasVal;\n        if (!val) {\n          //click or drag events\n          e.preventDefault();\n          var _this = this,\n              vertical = this.options.vertical,\n              param = vertical ? 'height' : 'width',\n              direction = vertical ? 'top' : 'left',\n              eventOffset = vertical ? e.pageY : e.pageX,\n              halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n              barDim = this.$element[0].getBoundingClientRect()[param],\n              windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\n\n          var elemOffset = this.$element.offset()[direction];\n\n          // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\n          // best way to guess this is simulated is if clientY == pageY\n          if (e.clientY === e.pageY) {\n            eventOffset = eventOffset + windowScroll;\n          }\n          var eventFromBar = eventOffset - elemOffset;\n          var barXY;\n          if (eventFromBar < 0) {\n            barXY = 0;\n          } else if (eventFromBar > barDim) {\n            barXY = barDim;\n          } else {\n            barXY = eventFromBar;\n          }\n          var offsetPct = percent(barXY, barDim);\n\n          value = this._value(offsetPct);\n\n          // turn everything around for RTL, yay math!\n          if (Foundation.rtl() && !this.options.vertical) {\n            value = this.options.end - value;\n          }\n\n          value = _this._adjustValue(null, value);\n          //boolean flag for the setHandlePos fn, specifically for vertical sliders\n          hasVal = false;\n\n          if (!$handle) {\n            //figure out which handle it is, pass it to the next function.\n            var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n                secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n          }\n        } else {\n          //change event on input\n          value = this._adjustValue(null, val);\n          hasVal = true;\n        }\n\n        this._setHandlePos($handle, value, hasVal);\n      }\n\n      /**\r\n       * Adjustes value for handle in regard to step value. returns adjusted value\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the selected handle.\r\n       * @param {Number} value - value to adjust. used if $handle is falsy\r\n       */\n\n    }, {\n      key: '_adjustValue',\n      value: function _adjustValue($handle, value) {\n        var val,\n            step = this.options.step,\n            div = parseFloat(step / 2),\n            left,\n            prev_val,\n            next_val;\n        if (!!$handle) {\n          val = parseFloat($handle.attr('aria-valuenow'));\n        } else {\n          val = value;\n        }\n        left = val % step;\n        prev_val = val - left;\n        next_val = prev_val + step;\n        if (left === 0) {\n          return val;\n        }\n        val = val >= prev_val + div ? next_val : prev_val;\n        return val;\n      }\n\n      /**\r\n       * Adds event listeners to the slider elements.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this._eventsForHandle(this.$handle);\n        if (this.handles[1]) {\n          this._eventsForHandle(this.$handle2);\n        }\n      }\n\n      /**\r\n       * Adds event listeners a particular handle\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the current handle to apply listeners to.\r\n       */\n\n    }, {\n      key: '_eventsForHandle',\n      value: function _eventsForHandle($handle) {\n        var _this = this,\n            curHandle,\n            timer;\n\n        this.inputs.off('change.zf.slider').on('change.zf.slider', function (e) {\n          var idx = _this.inputs.index($(this));\n          _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n        });\n\n        if (this.options.clickSelect) {\n          this.$element.off('click.zf.slider').on('click.zf.slider', function (e) {\n            if (_this.$element.data('dragging')) {\n              return false;\n            }\n\n            if (!$(e.target).is('[data-slider-handle]')) {\n              if (_this.options.doubleSided) {\n                _this._handleEvent(e);\n              } else {\n                _this._handleEvent(e, _this.$handle);\n              }\n            }\n          });\n        }\n\n        if (this.options.draggable) {\n          this.handles.addTouch();\n\n          var $body = $('body');\n          $handle.off('mousedown.zf.slider').on('mousedown.zf.slider', function (e) {\n            $handle.addClass('is-dragging');\n            _this.$fill.addClass('is-dragging'); //\n            _this.$element.data('dragging', true);\n\n            curHandle = $(e.currentTarget);\n\n            $body.on('mousemove.zf.slider', function (e) {\n              e.preventDefault();\n              _this._handleEvent(e, curHandle);\n            }).on('mouseup.zf.slider', function (e) {\n              _this._handleEvent(e, curHandle);\n\n              $handle.removeClass('is-dragging');\n              _this.$fill.removeClass('is-dragging');\n              _this.$element.data('dragging', false);\n\n              $body.off('mousemove.zf.slider mouseup.zf.slider');\n            });\n          })\n          // prevent events triggered by touch\n          .on('selectstart.zf.slider touchmove.zf.slider', function (e) {\n            e.preventDefault();\n          });\n        }\n\n        $handle.off('keydown.zf.slider').on('keydown.zf.slider', function (e) {\n          var _$handle = $(this),\n              idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n              oldValue = parseFloat(_this.inputs.eq(idx).val()),\n              newValue;\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Slider', {\n            decrease: function () {\n              newValue = oldValue - _this.options.step;\n            },\n            increase: function () {\n              newValue = oldValue + _this.options.step;\n            },\n            decrease_fast: function () {\n              newValue = oldValue - _this.options.step * 10;\n            },\n            increase_fast: function () {\n              newValue = oldValue + _this.options.step * 10;\n            },\n            handled: function () {\n              // only set handle pos when event was handled specially\n              e.preventDefault();\n              _this._setHandlePos(_$handle, newValue, true);\n            }\n          });\n          /*if (newValue) { // if pressed key has special function, update value\r\n            e.preventDefault();\r\n            _this._setHandlePos(_$handle, newValue);\r\n          }*/\n        });\n      }\n\n      /**\r\n       * Destroys the slider plugin.\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.handles.off('.zf.slider');\n        this.inputs.off('.zf.slider');\n        this.$element.off('.zf.slider');\n\n        clearTimeout(this.timeout);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Slider;\n  }();\n\n  Slider.defaults = {\n    /**\r\n     * Minimum value for the slider scale.\r\n     * @option\r\n     * @type {number}\r\n     * @default 0\r\n     */\n    start: 0,\n    /**\r\n     * Maximum value for the slider scale.\r\n     * @option\r\n     * @type {number}\r\n     * @default 100\r\n     */\n    end: 100,\n    /**\r\n     * Minimum value change per change event.\r\n     * @option\r\n     * @type {number}\r\n     * @default 1\r\n     */\n    step: 1,\n    /**\r\n     * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\r\n     * @option\r\n     * @type {number}\r\n     * @default 0\r\n     */\n    initialStart: 0,\n    /**\r\n     * Value at which the right handle/second input should be set to on initialization.\r\n     * @option\r\n     * @type {number}\r\n     * @default 100\r\n     */\n    initialEnd: 100,\n    /**\r\n     * Allows the input to be located outside the container and visible. Set to by the JS\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    binding: false,\n    /**\r\n     * Allows the user to click/tap on the slider bar to select a value.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    clickSelect: true,\n    /**\r\n     * Set to true and use the `vertical` class to change alignment to vertical.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    vertical: false,\n    /**\r\n     * Allows the user to drag the slider handle(s) to select a value.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    draggable: true,\n    /**\r\n     * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    disabled: false,\n    /**\r\n     * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    doubleSided: false,\n    /**\r\n     * Potential future feature.\r\n     */\n    // steps: 100,\n    /**\r\n     * Number of decimal places the plugin should go to for floating point precision.\r\n     * @option\r\n     * @type {number}\r\n     * @default 2\r\n     */\n    decimal: 2,\n    /**\r\n     * Time delay for dragged elements.\r\n     */\n    // dragDelay: 0,\n    /**\r\n     * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\r\n     * @option\r\n     * @type {number}\r\n     * @default 200\r\n     */\n    moveTime: 200, //update this if changing the transition time in the sass\n    /**\r\n     * Class applied to disabled sliders.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'disabled'\r\n     */\n    disabledClass: 'disabled',\n    /**\r\n     * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    invertVertical: false,\n    /**\r\n     * Milliseconds before the `changed.zf-slider` event is triggered after value change.\r\n     * @option\r\n     * @type {number}\r\n     * @default 500\r\n     */\n    changedDelay: 500,\n    /**\r\n    * Basevalue for non-linear sliders\r\n    * @option\r\n    * @type {number}\r\n    * @default 5\r\n    */\n    nonLinearBase: 5,\n    /**\r\n    * Basevalue for non-linear sliders, possible values are: `'linear'`, `'pow'` & `'log'`. Pow and Log use the nonLinearBase setting.\r\n    * @option\r\n    * @type {string}\r\n    * @default 'linear'\r\n    */\n    positionValueFunction: 'linear'\n  };\n\n  function percent(frac, num) {\n    return frac / num;\n  }\n  function absPosition($handle, dir, clickPos, param) {\n    return Math.abs($handle.position()[dir] + $handle[param]() / 2 - clickPos);\n  }\n  function baseLog(base, value) {\n    return Math.log(value) / Math.log(base);\n  }\n\n  // Window exports\n  Foundation.plugin(Slider, 'Slider');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Sticky module.\r\n   * @module foundation.sticky\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   */\n\n  var Sticky = function () {\n    /**\r\n     * Creates a new instance of a sticky thing.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make sticky.\r\n     * @param {Object} options - options object passed when creating the element programmatically.\r\n     */\n\n    function Sticky(element, options) {\n      _classCallCheck(this, Sticky);\n\n      this.$element = element;\n      this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Sticky');\n    }\n\n    /**\r\n     * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(Sticky, [{\n      key: '_init',\n      value: function _init() {\n        var $parent = this.$element.parent('[data-sticky-container]'),\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n            _this = this;\n\n        if (!$parent.length) {\n          this.wasWrapped = true;\n        }\n        this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n        this.$container.addClass(this.options.containerClass);\n\n        this.$element.addClass(this.options.stickyClass).attr({ 'data-resize': id, 'data-mutate': id });\n        if (this.options.anchor !== '') {\n          $('#' + _this.options.anchor).attr({ 'data-mutate': id });\n        }\n\n        this.scrollCount = this.options.checkEvery;\n        this.isStuck = false;\n        $(window).one('load.zf.sticky', function () {\n          //We calculate the container height to have correct values for anchor points offset calculation.\n          _this.containerHeight = _this.$element.css(\"display\") == \"none\" ? 0 : _this.$element[0].getBoundingClientRect().height;\n          _this.$container.css('height', _this.containerHeight);\n          _this.elemHeight = _this.containerHeight;\n          if (_this.options.anchor !== '') {\n            _this.$anchor = $('#' + _this.options.anchor);\n          } else {\n            _this._parsePoints();\n          }\n\n          _this._setSizes(function () {\n            var scroll = window.pageYOffset;\n            _this._calc(false, scroll);\n            //Unstick the element will ensure that proper classes are set.\n            if (!_this.isStuck) {\n              _this._removeSticky(scroll >= _this.topPoint ? false : true);\n            }\n          });\n          _this._events(id.split('-').reverse().join('-'));\n        });\n      }\n\n      /**\r\n       * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_parsePoints',\n      value: function _parsePoints() {\n        var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\n            btm = this.options.btmAnchor == \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\n            pts = [top, btm],\n            breaks = {};\n        for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n          var pt;\n          if (typeof pts[i] === 'number') {\n            pt = pts[i];\n          } else {\n            var place = pts[i].split(':'),\n                anchor = $('#' + place[0]);\n\n            pt = anchor.offset().top;\n            if (place[1] && place[1].toLowerCase() === 'bottom') {\n              pt += anchor[0].getBoundingClientRect().height;\n            }\n          }\n          breaks[i] = pt;\n        }\n\n        this.points = breaks;\n        return;\n      }\n\n      /**\r\n       * Adds event handlers for the scrolling element.\r\n       * @private\r\n       * @param {String} id - psuedo-random id for unique scroll event listener.\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events(id) {\n        var _this = this,\n            scrollListener = this.scrollListener = 'scroll.zf.' + id;\n        if (this.isOn) {\n          return;\n        }\n        if (this.canStick) {\n          this.isOn = true;\n          $(window).off(scrollListener).on(scrollListener, function (e) {\n            if (_this.scrollCount === 0) {\n              _this.scrollCount = _this.options.checkEvery;\n              _this._setSizes(function () {\n                _this._calc(false, window.pageYOffset);\n              });\n            } else {\n              _this.scrollCount--;\n              _this._calc(false, window.pageYOffset);\n            }\n          });\n        }\n\n        this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger', function (e, el) {\n          _this._eventsHandler(id);\n        });\n\n        this.$element.on('mutateme.zf.trigger', function (e, el) {\n          _this._eventsHandler(id);\n        });\n\n        if (this.$anchor) {\n          this.$anchor.on('mutateme.zf.trigger', function (e, el) {\n            _this._eventsHandler(id);\n          });\n        }\n      }\n\n      /**\r\n       * Handler for events.\r\n       * @private\r\n       * @param {String} id - psuedo-random id for unique scroll event listener.\r\n       */\n\n    }, {\n      key: '_eventsHandler',\n      value: function _eventsHandler(id) {\n        var _this = this,\n            scrollListener = this.scrollListener = 'scroll.zf.' + id;\n\n        _this._setSizes(function () {\n          _this._calc(false);\n          if (_this.canStick) {\n            if (!_this.isOn) {\n              _this._events(id);\n            }\n          } else if (_this.isOn) {\n            _this._pauseListeners(scrollListener);\n          }\n        });\n      }\n\n      /**\r\n       * Removes event handlers for scroll and change events on anchor.\r\n       * @fires Sticky#pause\r\n       * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\r\n       */\n\n    }, {\n      key: '_pauseListeners',\n      value: function _pauseListeners(scrollListener) {\n        this.isOn = false;\n        $(window).off(scrollListener);\n\n        /**\r\n         * Fires when the plugin is paused due to resize event shrinking the view.\r\n         * @event Sticky#pause\r\n         * @private\r\n         */\n        this.$element.trigger('pause.zf.sticky');\n      }\n\n      /**\r\n       * Called on every `scroll` event and on `_init`\r\n       * fires functions based on booleans and cached values\r\n       * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\r\n       * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\r\n       */\n\n    }, {\n      key: '_calc',\n      value: function _calc(checkSizes, scroll) {\n        if (checkSizes) {\n          this._setSizes();\n        }\n\n        if (!this.canStick) {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n          return false;\n        }\n\n        if (!scroll) {\n          scroll = window.pageYOffset;\n        }\n\n        if (scroll >= this.topPoint) {\n          if (scroll <= this.bottomPoint) {\n            if (!this.isStuck) {\n              this._setSticky();\n            }\n          } else {\n            if (this.isStuck) {\n              this._removeSticky(false);\n            }\n          }\n        } else {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n        }\n      }\n\n      /**\r\n       * Causes the $element to become stuck.\r\n       * Adds `position: fixed;`, and helper classes.\r\n       * @fires Sticky#stuckto\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setSticky',\n      value: function _setSticky() {\n        var _this = this,\n            stickTo = this.options.stickTo,\n            mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n            css = {};\n\n        css[mrgn] = this.options[mrgn] + 'em';\n        css[stickTo] = 0;\n        css[notStuckTo] = 'auto';\n        this.isStuck = true;\n        this.$element.removeClass('is-anchored is-at-' + notStuckTo).addClass('is-stuck is-at-' + stickTo).css(css)\n        /**\r\n         * Fires when the $element has become `position: fixed;`\r\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\r\n         * @event Sticky#stuckto\r\n         */\n        .trigger('sticky.zf.stuckto:' + stickTo);\n        this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function () {\n          _this._setSizes();\n        });\n      }\n\n      /**\r\n       * Causes the $element to become unstuck.\r\n       * Removes `position: fixed;`, and helper classes.\r\n       * Adds other helper classes.\r\n       * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\r\n       * @fires Sticky#unstuckfrom\r\n       * @private\r\n       */\n\n    }, {\n      key: '_removeSticky',\n      value: function _removeSticky(isTop) {\n        var stickTo = this.options.stickTo,\n            stickToTop = stickTo === 'top',\n            css = {},\n            anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n            mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickToTop ? 'bottom' : 'top',\n            topOrBottom = isTop ? 'top' : 'bottom';\n\n        css[mrgn] = 0;\n\n        css['bottom'] = 'auto';\n        if (isTop) {\n          css['top'] = 0;\n        } else {\n          css['top'] = anchorPt;\n        }\n\n        this.isStuck = false;\n        this.$element.removeClass('is-stuck is-at-' + stickTo).addClass('is-anchored is-at-' + topOrBottom).css(css)\n        /**\r\n         * Fires when the $element has become anchored.\r\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\r\n         * @event Sticky#unstuckfrom\r\n         */\n        .trigger('sticky.zf.unstuckfrom:' + topOrBottom);\n      }\n\n      /**\r\n       * Sets the $element and $container sizes for plugin.\r\n       * Calls `_setBreakPoints`.\r\n       * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setSizes',\n      value: function _setSizes(cb) {\n        this.canStick = Foundation.MediaQuery.is(this.options.stickyOn);\n        if (!this.canStick) {\n          if (cb && typeof cb === 'function') {\n            cb();\n          }\n        }\n        var _this = this,\n            newElemWidth = this.$container[0].getBoundingClientRect().width,\n            comp = window.getComputedStyle(this.$container[0]),\n            pdngl = parseInt(comp['padding-left'], 10),\n            pdngr = parseInt(comp['padding-right'], 10);\n\n        if (this.$anchor && this.$anchor.length) {\n          this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n        } else {\n          this._parsePoints();\n        }\n\n        this.$element.css({\n          'max-width': newElemWidth - pdngl - pdngr + 'px'\n        });\n\n        var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n        if (this.$element.css(\"display\") == \"none\") {\n          newContainerHeight = 0;\n        }\n        this.containerHeight = newContainerHeight;\n        this.$container.css({\n          height: newContainerHeight\n        });\n        this.elemHeight = newContainerHeight;\n\n        if (!this.isStuck) {\n          if (this.$element.hasClass('is-at-bottom')) {\n            var anchorPt = (this.points ? this.points[1] - this.$container.offset().top : this.anchorHeight) - this.elemHeight;\n            this.$element.css('top', anchorPt);\n          }\n        }\n\n        this._setBreakPoints(newContainerHeight, function () {\n          if (cb && typeof cb === 'function') {\n            cb();\n          }\n        });\n      }\n\n      /**\r\n       * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\r\n       * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\r\n       * @param {Function} cb - optional callback function to be called on completion.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setBreakPoints',\n      value: function _setBreakPoints(elemHeight, cb) {\n        if (!this.canStick) {\n          if (cb && typeof cb === 'function') {\n            cb();\n          } else {\n            return false;\n          }\n        }\n        var mTop = emCalc(this.options.marginTop),\n            mBtm = emCalc(this.options.marginBottom),\n            topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n            bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n\n        // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n        if (this.options.stickTo === 'top') {\n          topPoint -= mTop;\n          bottomPoint -= elemHeight + mTop;\n        } else if (this.options.stickTo === 'bottom') {\n          topPoint -= winHeight - (elemHeight + mBtm);\n          bottomPoint -= winHeight - mBtm;\n        } else {\n          //this would be the stickTo: both option... tricky\n        }\n\n        this.topPoint = topPoint;\n        this.bottomPoint = bottomPoint;\n\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }\n\n      /**\r\n       * Destroys the current sticky element.\r\n       * Resets the element to the top position first.\r\n       * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._removeSticky(true);\n\n        this.$element.removeClass(this.options.stickyClass + ' is-anchored is-at-top').css({\n          height: '',\n          top: '',\n          bottom: '',\n          'max-width': ''\n        }).off('resizeme.zf.trigger').off('mutateme.zf.trigger');\n        if (this.$anchor && this.$anchor.length) {\n          this.$anchor.off('change.zf.sticky');\n        }\n        $(window).off(this.scrollListener);\n\n        if (this.wasWrapped) {\n          this.$element.unwrap();\n        } else {\n          this.$container.removeClass(this.options.containerClass).css({\n            height: ''\n          });\n        }\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Sticky;\n  }();\n\n  Sticky.defaults = {\n    /**\r\n     * Customizable container template. Add your own classes for styling and sizing.\r\n     * @option\r\n     * @type {string}\r\n     * @default '&lt;div data-sticky-container&gt;&lt;/div&gt;'\r\n     */\n    container: '<div data-sticky-container></div>',\n    /**\r\n     * Location in the view the element sticks to. Can be `'top'` or `'bottom'`.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'top'\r\n     */\n    stickTo: 'top',\n    /**\r\n     * If anchored to a single element, the id of that element.\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    anchor: '',\n    /**\r\n     * If using more than one element as anchor points, the id of the top anchor.\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    topAnchor: '',\n    /**\r\n     * If using more than one element as anchor points, the id of the bottom anchor.\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    btmAnchor: '',\n    /**\r\n     * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\r\n     * @option\r\n     * @type {number}\r\n     * @default 1\r\n     */\n    marginTop: 1,\n    /**\r\n     * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\r\n     * @option\r\n     * @type {number}\r\n     * @default 1\r\n     */\n    marginBottom: 1,\n    /**\r\n     * Breakpoint string that is the minimum screen size an element should become sticky.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'medium'\r\n     */\n    stickyOn: 'medium',\n    /**\r\n     * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'sticky'\r\n     */\n    stickyClass: 'sticky',\n    /**\r\n     * Class applied to sticky container. Foundation defaults to `sticky-container`.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'sticky-container'\r\n     */\n    containerClass: 'sticky-container',\n    /**\r\n     * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\r\n     * @option\r\n     * @type {number}\r\n     * @default -1\r\n     */\n    checkEvery: -1\n  };\n\n  /**\r\n   * Helper function to calculate em values\r\n   * @param Number {em} - number of em's to calculate into pixels\r\n   */\n  function emCalc(em) {\n    return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n  }\n\n  // Window exports\n  Foundation.plugin(Sticky, 'Sticky');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Tabs module.\r\n   * @module foundation.tabs\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\r\n   */\n\n  var Tabs = function () {\n    /**\r\n     * Creates a new instance of tabs.\r\n     * @class\r\n     * @fires Tabs#init\r\n     * @param {jQuery} element - jQuery object to make into tabs.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Tabs(element, options) {\n      _classCallCheck(this, Tabs);\n\n      this.$element = element;\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n      this._init();\n      Foundation.registerPlugin(this, 'Tabs');\n      Foundation.Keyboard.register('Tabs', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'previous',\n        'ARROW_DOWN': 'next',\n        'ARROW_LEFT': 'previous'\n        // 'TAB': 'next',\n        // 'SHIFT_TAB': 'previous'\n      });\n    }\n\n    /**\r\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\r\n     * @private\r\n     */\n\n\n    _createClass(Tabs, [{\n      key: '_init',\n      value: function _init() {\n        var _this2 = this;\n\n        var _this = this;\n\n        this.$element.attr({ 'role': 'tablist' });\n        this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n        this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n        this.$tabTitles.each(function () {\n          var $elem = $(this),\n              $link = $elem.find('a'),\n              isActive = $elem.hasClass('' + _this.options.linkActiveClass),\n              hash = $link[0].hash.slice(1),\n              linkId = $link[0].id ? $link[0].id : hash + '-label',\n              $tabContent = $('#' + hash);\n\n          $elem.attr({ 'role': 'presentation' });\n\n          $link.attr({\n            'role': 'tab',\n            'aria-controls': hash,\n            'aria-selected': isActive,\n            'id': linkId\n          });\n\n          $tabContent.attr({\n            'role': 'tabpanel',\n            'aria-hidden': !isActive,\n            'aria-labelledby': linkId\n          });\n\n          if (isActive && _this.options.autoFocus) {\n            $(window).load(function () {\n              $('html, body').animate({ scrollTop: $elem.offset().top }, _this.options.deepLinkSmudgeDelay, function () {\n                $link.focus();\n              });\n            });\n          }\n        });\n        if (this.options.matchHeight) {\n          var $images = this.$tabContent.find('img');\n\n          if ($images.length) {\n            Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n          } else {\n            this._setHeight();\n          }\n        }\n\n        //current context-bound function to open tabs on page load or history popstate\n        this._checkDeepLink = function () {\n          var anchor = window.location.hash;\n          //need a hash and a relevant anchor in this tabset\n          if (anchor.length) {\n            var $link = _this2.$element.find('[href$=\"' + anchor + '\"]');\n            if ($link.length) {\n              _this2.selectTab($(anchor), true);\n\n              //roll up a little to show the titles\n              if (_this2.options.deepLinkSmudge) {\n                var offset = _this2.$element.offset();\n                $('html, body').animate({ scrollTop: offset.top }, _this2.options.deepLinkSmudgeDelay);\n              }\n\n              /**\r\n                * Fires when the zplugin has deeplinked at pageload\r\n                * @event Tabs#deeplink\r\n                */\n              _this2.$element.trigger('deeplink.zf.tabs', [$link, $(anchor)]);\n            }\n          }\n        };\n\n        //use browser to open a tab, if it exists in this tabset\n        if (this.options.deepLink) {\n          this._checkDeepLink();\n        }\n\n        this._events();\n      }\n\n      /**\r\n       * Adds event handlers for items within the tabs.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this._addKeyHandler();\n        this._addClickHandler();\n        this._setHeightMqHandler = null;\n\n        if (this.options.matchHeight) {\n          this._setHeightMqHandler = this._setHeight.bind(this);\n\n          $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n        }\n\n        if (this.options.deepLink) {\n          $(window).on('popstate', this._checkDeepLink);\n        }\n      }\n\n      /**\r\n       * Adds click handlers for items within the tabs.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_addClickHandler',\n      value: function _addClickHandler() {\n        var _this = this;\n\n        this.$element.off('click.zf.tabs').on('click.zf.tabs', '.' + this.options.linkClass, function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          _this._handleTabChange($(this));\n        });\n      }\n\n      /**\r\n       * Adds keyboard event handlers for items within the tabs.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_addKeyHandler',\n      value: function _addKeyHandler() {\n        var _this = this;\n\n        this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n          if (e.which === 9) return;\n\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              if (_this.options.wrapOnKeys) {\n                $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n                $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n              } else {\n                $prevElement = $elements.eq(Math.max(0, i - 1));\n                $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              }\n              return;\n            }\n          });\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Tabs', {\n            open: function () {\n              $element.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($element);\n            },\n            previous: function () {\n              $prevElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($prevElement);\n            },\n            next: function () {\n              $nextElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($nextElement);\n            },\n            handled: function () {\n              e.stopPropagation();\n              e.preventDefault();\n            }\n          });\n        });\n      }\n\n      /**\r\n       * Opens the tab `$targetContent` defined by `$target`. Collapses active tab.\r\n       * @param {jQuery} $target - Tab to open.\r\n       * @param {boolean} historyHandled - browser has already handled a history update\r\n       * @fires Tabs#change\r\n       * @function\r\n       */\n\n    }, {\n      key: '_handleTabChange',\n      value: function _handleTabChange($target, historyHandled) {\n\n        /**\r\n         * Check for active class on target. Collapse if exists.\r\n         */\n        if ($target.hasClass('' + this.options.linkActiveClass)) {\n          if (this.options.activeCollapse) {\n            this._collapseTab($target);\n\n            /**\r\n             * Fires when the zplugin has successfully collapsed tabs.\r\n             * @event Tabs#collapse\r\n             */\n            this.$element.trigger('collapse.zf.tabs', [$target]);\n          }\n          return;\n        }\n\n        var $oldTab = this.$element.find('.' + this.options.linkClass + '.' + this.options.linkActiveClass),\n            $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash);\n\n        //close old tab\n        this._collapseTab($oldTab);\n\n        //open new tab\n        this._openTab($target);\n\n        //either replace or update browser history\n        if (this.options.deepLink && !historyHandled) {\n          var anchor = $target.find('a').attr('href');\n\n          if (this.options.updateHistory) {\n            history.pushState({}, '', anchor);\n          } else {\n            history.replaceState({}, '', anchor);\n          }\n        }\n\n        /**\r\n         * Fires when the plugin has successfully changed tabs.\r\n         * @event Tabs#change\r\n         */\n        this.$element.trigger('change.zf.tabs', [$target, $targetContent]);\n\n        //fire to children a mutation event\n        $targetContent.find(\"[data-mutate]\").trigger(\"mutateme.zf.trigger\");\n      }\n\n      /**\r\n       * Opens the tab `$targetContent` defined by `$target`.\r\n       * @param {jQuery} $target - Tab to Open.\r\n       * @function\r\n       */\n\n    }, {\n      key: '_openTab',\n      value: function _openTab($target) {\n        var $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash);\n\n        $target.addClass('' + this.options.linkActiveClass);\n\n        $tabLink.attr({ 'aria-selected': 'true' });\n\n        $targetContent.addClass('' + this.options.panelActiveClass).attr({ 'aria-hidden': 'false' });\n      }\n\n      /**\r\n       * Collapses `$targetContent` defined by `$target`.\r\n       * @param {jQuery} $target - Tab to Open.\r\n       * @function\r\n       */\n\n    }, {\n      key: '_collapseTab',\n      value: function _collapseTab($target) {\n        var $target_anchor = $target.removeClass('' + this.options.linkActiveClass).find('[role=\"tab\"]').attr({ 'aria-selected': 'false' });\n\n        $('#' + $target_anchor.attr('aria-controls')).removeClass('' + this.options.panelActiveClass).attr({ 'aria-hidden': 'true' });\n      }\n\n      /**\r\n       * Public method for selecting a content pane to display.\r\n       * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\r\n       * @param {boolean} historyHandled - browser has already handled a history update\r\n       * @function\r\n       */\n\n    }, {\n      key: 'selectTab',\n      value: function selectTab(elem, historyHandled) {\n        var idStr;\n\n        if (typeof elem === 'object') {\n          idStr = elem[0].id;\n        } else {\n          idStr = elem;\n        }\n\n        if (idStr.indexOf('#') < 0) {\n          idStr = '#' + idStr;\n        }\n\n        var $target = this.$tabTitles.find('[href$=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n        this._handleTabChange($target, historyHandled);\n      }\n    }, {\n      key: '_setHeight',\n\n      /**\r\n       * Sets the height of each panel to the height of the tallest panel.\r\n       * If enabled in options, gets called on media query change.\r\n       * If loading content via external source, can be called directly or with _reflow.\r\n       * If enabled with `data-match-height=\"true\"`, tabs sets to equal height\r\n       * @function\r\n       * @private\r\n       */\n      value: function _setHeight() {\n        var max = 0,\n            _this = this; // Lock down the `this` value for the root tabs object\n\n        this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\n\n          var panel = $(this),\n              isActive = panel.hasClass('' + _this.options.panelActiveClass); // get the options from the parent instead of trying to get them from the child\n\n          if (!isActive) {\n            panel.css({ 'visibility': 'hidden', 'display': 'block' });\n          }\n\n          var temp = this.getBoundingClientRect().height;\n\n          if (!isActive) {\n            panel.css({\n              'visibility': '',\n              'display': ''\n            });\n          }\n\n          max = temp > max ? temp : max;\n        }).css('height', max + 'px');\n      }\n\n      /**\r\n       * Destroys an instance of an tabs.\r\n       * @fires Tabs#destroyed\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\n\n        if (this.options.matchHeight) {\n          if (this._setHeightMqHandler != null) {\n            $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n          }\n        }\n\n        if (this.options.deepLink) {\n          $(window).off('popstate', this._checkDeepLink);\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tabs;\n  }();\n\n  Tabs.defaults = {\n    /**\r\n     * Allows the window to scroll to content of pane specified by hash anchor\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    deepLink: false,\n\n    /**\r\n     * Adjust the deep link scroll to make sure the top of the tab panel is visible\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    deepLinkSmudge: false,\n\n    /**\r\n     * Animation time (ms) for the deep link adjustment\r\n     * @option\r\n     * @type {number}\r\n     * @default 300\r\n     */\n    deepLinkSmudgeDelay: 300,\n\n    /**\r\n     * Update the browser history with the open tab\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    updateHistory: false,\n\n    /**\r\n     * Allows the window to scroll to content of active pane on load if set to true.\r\n     * Not recommended if more than one tab panel per page.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    autoFocus: false,\n\n    /**\r\n     * Allows keyboard input to 'wrap' around the tab links.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    wrapOnKeys: true,\n\n    /**\r\n     * Allows the tab content panes to match heights if set to true.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    matchHeight: false,\n\n    /**\r\n     * Allows active tabs to collapse when clicked.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    activeCollapse: false,\n\n    /**\r\n     * Class applied to `li`'s in tab link list.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'tabs-title'\r\n     */\n    linkClass: 'tabs-title',\n\n    /**\r\n     * Class applied to the active `li` in tab link list.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'is-active'\r\n     */\n    linkActiveClass: 'is-active',\n\n    /**\r\n     * Class applied to the content containers.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'tabs-panel'\r\n     */\n    panelClass: 'tabs-panel',\n\n    /**\r\n     * Class applied to the active content container.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'is-active'\r\n     */\n    panelActiveClass: 'is-active'\n  };\n\n  // Window exports\n  Foundation.plugin(Tabs, 'Tabs');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Toggler module.\r\n   * @module foundation.toggler\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.triggers\r\n   */\n\n  var Toggler = function () {\n    /**\r\n     * Creates a new instance of Toggler.\r\n     * @class\r\n     * @fires Toggler#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function Toggler(element, options) {\n      _classCallCheck(this, Toggler);\n\n      this.$element = element;\n      this.options = $.extend({}, Toggler.defaults, element.data(), options);\n      this.className = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Toggler');\n    }\n\n    /**\r\n     * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(Toggler, [{\n      key: '_init',\n      value: function _init() {\n        var input;\n        // Parse animation classes if they were set\n        if (this.options.animate) {\n          input = this.options.animate.split(' ');\n\n          this.animationIn = input[0];\n          this.animationOut = input[1] || null;\n        }\n        // Otherwise, parse toggle class\n        else {\n            input = this.$element.data('toggler');\n            // Allow for a . at the beginning of the string\n            this.className = input[0] === '.' ? input.slice(1) : input;\n          }\n\n        // Add ARIA attributes to triggers\n        var id = this.$element[0].id;\n        $('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-controls', id);\n        // If the target is hidden, add aria-hidden\n        this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n      }\n\n      /**\r\n       * Initializes events for the toggle trigger.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n      }\n\n      /**\r\n       * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\r\n       * @function\r\n       * @fires Toggler#on\r\n       * @fires Toggler#off\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        this[this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n      }\n    }, {\n      key: '_toggleClass',\n      value: function _toggleClass() {\n        this.$element.toggleClass(this.className);\n\n        var isOn = this.$element.hasClass(this.className);\n        if (isOn) {\n          /**\r\n           * Fires if the target element has the class after a toggle.\r\n           * @event Toggler#on\r\n           */\n          this.$element.trigger('on.zf.toggler');\n        } else {\n          /**\r\n           * Fires if the target element does not have the class after a toggle.\r\n           * @event Toggler#off\r\n           */\n          this.$element.trigger('off.zf.toggler');\n        }\n\n        this._updateARIA(isOn);\n        this.$element.find('[data-mutate]').trigger('mutateme.zf.trigger');\n      }\n    }, {\n      key: '_toggleAnimate',\n      value: function _toggleAnimate() {\n        var _this = this;\n\n        if (this.$element.is(':hidden')) {\n          Foundation.Motion.animateIn(this.$element, this.animationIn, function () {\n            _this._updateARIA(true);\n            this.trigger('on.zf.toggler');\n            this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n          });\n        } else {\n          Foundation.Motion.animateOut(this.$element, this.animationOut, function () {\n            _this._updateARIA(false);\n            this.trigger('off.zf.toggler');\n            this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n          });\n        }\n      }\n    }, {\n      key: '_updateARIA',\n      value: function _updateARIA(isOn) {\n        this.$element.attr('aria-expanded', isOn ? true : false);\n      }\n\n      /**\r\n       * Destroys the instance of Toggler on the element.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.toggler');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Toggler;\n  }();\n\n  Toggler.defaults = {\n    /**\r\n     * Tells the plugin if the element should animated when toggled.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    animate: false\n  };\n\n  // Window exports\n  Foundation.plugin(Toggler, 'Toggler');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * Tooltip module.\r\n   * @module foundation.tooltip\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.triggers\r\n   */\n\n  var Tooltip = function () {\n    /**\r\n     * Creates a new instance of a Tooltip.\r\n     * @class\r\n     * @fires Tooltip#init\r\n     * @param {jQuery} element - jQuery object to attach a tooltip to.\r\n     * @param {Object} options - object to extend the default configuration.\r\n     */\n\n    function Tooltip(element, options) {\n      _classCallCheck(this, Tooltip);\n\n      this.$element = element;\n      this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n      this.isActive = false;\n      this.isClick = false;\n      this._init();\n\n      Foundation.registerPlugin(this, 'Tooltip');\n    }\n\n    /**\r\n     * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\r\n     * @private\r\n     */\n\n\n    _createClass(Tooltip, [{\n      key: '_init',\n      value: function _init() {\n        var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n        this.options.positionClass = this.options.positionClass || this._getPositionClass(this.$element);\n        this.options.tipText = this.options.tipText || this.$element.attr('title');\n        this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n        if (this.options.allowHtml) {\n          this.template.appendTo(document.body).html(this.options.tipText).hide();\n        } else {\n          this.template.appendTo(document.body).text(this.options.tipText).hide();\n        }\n\n        this.$element.attr({\n          'title': '',\n          'aria-describedby': elemId,\n          'data-yeti-box': elemId,\n          'data-toggle': elemId,\n          'data-resize': elemId\n        }).addClass(this.options.triggerClass);\n\n        //helper variables to track movement on collisions\n        this.usedPositions = [];\n        this.counter = 4;\n        this.classChanged = false;\n\n        this._events();\n      }\n\n      /**\r\n       * Grabs the current positioning class, if present, and returns the value or an empty string.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_getPositionClass',\n      value: function _getPositionClass(element) {\n        if (!element) {\n          return '';\n        }\n        // var position = element.attr('class').match(/top|left|right/g);\n        var position = element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n        return position;\n      }\n    }, {\n      key: '_buildTemplate',\n\n      /**\r\n       * builds the tooltip element, adds attributes, and returns the template.\r\n       * @private\r\n       */\n      value: function _buildTemplate(id) {\n        var templateClasses = (this.options.tooltipClass + ' ' + this.options.positionClass + ' ' + this.options.templateClasses).trim();\n        var $template = $('<div></div>').addClass(templateClasses).attr({\n          'role': 'tooltip',\n          'aria-hidden': true,\n          'data-is-active': false,\n          'data-is-focus': false,\n          'id': id\n        });\n        return $template;\n      }\n\n      /**\r\n       * Function that gets called if a collision event is detected.\r\n       * @param {String} position - positioning class to try\r\n       * @private\r\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.template.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.template.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.template.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.template.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.template.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\r\n       * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\r\n       * if the tooltip is larger than the screen width, default to full width - any user selected margin\r\n       * @private\r\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        var position = this._getPositionClass(this.template),\n            $tipDims = Foundation.Box.GetDimensions(this.template),\n            $anchorDims = Foundation.Box.GetDimensions(this.$element),\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset,\n            _this = this;\n\n        if ($tipDims.width >= $tipDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.template)) {\n          this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $anchorDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          return false;\n        }\n\n        this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\r\n       * reveals the tooltip, and fires an event to close any other open tooltips on the page\r\n       * @fires Tooltip#closeme\r\n       * @fires Tooltip#show\r\n       * @function\r\n       */\n\n    }, {\n      key: 'show',\n      value: function show() {\n        if (this.options.showOn !== 'all' && !Foundation.MediaQuery.is(this.options.showOn)) {\n          // console.error('The screen is too small to display this tooltip');\n          return false;\n        }\n\n        var _this = this;\n        this.template.css('visibility', 'hidden').show();\n        this._setPosition();\n\n        /**\r\n         * Fires to close all other open tooltips on the page\r\n         * @event Closeme#tooltip\r\n         */\n        this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n        this.template.attr({\n          'data-is-active': true,\n          'aria-hidden': false\n        });\n        _this.isActive = true;\n        // console.log(this.template);\n        this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function () {\n          //maybe do stuff?\n        });\n        /**\r\n         * Fires when the tooltip is shown\r\n         * @event Tooltip#show\r\n         */\n        this.$element.trigger('show.zf.tooltip');\n      }\n\n      /**\r\n       * Hides the current tooltip, and resets the positioning class if it was changed due to collision\r\n       * @fires Tooltip#hide\r\n       * @function\r\n       */\n\n    }, {\n      key: 'hide',\n      value: function hide() {\n        // console.log('hiding', this.$element.data('yeti-box'));\n        var _this = this;\n        this.template.stop().attr({\n          'aria-hidden': true,\n          'data-is-active': false\n        }).fadeOut(this.options.fadeOutDuration, function () {\n          _this.isActive = false;\n          _this.isClick = false;\n          if (_this.classChanged) {\n            _this.template.removeClass(_this._getPositionClass(_this.template)).addClass(_this.options.positionClass);\n\n            _this.usedPositions = [];\n            _this.counter = 4;\n            _this.classChanged = false;\n          }\n        });\n        /**\r\n         * fires when the tooltip is hidden\r\n         * @event Tooltip#hide\r\n         */\n        this.$element.trigger('hide.zf.tooltip');\n      }\n\n      /**\r\n       * adds event listeners for the tooltip and its anchor\r\n       * TODO combine some of the listeners like focus and mouseenter, etc.\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        var $template = this.template;\n        var isFocus = false;\n\n        if (!this.options.disableHover) {\n\n          this.$element.on('mouseenter.zf.tooltip', function (e) {\n            if (!_this.isActive) {\n              _this.timeout = setTimeout(function () {\n                _this.show();\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.tooltip', function (e) {\n            clearTimeout(_this.timeout);\n            if (!isFocus || _this.isClick && !_this.options.clickOpen) {\n              _this.hide();\n            }\n          });\n        }\n\n        if (this.options.clickOpen) {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            if (_this.isClick) {\n              //_this.hide();\n              // _this.isClick = false;\n            } else {\n                _this.isClick = true;\n                if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n                  _this.show();\n                }\n              }\n          });\n        } else {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            _this.isClick = true;\n          });\n        }\n\n        if (!this.options.disableForTouch) {\n          this.$element.on('tap.zf.tooltip touchend.zf.tooltip', function (e) {\n            _this.isActive ? _this.hide() : _this.show();\n          });\n        }\n\n        this.$element.on({\n          // 'toggle.zf.trigger': this.toggle.bind(this),\n          // 'close.zf.trigger': this.hide.bind(this)\n          'close.zf.trigger': this.hide.bind(this)\n        });\n\n        this.$element.on('focus.zf.tooltip', function (e) {\n          isFocus = true;\n          if (_this.isClick) {\n            // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\n            // a real focus, otherwise on hover and come back we get bad behavior\n            if (!_this.options.clickOpen) {\n              isFocus = false;\n            }\n            return false;\n          } else {\n            _this.show();\n          }\n        }).on('focusout.zf.tooltip', function (e) {\n          isFocus = false;\n          _this.isClick = false;\n          _this.hide();\n        }).on('resizeme.zf.trigger', function () {\n          if (_this.isActive) {\n            _this._setPosition();\n          }\n        });\n      }\n\n      /**\r\n       * adds a toggle method, in addition to the static show() & hide() functions\r\n       * @function\r\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n\n      /**\r\n       * Destroys an instance of tooltip, removes template element from the view.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.attr('title', this.template.text()).off('.zf.trigger .zf.tooltip').removeClass('has-tip top right left').removeAttr('aria-describedby aria-haspopup data-disable-hover data-resize data-toggle data-tooltip data-yeti-box');\n\n        this.template.remove();\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tooltip;\n  }();\n\n  Tooltip.defaults = {\n    disableForTouch: false,\n    /**\r\n     * Time, in ms, before a tooltip should open on hover.\r\n     * @option\r\n     * @type {number}\r\n     * @default 200\r\n     */\n    hoverDelay: 200,\n    /**\r\n     * Time, in ms, a tooltip should take to fade into view.\r\n     * @option\r\n     * @type {number}\r\n     * @default 150\r\n     */\n    fadeInDuration: 150,\n    /**\r\n     * Time, in ms, a tooltip should take to fade out of view.\r\n     * @option\r\n     * @type {number}\r\n     * @default 150\r\n     */\n    fadeOutDuration: 150,\n    /**\r\n     * Disables hover events from opening the tooltip if set to true\r\n     * @option\r\n     * @type {boolean}\r\n     * @default false\r\n     */\n    disableHover: false,\n    /**\r\n     * Optional addtional classes to apply to the tooltip template on init.\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    templateClasses: '',\n    /**\r\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'tooltip'\r\n     */\n    tooltipClass: 'tooltip',\n    /**\r\n     * Class applied to the tooltip anchor element.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'has-tip'\r\n     */\n    triggerClass: 'has-tip',\n    /**\r\n     * Minimum breakpoint size at which to open the tooltip.\r\n     * @option\r\n     * @type {string}\r\n     * @default 'small'\r\n     */\n    showOn: 'small',\n    /**\r\n     * Custom template to be used to generate markup for tooltip.\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    template: '',\n    /**\r\n     * Text displayed in the tooltip template on open.\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    tipText: '',\n    touchCloseText: 'Tap to close.',\n    /**\r\n     * Allows the tooltip to remain open if triggered with a click or touch event.\r\n     * @option\r\n     * @type {boolean}\r\n     * @default true\r\n     */\n    clickOpen: true,\n    /**\r\n     * Additional positioning classes, set by the JS\r\n     * @option\r\n     * @type {string}\r\n     * @default ''\r\n     */\n    positionClass: '',\n    /**\r\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\r\n     * @option\r\n     * @type {number}\r\n     * @default 10\r\n     */\n    vOffset: 10,\n    /**\r\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\r\n     * @option\r\n     * @type {number}\r\n     * @default 12\r\n     */\n    hOffset: 12,\n    /**\r\n    * Allow HTML in tooltip. Warning: If you are loading user-generated content into tooltips,\r\n    * allowing HTML may open yourself up to XSS attacks.\r\n    * @option\r\n    * @type {boolean}\r\n    * @default false\r\n    */\n    allowHtml: false\n  };\n\n  /**\r\n   * TODO utilize resize event trigger\r\n   */\n\n  // Window exports\n  Foundation.plugin(Tooltip, 'Tooltip');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\r\n   * ResponsiveAccordionTabs module.\r\n   * @module foundation.responsiveAccordionTabs\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.timerAndImageLoader\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.accordion\r\n   * @requires foundation.tabs\r\n   */\n\n  var ResponsiveAccordionTabs = function () {\n    /**\r\n     * Creates a new instance of a responsive accordion tabs.\r\n     * @class\r\n     * @fires ResponsiveAccordionTabs#init\r\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\n\n    function ResponsiveAccordionTabs(element, options) {\n      _classCallCheck(this, ResponsiveAccordionTabs);\n\n      this.$element = $(element);\n      this.options = $.extend({}, this.$element.data(), options);\n      this.rules = this.$element.data('responsive-accordion-tabs');\n      this.currentMq = null;\n      this.currentPlugin = null;\n      if (!this.$element.attr('id')) {\n        this.$element.attr('id', Foundation.GetYoDigits(6, 'responsiveaccordiontabs'));\n      };\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveAccordionTabs');\n    }\n\n    /**\r\n     * Initializes the Menu by parsing the classes from the 'data-responsive-accordion-tabs' attribute on the element.\r\n     * @function\r\n     * @private\r\n     */\n\n\n    _createClass(ResponsiveAccordionTabs, [{\n      key: '_init',\n      value: function _init() {\n        // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n        if (typeof this.rules === 'string') {\n          var rulesTree = {};\n\n          // Parse rules from \"classes\" pulled from data attribute\n          var rules = this.rules.split(' ');\n\n          // Iterate through every rule found\n          for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i].split('-');\n            var ruleSize = rule.length > 1 ? rule[0] : 'small';\n            var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n            if (MenuPlugins[rulePlugin] !== null) {\n              rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n            }\n          }\n\n          this.rules = rulesTree;\n        }\n\n        this._getAllOptions();\n\n        if (!$.isEmptyObject(this.rules)) {\n          this._checkMediaQueries();\n        }\n      }\n    }, {\n      key: '_getAllOptions',\n      value: function _getAllOptions() {\n        //get all defaults and options\n        var _this = this;\n        _this.allOptions = {};\n        for (var key in MenuPlugins) {\n          if (MenuPlugins.hasOwnProperty(key)) {\n            var obj = MenuPlugins[key];\n            try {\n              var dummyPlugin = $('<ul></ul>');\n              var tmpPlugin = new obj.plugin(dummyPlugin, _this.options);\n              for (var keyKey in tmpPlugin.options) {\n                if (tmpPlugin.options.hasOwnProperty(keyKey) && keyKey !== 'zfPlugin') {\n                  var objObj = tmpPlugin.options[keyKey];\n                  _this.allOptions[keyKey] = objObj;\n                }\n              }\n              tmpPlugin.destroy();\n            } catch (e) {}\n          }\n        }\n      }\n\n      /**\r\n       * Initializes events for the Menu.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          _this._checkMediaQueries();\n        });\n      }\n\n      /**\r\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\r\n       * @function\r\n       * @private\r\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function _checkMediaQueries() {\n        var matchedMq,\n            _this = this;\n        // Iterate through each rule and find the last matching rule\n        $.each(this.rules, function (key) {\n          if (Foundation.MediaQuery.atLeast(key)) {\n            matchedMq = key;\n          }\n        });\n\n        // No match? No dice\n        if (!matchedMq) return;\n\n        // Plugin already initialized? We good\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n        // Remove existing plugin-specific CSS classes\n        $.each(MenuPlugins, function (key, value) {\n          _this.$element.removeClass(value.cssClass);\n        });\n\n        // Add the CSS class for the new plugin\n        this.$element.addClass(this.rules[matchedMq].cssClass);\n\n        // Create an instance of the new plugin\n        if (this.currentPlugin) {\n          //don't know why but on nested elements data zfPlugin get's lost\n          if (!this.currentPlugin.$element.data('zfPlugin') && this.storezfData) this.currentPlugin.$element.data('zfPlugin', this.storezfData);\n          this.currentPlugin.destroy();\n        }\n        this._handleMarkup(this.rules[matchedMq].cssClass);\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n        this.storezfData = this.currentPlugin.$element.data('zfPlugin');\n      }\n    }, {\n      key: '_handleMarkup',\n      value: function _handleMarkup(toSet) {\n        var _this = this,\n            fromString = 'accordion';\n        var $panels = $('[data-tabs-content=' + this.$element.attr('id') + ']');\n        if ($panels.length) fromString = 'tabs';\n        if (fromString === toSet) {\n          return;\n        };\n\n        var tabsTitle = _this.allOptions.linkClass ? _this.allOptions.linkClass : 'tabs-title';\n        var tabsPanel = _this.allOptions.panelClass ? _this.allOptions.panelClass : 'tabs-panel';\n\n        this.$element.removeAttr('role');\n        var $liHeads = this.$element.children('.' + tabsTitle + ',[data-accordion-item]').removeClass(tabsTitle).removeClass('accordion-item').removeAttr('data-accordion-item');\n        var $liHeadsA = $liHeads.children('a').removeClass('accordion-title');\n\n        if (fromString === 'tabs') {\n          $panels = $panels.children('.' + tabsPanel).removeClass(tabsPanel).removeAttr('role').removeAttr('aria-hidden').removeAttr('aria-labelledby');\n          $panels.children('a').removeAttr('role').removeAttr('aria-controls').removeAttr('aria-selected');\n        } else {\n          $panels = $liHeads.children('[data-tab-content]').removeClass('accordion-content');\n        };\n\n        $panels.css({ display: '', visibility: '' });\n        $liHeads.css({ display: '', visibility: '' });\n        if (toSet === 'accordion') {\n          $panels.each(function (key, value) {\n            $(value).appendTo($liHeads.get(key)).addClass('accordion-content').attr('data-tab-content', '').removeClass('is-active').css({ height: '' });\n            $('[data-tabs-content=' + _this.$element.attr('id') + ']').after('<div id=\"tabs-placeholder-' + _this.$element.attr('id') + '\"></div>').remove();\n            $liHeads.addClass('accordion-item').attr('data-accordion-item', '');\n            $liHeadsA.addClass('accordion-title');\n          });\n        } else if (toSet === 'tabs') {\n          var $tabsContent = $('[data-tabs-content=' + _this.$element.attr('id') + ']');\n          var $placeholder = $('#tabs-placeholder-' + _this.$element.attr('id'));\n          if ($placeholder.length) {\n            $tabsContent = $('<div class=\"tabs-content\"></div>').insertAfter($placeholder).attr('data-tabs-content', _this.$element.attr('id'));\n            $placeholder.remove();\n          } else {\n            $tabsContent = $('<div class=\"tabs-content\"></div>').insertAfter(_this.$element).attr('data-tabs-content', _this.$element.attr('id'));\n          };\n          $panels.each(function (key, value) {\n            var tempValue = $(value).appendTo($tabsContent).addClass(tabsPanel);\n            var hash = $liHeadsA.get(key).hash.slice(1);\n            var id = $(value).attr('id') || Foundation.GetYoDigits(6, 'accordion');\n            if (hash !== id) {\n              if (hash !== '') {\n                $(value).attr('id', hash);\n              } else {\n                hash = id;\n                $(value).attr('id', hash);\n                $($liHeadsA.get(key)).attr('href', $($liHeadsA.get(key)).attr('href').replace('#', '') + '#' + hash);\n              };\n            };\n            var isActive = $($liHeads.get(key)).hasClass('is-active');\n            if (isActive) {\n              tempValue.addClass('is-active');\n            };\n          });\n          $liHeads.addClass(tabsTitle);\n        };\n      }\n\n      /**\r\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\r\n       * @function\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        if (this.currentPlugin) this.currentPlugin.destroy();\n        $(window).off('.zf.ResponsiveAccordionTabs');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveAccordionTabs;\n  }();\n\n  ResponsiveAccordionTabs.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    tabs: {\n      cssClass: 'tabs',\n      plugin: Foundation._plugins.tabs || null\n    },\n    accordion: {\n      cssClass: 'accordion',\n      plugin: Foundation._plugins.accordion || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveAccordionTabs, 'ResponsiveAccordionTabs');\n}(jQuery);","/**\r\n * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).\r\n * @version v4.0.6\r\n * @link https://github.com/ten1seven/what-input\r\n * @license MIT\r\n */\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine(\"whatInput\", [], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"whatInput\"] = factory();\r\n\telse\r\n\t\troot[\"whatInput\"] = factory();\r\n})(this, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId])\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\texports: {},\r\n/******/ \t\t\tid: moduleId,\r\n/******/ \t\t\tloaded: false\r\n/******/ \t\t};\r\n\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.loaded = true;\r\n\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n\r\n\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(0);\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ([\r\n/* 0 */\r\n/***/ function(module, exports) {\r\n\r\n\tmodule.exports = (function() {\r\n\r\n\t  /*\r\n\t    ---------------\r\n\t    Variables\r\n\t    ---------------\r\n\t  */\r\n\r\n\t  // cache document.documentElement\r\n\t  var docElem = document.documentElement;\r\n\r\n\t  // last used input type\r\n\t  var currentInput = 'initial';\r\n\r\n\t  // last used input intent\r\n\t  var currentIntent = null;\r\n\r\n\t  // form input types\r\n\t  var formInputs = [\r\n\t    'input',\r\n\t    'select',\r\n\t    'textarea'\r\n\t  ];\r\n\r\n\t  // list of modifier keys commonly used with the mouse and\r\n\t  // can be safely ignored to prevent false keyboard detection\r\n\t  var ignoreMap = [\r\n\t    16, // shift\r\n\t    17, // control\r\n\t    18, // alt\r\n\t    91, // Windows key / left Apple cmd\r\n\t    93  // Windows menu / right Apple cmd\r\n\t  ];\r\n\r\n\t  // mapping of events to input types\r\n\t  var inputMap = {\r\n\t    'keyup': 'keyboard',\r\n\t    'mousedown': 'mouse',\r\n\t    'mousemove': 'mouse',\r\n\t    'MSPointerDown': 'pointer',\r\n\t    'MSPointerMove': 'pointer',\r\n\t    'pointerdown': 'pointer',\r\n\t    'pointermove': 'pointer',\r\n\t    'touchstart': 'touch'\r\n\t  };\r\n\r\n\t  // array of all used input types\r\n\t  var inputTypes = [];\r\n\r\n\t  // boolean: true if touch buffer timer is running\r\n\t  var isBuffering = false;\r\n\r\n\t  // map of IE 10 pointer events\r\n\t  var pointerMap = {\r\n\t    2: 'touch',\r\n\t    3: 'touch', // treat pen like touch\r\n\t    4: 'mouse'\r\n\t  };\r\n\r\n\t  // touch buffer timer\r\n\t  var touchTimer = null;\r\n\r\n\r\n\t  /*\r\n\t    ---------------\r\n\t    Set up\r\n\t    ---------------\r\n\t  */\r\n\r\n\t  var setUp = function() {\r\n\r\n\t    // add correct mouse wheel event mapping to `inputMap`\r\n\t    inputMap[detectWheel()] = 'mouse';\r\n\r\n\t    addListeners();\r\n\t    setInput();\r\n\t  };\r\n\r\n\r\n\t  /*\r\n\t    ---------------\r\n\t    Events\r\n\t    ---------------\r\n\t  */\r\n\r\n\t  var addListeners = function() {\r\n\r\n\t    // `pointermove`, `MSPointerMove`, `mousemove` and mouse wheel event binding\r\n\t    // can only demonstrate potential, but not actual, interaction\r\n\t    // and are treated separately\r\n\r\n\t    // pointer events (mouse, pen, touch)\r\n\t    if (window.PointerEvent) {\r\n\t      docElem.addEventListener('pointerdown', updateInput);\r\n\t      docElem.addEventListener('pointermove', setIntent);\r\n\t    } else if (window.MSPointerEvent) {\r\n\t      docElem.addEventListener('MSPointerDown', updateInput);\r\n\t      docElem.addEventListener('MSPointerMove', setIntent);\r\n\t    } else {\r\n\r\n\t      // mouse events\r\n\t      docElem.addEventListener('mousedown', updateInput);\r\n\t      docElem.addEventListener('mousemove', setIntent);\r\n\r\n\t      // touch events\r\n\t      if ('ontouchstart' in window) {\r\n\t        docElem.addEventListener('touchstart', touchBuffer);\r\n\t      }\r\n\t    }\r\n\r\n\t    // mouse wheel\r\n\t    docElem.addEventListener(detectWheel(), setIntent);\r\n\r\n\t    // keyboard events\r\n\t    docElem.addEventListener('keydown', updateInput);\r\n\t    docElem.addEventListener('keyup', updateInput);\r\n\t  };\r\n\r\n\t  // checks conditions before updating new input\r\n\t  var updateInput = function(event) {\r\n\r\n\t    // only execute if the touch buffer timer isn't running\r\n\t    if (!isBuffering) {\r\n\t      var eventKey = event.which;\r\n\t      var value = inputMap[event.type];\r\n\t      if (value === 'pointer') value = pointerType(event);\r\n\r\n\t      if (\r\n\t        currentInput !== value ||\r\n\t        currentIntent !== value\r\n\t      ) {\r\n\r\n\t        var activeElem = document.activeElement;\r\n\t        var activeInput = (\r\n\t          activeElem &&\r\n\t          activeElem.nodeName &&\r\n\t          formInputs.indexOf(activeElem.nodeName.toLowerCase()) === -1\r\n\t        ) ? true : false;\r\n\r\n\t        if (\r\n\t          value === 'touch' ||\r\n\r\n\t          // ignore mouse modifier keys\r\n\t          (value === 'mouse' && ignoreMap.indexOf(eventKey) === -1) ||\r\n\r\n\t          // don't switch if the current element is a form input\r\n\t          (value === 'keyboard' && activeInput)\r\n\t        ) {\r\n\r\n\t          // set the current and catch-all variable\r\n\t          currentInput = currentIntent = value;\r\n\r\n\t          setInput();\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  };\r\n\r\n\t  // updates the doc and `inputTypes` array with new input\r\n\t  var setInput = function() {\r\n\t    docElem.setAttribute('data-whatinput', currentInput);\r\n\t    docElem.setAttribute('data-whatintent', currentInput);\r\n\r\n\t    if (inputTypes.indexOf(currentInput) === -1) {\r\n\t      inputTypes.push(currentInput);\r\n\t      docElem.className += ' whatinput-types-' + currentInput;\r\n\t    }\r\n\t  };\r\n\r\n\t  // updates input intent for `mousemove` and `pointermove`\r\n\t  var setIntent = function(event) {\r\n\r\n\t    // only execute if the touch buffer timer isn't running\r\n\t    if (!isBuffering) {\r\n\t      var value = inputMap[event.type];\r\n\t      if (value === 'pointer') value = pointerType(event);\r\n\r\n\t      if (currentIntent !== value) {\r\n\t        currentIntent = value;\r\n\r\n\t        docElem.setAttribute('data-whatintent', currentIntent);\r\n\t      }\r\n\t    }\r\n\t  };\r\n\r\n\t  // buffers touch events because they frequently also fire mouse events\r\n\t  var touchBuffer = function(event) {\r\n\r\n\t    // clear the timer if it happens to be running\r\n\t    window.clearTimeout(touchTimer);\r\n\r\n\t    // set the current input\r\n\t    updateInput(event);\r\n\r\n\t    // set the isBuffering to `true`\r\n\t    isBuffering = true;\r\n\r\n\t    // run the timer\r\n\t    touchTimer = window.setTimeout(function() {\r\n\r\n\t      // if the timer runs out, set isBuffering back to `false`\r\n\t      isBuffering = false;\r\n\t    }, 200);\r\n\t  };\r\n\r\n\r\n\t  /*\r\n\t    ---------------\r\n\t    Utilities\r\n\t    ---------------\r\n\t  */\r\n\r\n\t  var pointerType = function(event) {\r\n\t   if (typeof event.pointerType === 'number') {\r\n\t      return pointerMap[event.pointerType];\r\n\t   } else {\r\n\t      return (event.pointerType === 'pen') ? 'touch' : event.pointerType; // treat pen like touch\r\n\t   }\r\n\t  };\r\n\r\n\t  // detect version of mouse wheel event to use\r\n\t  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n\t  var detectWheel = function() {\r\n\t    return 'onwheel' in document.createElement('div') ?\r\n\t      'wheel' : // Modern browsers support \"wheel\"\r\n\r\n\t      document.onmousewheel !== undefined ?\r\n\t        'mousewheel' : // Webkit and IE support at least \"mousewheel\"\r\n\t        'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\r\n\t  };\r\n\r\n\r\n\t  /*\r\n\t    ---------------\r\n\t    Init\r\n\r\n\t    don't start script unless browser cuts the mustard\r\n\t    (also passes if polyfills are used)\r\n\t    ---------------\r\n\t  */\r\n\r\n\t  if (\r\n\t    'addEventListener' in window &&\r\n\t    Array.prototype.indexOf\r\n\t  ) {\r\n\t    setUp();\r\n\t  }\r\n\r\n\r\n\t  /*\r\n\t    ---------------\r\n\t    API\r\n\t    ---------------\r\n\t  */\r\n\r\n\t  return {\r\n\r\n\t    // returns string: the current input type\r\n\t    // opt: 'loose'|'strict'\r\n\t    // 'strict' (default): returns the same value as the `data-whatinput` attribute\r\n\t    // 'loose': includes `data-whatintent` value if it's more current than `data-whatinput`\r\n\t    ask: function(opt) { return (opt === 'loose') ? currentIntent : currentInput; },\r\n\r\n\t    // returns array: all the detected input types\r\n\t    types: function() { return inputTypes; }\r\n\r\n\t  };\r\n\r\n\t}());\r\n\r\n\r\n/***/ }\r\n/******/ ])\r\n});\r\n;","!function($) {\r\n\r\n\"use strict\";\r\n\r\nvar FOUNDATION_VERSION = '6.3.1';\r\n\r\n// Global Foundation object\r\n// This is attached to the window, or used as a module for AMD/Browserify\r\nvar Foundation = {\r\n  version: FOUNDATION_VERSION,\r\n\r\n  /**\r\n   * Stores initialized plugins.\r\n   */\r\n  _plugins: {},\r\n\r\n  /**\r\n   * Stores generated unique ids for plugin instances\r\n   */\r\n  _uuids: [],\r\n\r\n  /**\r\n   * Returns a boolean for RTL support\r\n   */\r\n  rtl: function(){\r\n    return $('html').attr('dir') === 'rtl';\r\n  },\r\n  /**\r\n   * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\r\n   * @param {Object} plugin - The constructor of the plugin.\r\n   */\r\n  plugin: function(plugin, name) {\r\n    // Object key to use when adding to global Foundation object\r\n    // Examples: Foundation.Reveal, Foundation.OffCanvas\r\n    var className = (name || functionName(plugin));\r\n    // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\r\n    // Examples: data-reveal, data-off-canvas\r\n    var attrName  = hyphenate(className);\r\n\r\n    // Add to the Foundation object and the plugins list (for reflowing)\r\n    this._plugins[attrName] = this[className] = plugin;\r\n  },\r\n  /**\r\n   * @function\r\n   * Populates the _uuids array with pointers to each individual plugin instance.\r\n   * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\r\n   * Also fires the initialization event for each plugin, consolidating repetitive code.\r\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n   * @param {String} name - the name of the plugin, passed as a camelCased string.\r\n   * @fires Plugin#init\r\n   */\r\n  registerPlugin: function(plugin, name){\r\n    var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\r\n    plugin.uuid = this.GetYoDigits(6, pluginName);\r\n\r\n    if(!plugin.$element.attr(`data-${pluginName}`)){ plugin.$element.attr(`data-${pluginName}`, plugin.uuid); }\r\n    if(!plugin.$element.data('zfPlugin')){ plugin.$element.data('zfPlugin', plugin); }\r\n          /**\r\n           * Fires when the plugin has initialized.\r\n           * @event Plugin#init\r\n           */\r\n    plugin.$element.trigger(`init.zf.${pluginName}`);\r\n\r\n    this._uuids.push(plugin.uuid);\r\n\r\n    return;\r\n  },\r\n  /**\r\n   * @function\r\n   * Removes the plugins uuid from the _uuids array.\r\n   * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\r\n   * Also fires the destroyed event for the plugin, consolidating repetitive code.\r\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n   * @fires Plugin#destroyed\r\n   */\r\n  unregisterPlugin: function(plugin){\r\n    var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\r\n\r\n    this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\r\n    plugin.$element.removeAttr(`data-${pluginName}`).removeData('zfPlugin')\r\n          /**\r\n           * Fires when the plugin has been destroyed.\r\n           * @event Plugin#destroyed\r\n           */\r\n          .trigger(`destroyed.zf.${pluginName}`);\r\n    for(var prop in plugin){\r\n      plugin[prop] = null;//clean up script to prep for garbage collection.\r\n    }\r\n    return;\r\n  },\r\n\r\n  /**\r\n   * @function\r\n   * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\r\n   * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\r\n   * @default If no argument is passed, reflow all currently active plugins.\r\n   */\r\n   reInit: function(plugins){\r\n     var isJQ = plugins instanceof $;\r\n     try{\r\n       if(isJQ){\r\n         plugins.each(function(){\r\n           $(this).data('zfPlugin')._init();\r\n         });\r\n       }else{\r\n         var type = typeof plugins,\r\n         _this = this,\r\n         fns = {\r\n           'object': function(plgs){\r\n             plgs.forEach(function(p){\r\n               p = hyphenate(p);\r\n               $('[data-'+ p +']').foundation('_init');\r\n             });\r\n           },\r\n           'string': function(){\r\n             plugins = hyphenate(plugins);\r\n             $('[data-'+ plugins +']').foundation('_init');\r\n           },\r\n           'undefined': function(){\r\n             this['object'](Object.keys(_this._plugins));\r\n           }\r\n         };\r\n         fns[type](plugins);\r\n       }\r\n     }catch(err){\r\n       console.error(err);\r\n     }finally{\r\n       return plugins;\r\n     }\r\n   },\r\n\r\n  /**\r\n   * returns a random base-36 uid with namespacing\r\n   * @function\r\n   * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\r\n   * @param {String} namespace - name of plugin to be incorporated in uid, optional.\r\n   * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\r\n   * @returns {String} - unique id\r\n   */\r\n  GetYoDigits: function(length, namespace){\r\n    length = length || 6;\r\n    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1) + (namespace ? `-${namespace}` : '');\r\n  },\r\n  /**\r\n   * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\r\n   * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\r\n   * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\r\n   */\r\n  reflow: function(elem, plugins) {\r\n\r\n    // If plugins is undefined, just grab everything\r\n    if (typeof plugins === 'undefined') {\r\n      plugins = Object.keys(this._plugins);\r\n    }\r\n    // If plugins is a string, convert it to an array with one item\r\n    else if (typeof plugins === 'string') {\r\n      plugins = [plugins];\r\n    }\r\n\r\n    var _this = this;\r\n\r\n    // Iterate through each plugin\r\n    $.each(plugins, function(i, name) {\r\n      // Get the current plugin\r\n      var plugin = _this._plugins[name];\r\n\r\n      // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\r\n      var $elem = $(elem).find('[data-'+name+']').addBack('[data-'+name+']');\r\n\r\n      // For each plugin found, initialize it\r\n      $elem.each(function() {\r\n        var $el = $(this),\r\n            opts = {};\r\n        // Don't double-dip on plugins\r\n        if ($el.data('zfPlugin')) {\r\n          console.warn(\"Tried to initialize \"+name+\" on an element that already has a Foundation plugin.\");\r\n          return;\r\n        }\r\n\r\n        if($el.attr('data-options')){\r\n          var thing = $el.attr('data-options').split(';').forEach(function(e, i){\r\n            var opt = e.split(':').map(function(el){ return el.trim(); });\r\n            if(opt[0]) opts[opt[0]] = parseValue(opt[1]);\r\n          });\r\n        }\r\n        try{\r\n          $el.data('zfPlugin', new plugin($(this), opts));\r\n        }catch(er){\r\n          console.error(er);\r\n        }finally{\r\n          return;\r\n        }\r\n      });\r\n    });\r\n  },\r\n  getFnName: functionName,\r\n  transitionend: function($elem){\r\n    var transitions = {\r\n      'transition': 'transitionend',\r\n      'WebkitTransition': 'webkitTransitionEnd',\r\n      'MozTransition': 'transitionend',\r\n      'OTransition': 'otransitionend'\r\n    };\r\n    var elem = document.createElement('div'),\r\n        end;\r\n\r\n    for (var t in transitions){\r\n      if (typeof elem.style[t] !== 'undefined'){\r\n        end = transitions[t];\r\n      }\r\n    }\r\n    if(end){\r\n      return end;\r\n    }else{\r\n      end = setTimeout(function(){\r\n        $elem.triggerHandler('transitionend', [$elem]);\r\n      }, 1);\r\n      return 'transitionend';\r\n    }\r\n  }\r\n};\r\n\r\nFoundation.util = {\r\n  /**\r\n   * Function for applying a debounce effect to a function call.\r\n   * @function\r\n   * @param {Function} func - Function to be called at end of timeout.\r\n   * @param {Number} delay - Time in ms to delay the call of `func`.\r\n   * @returns function\r\n   */\r\n  throttle: function (func, delay) {\r\n    var timer = null;\r\n\r\n    return function () {\r\n      var context = this, args = arguments;\r\n\r\n      if (timer === null) {\r\n        timer = setTimeout(function () {\r\n          func.apply(context, args);\r\n          timer = null;\r\n        }, delay);\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n// TODO: consider not making this a jQuery function\r\n// TODO: need way to reflow vs. re-initialize\r\n/**\r\n * The Foundation jQuery method.\r\n * @param {String|Array} method - An action to perform on the current jQuery object.\r\n */\r\nvar foundation = function(method) {\r\n  var type = typeof method,\r\n      $meta = $('meta.foundation-mq'),\r\n      $noJS = $('.no-js');\r\n\r\n  if(!$meta.length){\r\n    $('<meta class=\"foundation-mq\">').appendTo(document.head);\r\n  }\r\n  if($noJS.length){\r\n    $noJS.removeClass('no-js');\r\n  }\r\n\r\n  if(type === 'undefined'){//needs to initialize the Foundation object, or an individual plugin.\r\n    Foundation.MediaQuery._init();\r\n    Foundation.reflow(this);\r\n  }else if(type === 'string'){//an individual method to invoke on a plugin or group of plugins\r\n    var args = Array.prototype.slice.call(arguments, 1);//collect all the arguments, if necessary\r\n    var plugClass = this.data('zfPlugin');//determine the class of plugin\r\n\r\n    if(plugClass !== undefined && plugClass[method] !== undefined){//make sure both the class and method exist\r\n      if(this.length === 1){//if there's only one, call it directly.\r\n          plugClass[method].apply(plugClass, args);\r\n      }else{\r\n        this.each(function(i, el){//otherwise loop through the jQuery collection and invoke the method on each\r\n          plugClass[method].apply($(el).data('zfPlugin'), args);\r\n        });\r\n      }\r\n    }else{//error for no class or no method\r\n      throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\r\n    }\r\n  }else{//error for invalid argument type\r\n    throw new TypeError(`We're sorry, ${type} is not a valid parameter. You must use a string representing the method you wish to invoke.`);\r\n  }\r\n  return this;\r\n};\r\n\r\nwindow.Foundation = Foundation;\r\n$.fn.foundation = foundation;\r\n\r\n// Polyfill for requestAnimationFrame\r\n(function() {\r\n  if (!Date.now || !window.Date.now)\r\n    window.Date.now = Date.now = function() { return new Date().getTime(); };\r\n\r\n  var vendors = ['webkit', 'moz'];\r\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\r\n      var vp = vendors[i];\r\n      window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\r\n      window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\r\n                                 || window[vp+'CancelRequestAnimationFrame']);\r\n  }\r\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)\r\n    || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\r\n    var lastTime = 0;\r\n    window.requestAnimationFrame = function(callback) {\r\n        var now = Date.now();\r\n        var nextTime = Math.max(lastTime + 16, now);\r\n        return setTimeout(function() { callback(lastTime = nextTime); },\r\n                          nextTime - now);\r\n    };\r\n    window.cancelAnimationFrame = clearTimeout;\r\n  }\r\n  /**\r\n   * Polyfill for performance.now, required by rAF\r\n   */\r\n  if(!window.performance || !window.performance.now){\r\n    window.performance = {\r\n      start: Date.now(),\r\n      now: function(){ return Date.now() - this.start; }\r\n    };\r\n  }\r\n})();\r\nif (!Function.prototype.bind) {\r\n  Function.prototype.bind = function(oThis) {\r\n    if (typeof this !== 'function') {\r\n      // closest thing possible to the ECMAScript 5\r\n      // internal IsCallable function\r\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n    }\r\n\r\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\r\n        fToBind = this,\r\n        fNOP    = function() {},\r\n        fBound  = function() {\r\n          return fToBind.apply(this instanceof fNOP\r\n                 ? this\r\n                 : oThis,\r\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\r\n        };\r\n\r\n    if (this.prototype) {\r\n      // native functions don't have a prototype\r\n      fNOP.prototype = this.prototype;\r\n    }\r\n    fBound.prototype = new fNOP();\r\n\r\n    return fBound;\r\n  };\r\n}\r\n// Polyfill to get the name of a function in IE9\r\nfunction functionName(fn) {\r\n  if (Function.prototype.name === undefined) {\r\n    var funcNameRegex = /function\\s([^(]{1,})\\(/;\r\n    var results = (funcNameRegex).exec((fn).toString());\r\n    return (results && results.length > 1) ? results[1].trim() : \"\";\r\n  }\r\n  else if (fn.prototype === undefined) {\r\n    return fn.constructor.name;\r\n  }\r\n  else {\r\n    return fn.prototype.constructor.name;\r\n  }\r\n}\r\nfunction parseValue(str){\r\n  if ('true' === str) return true;\r\n  else if ('false' === str) return false;\r\n  else if (!isNaN(str * 1)) return parseFloat(str);\r\n  return str;\r\n}\r\n// Convert PascalCase to kebab-case\r\n// Thank you: http://stackoverflow.com/a/8955580\r\nfunction hyphenate(str) {\r\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\nFoundation.Box = {\r\n  ImNotTouchingYou: ImNotTouchingYou,\r\n  GetDimensions: GetDimensions,\r\n  GetOffsets: GetOffsets\r\n}\r\n\r\n/**\r\n * Compares the dimensions of an element to a container and determines collision events with container.\r\n * @function\r\n * @param {jQuery} element - jQuery object to test for collisions.\r\n * @param {jQuery} parent - jQuery object to use as bounding container.\r\n * @param {Boolean} lrOnly - set to true to check left and right values only.\r\n * @param {Boolean} tbOnly - set to true to check top and bottom values only.\r\n * @default if no parent object passed, detects collisions with `window`.\r\n * @returns {Boolean} - true if collision free, false if a collision in any direction.\r\n */\r\nfunction ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\r\n  var eleDims = GetDimensions(element),\r\n      top, bottom, left, right;\r\n\r\n  if (parent) {\r\n    var parDims = GetDimensions(parent);\r\n\r\n    bottom = (eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top);\r\n    top    = (eleDims.offset.top >= parDims.offset.top);\r\n    left   = (eleDims.offset.left >= parDims.offset.left);\r\n    right  = (eleDims.offset.left + eleDims.width <= parDims.width + parDims.offset.left);\r\n  }\r\n  else {\r\n    bottom = (eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top);\r\n    top    = (eleDims.offset.top >= eleDims.windowDims.offset.top);\r\n    left   = (eleDims.offset.left >= eleDims.windowDims.offset.left);\r\n    right  = (eleDims.offset.left + eleDims.width <= eleDims.windowDims.width);\r\n  }\r\n\r\n  var allDirs = [bottom, top, left, right];\r\n\r\n  if (lrOnly) {\r\n    return left === right === true;\r\n  }\r\n\r\n  if (tbOnly) {\r\n    return top === bottom === true;\r\n  }\r\n\r\n  return allDirs.indexOf(false) === -1;\r\n};\r\n\r\n/**\r\n * Uses native methods to return an object of dimension values.\r\n * @function\r\n * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\r\n * @returns {Object} - nested object of integer pixel values\r\n * TODO - if element is window, return only those values.\r\n */\r\nfunction GetDimensions(elem, test){\r\n  elem = elem.length ? elem[0] : elem;\r\n\r\n  if (elem === window || elem === document) {\r\n    throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\r\n  }\r\n\r\n  var rect = elem.getBoundingClientRect(),\r\n      parRect = elem.parentNode.getBoundingClientRect(),\r\n      winRect = document.body.getBoundingClientRect(),\r\n      winY = window.pageYOffset,\r\n      winX = window.pageXOffset;\r\n\r\n  return {\r\n    width: rect.width,\r\n    height: rect.height,\r\n    offset: {\r\n      top: rect.top + winY,\r\n      left: rect.left + winX\r\n    },\r\n    parentDims: {\r\n      width: parRect.width,\r\n      height: parRect.height,\r\n      offset: {\r\n        top: parRect.top + winY,\r\n        left: parRect.left + winX\r\n      }\r\n    },\r\n    windowDims: {\r\n      width: winRect.width,\r\n      height: winRect.height,\r\n      offset: {\r\n        top: winY,\r\n        left: winX\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an object of top and left integer pixel values for dynamically rendered elements,\r\n * such as: Tooltip, Reveal, and Dropdown\r\n * @function\r\n * @param {jQuery} element - jQuery object for the element being positioned.\r\n * @param {jQuery} anchor - jQuery object for the element's anchor point.\r\n * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\r\n * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\r\n * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\r\n * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\r\n * TODO alter/rewrite to work with `em` values as well/instead of pixels\r\n */\r\nfunction GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\r\n  var $eleDims = GetDimensions(element),\r\n      $anchorDims = anchor ? GetDimensions(anchor) : null;\r\n\r\n  switch (position) {\r\n    case 'top':\r\n      return {\r\n        left: (Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left),\r\n        top: $anchorDims.offset.top - ($eleDims.height + vOffset)\r\n      }\r\n      break;\r\n    case 'left':\r\n      return {\r\n        left: $anchorDims.offset.left - ($eleDims.width + hOffset),\r\n        top: $anchorDims.offset.top\r\n      }\r\n      break;\r\n    case 'right':\r\n      return {\r\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset,\r\n        top: $anchorDims.offset.top\r\n      }\r\n      break;\r\n    case 'center top':\r\n      return {\r\n        left: ($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2),\r\n        top: $anchorDims.offset.top - ($eleDims.height + vOffset)\r\n      }\r\n      break;\r\n    case 'center bottom':\r\n      return {\r\n        left: isOverflow ? hOffset : (($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2)),\r\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\r\n      }\r\n      break;\r\n    case 'center left':\r\n      return {\r\n        left: $anchorDims.offset.left - ($eleDims.width + hOffset),\r\n        top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\r\n      }\r\n      break;\r\n    case 'center right':\r\n      return {\r\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\r\n        top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\r\n      }\r\n      break;\r\n    case 'center':\r\n      return {\r\n        left: ($eleDims.windowDims.offset.left + ($eleDims.windowDims.width / 2)) - ($eleDims.width / 2),\r\n        top: ($eleDims.windowDims.offset.top + ($eleDims.windowDims.height / 2)) - ($eleDims.height / 2)\r\n      }\r\n      break;\r\n    case 'reveal':\r\n      return {\r\n        left: ($eleDims.windowDims.width - $eleDims.width) / 2,\r\n        top: $eleDims.windowDims.offset.top + vOffset\r\n      }\r\n    case 'reveal full':\r\n      return {\r\n        left: $eleDims.windowDims.offset.left,\r\n        top: $eleDims.windowDims.offset.top\r\n      }\r\n      break;\r\n    case 'left bottom':\r\n      return {\r\n        left: $anchorDims.offset.left,\r\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\r\n      };\r\n      break;\r\n    case 'right bottom':\r\n      return {\r\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset - $eleDims.width,\r\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\r\n      };\r\n      break;\r\n    default:\r\n      return {\r\n        left: (Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left + hOffset),\r\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\r\n      }\r\n  }\r\n}\r\n\r\n}(jQuery);\r\n","/*******************************************\r\n *                                         *\r\n * This util was created by Marius Olbertz *\r\n * Please thank Marius on GitHub /owlbertz *\r\n * or the web http://www.mariusolbertz.de/ *\r\n *                                         *\r\n ******************************************/\r\n\r\n'use strict';\r\n\r\n!function($) {\r\n\r\nconst keyCodes = {\r\n  9: 'TAB',\r\n  13: 'ENTER',\r\n  27: 'ESCAPE',\r\n  32: 'SPACE',\r\n  37: 'ARROW_LEFT',\r\n  38: 'ARROW_UP',\r\n  39: 'ARROW_RIGHT',\r\n  40: 'ARROW_DOWN'\r\n}\r\n\r\nvar commands = {}\r\n\r\nvar Keyboard = {\r\n  keys: getKeyCodes(keyCodes),\r\n\r\n  /**\r\n   * Parses the (keyboard) event and returns a String that represents its key\r\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n   * @param {Event} event - the event generated by the event handler\r\n   * @return String key - String that represents the key pressed\r\n   */\r\n  parseKey(event) {\r\n    var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\r\n\r\n    // Remove un-printable characters, e.g. for `fromCharCode` calls for CTRL only events\r\n    key = key.replace(/\\W+/, '');\r\n\r\n    if (event.shiftKey) key = `SHIFT_${key}`;\r\n    if (event.ctrlKey) key = `CTRL_${key}`;\r\n    if (event.altKey) key = `ALT_${key}`;\r\n\r\n    // Remove trailing underscore, in case only modifiers were used (e.g. only `CTRL_ALT`)\r\n    key = key.replace(/_$/, '');\r\n\r\n    return key;\r\n  },\r\n\r\n  /**\r\n   * Handles the given (keyboard) event\r\n   * @param {Event} event - the event generated by the event handler\r\n   * @param {String} component - Foundation component's name, e.g. Slider or Reveal\r\n   * @param {Objects} functions - collection of functions that are to be executed\r\n   */\r\n  handleKey(event, component, functions) {\r\n    var commandList = commands[component],\r\n      keyCode = this.parseKey(event),\r\n      cmds,\r\n      command,\r\n      fn;\r\n\r\n    if (!commandList) return console.warn('Component not defined!');\r\n\r\n    if (typeof commandList.ltr === 'undefined') { // this component does not differentiate between ltr and rtl\r\n        cmds = commandList; // use plain list\r\n    } else { // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\r\n        if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);\r\n\r\n        else cmds = $.extend({}, commandList.rtl, commandList.ltr);\r\n    }\r\n    command = cmds[keyCode];\r\n\r\n    fn = functions[command];\r\n    if (fn && typeof fn === 'function') { // execute function  if exists\r\n      var returnValue = fn.apply();\r\n      if (functions.handled || typeof functions.handled === 'function') { // execute function when event was handled\r\n          functions.handled(returnValue);\r\n      }\r\n    } else {\r\n      if (functions.unhandled || typeof functions.unhandled === 'function') { // execute function when event was not handled\r\n          functions.unhandled();\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Finds all focusable elements within the given `$element`\r\n   * @param {jQuery} $element - jQuery object to search within\r\n   * @return {jQuery} $focusable - all focusable elements within `$element`\r\n   */\r\n  findFocusable($element) {\r\n    if(!$element) {return false; }\r\n    return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function() {\r\n      if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) { return false; } //only have visible elements and those that have a tabindex greater or equal 0\r\n      return true;\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Returns the component name name\r\n   * @param {Object} component - Foundation component, e.g. Slider or Reveal\r\n   * @return String componentName\r\n   */\r\n\r\n  register(componentName, cmds) {\r\n    commands[componentName] = cmds;\r\n  },  \r\n\r\n  /**\r\n   * Traps the focus in the given element.\r\n   * @param  {jQuery} $element  jQuery object to trap the foucs into.\r\n   */\r\n  trapFocus($element) {\r\n    var $focusable = Foundation.Keyboard.findFocusable($element),\r\n        $firstFocusable = $focusable.eq(0),\r\n        $lastFocusable = $focusable.eq(-1);\r\n\r\n    $element.on('keydown.zf.trapfocus', function(event) {\r\n      if (event.target === $lastFocusable[0] && Foundation.Keyboard.parseKey(event) === 'TAB') {\r\n        event.preventDefault();\r\n        $firstFocusable.focus();\r\n      }\r\n      else if (event.target === $firstFocusable[0] && Foundation.Keyboard.parseKey(event) === 'SHIFT_TAB') {\r\n        event.preventDefault();\r\n        $lastFocusable.focus();\r\n      }\r\n    });\r\n  },\r\n  /**\r\n   * Releases the trapped focus from the given element.\r\n   * @param  {jQuery} $element  jQuery object to release the focus for.\r\n   */\r\n  releaseFocus($element) {\r\n    $element.off('keydown.zf.trapfocus');\r\n  }\r\n}\r\n\r\n/*\r\n * Constants for easier comparing.\r\n * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n */\r\nfunction getKeyCodes(kcs) {\r\n  var k = {};\r\n  for (var kc in kcs) k[kcs[kc]] = kcs[kc];\r\n  return k;\r\n}\r\n\r\nFoundation.Keyboard = Keyboard;\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n// Default set of media queries\r\nconst defaultQueries = {\r\n  'default' : 'only screen',\r\n  landscape : 'only screen and (orientation: landscape)',\r\n  portrait : 'only screen and (orientation: portrait)',\r\n  retina : 'only screen and (-webkit-min-device-pixel-ratio: 2),' +\r\n    'only screen and (min--moz-device-pixel-ratio: 2),' +\r\n    'only screen and (-o-min-device-pixel-ratio: 2/1),' +\r\n    'only screen and (min-device-pixel-ratio: 2),' +\r\n    'only screen and (min-resolution: 192dpi),' +\r\n    'only screen and (min-resolution: 2dppx)'\r\n};\r\n\r\nvar MediaQuery = {\r\n  queries: [],\r\n\r\n  current: '',\r\n\r\n  /**\r\n   * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var self = this;\r\n    var extractedStyles = $('.foundation-mq').css('font-family');\r\n    var namedQueries;\r\n\r\n    namedQueries = parseStyleToObject(extractedStyles);\r\n\r\n    for (var key in namedQueries) {\r\n      if(namedQueries.hasOwnProperty(key)) {\r\n        self.queries.push({\r\n          name: key,\r\n          value: `only screen and (min-width: ${namedQueries[key]})`\r\n        });\r\n      }\r\n    }\r\n\r\n    this.current = this._getCurrentSize();\r\n\r\n    this._watcher();\r\n  },\r\n\r\n  /**\r\n   * Checks if the screen is at least as wide as a breakpoint.\r\n   * @function\r\n   * @param {String} size - Name of the breakpoint to check.\r\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\r\n   */\r\n  atLeast(size) {\r\n    var query = this.get(size);\r\n\r\n    if (query) {\r\n      return window.matchMedia(query).matches;\r\n    }\r\n\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Checks if the screen matches to a breakpoint.\r\n   * @function\r\n   * @param {String} size - Name of the breakpoint to check, either 'small only' or 'small'. Omitting 'only' falls back to using atLeast() method.\r\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it does not.\r\n   */\r\n  is(size) {\r\n    size = size.trim().split(' ');\r\n    if(size.length > 1 && size[1] === 'only') {\r\n      if(size[0] === this._getCurrentSize()) return true;\r\n    } else {\r\n      return this.atLeast(size[0]);\r\n    }\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Gets the media query of a breakpoint.\r\n   * @function\r\n   * @param {String} size - Name of the breakpoint to get.\r\n   * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\r\n   */\r\n  get(size) {\r\n    for (var i in this.queries) {\r\n      if(this.queries.hasOwnProperty(i)) {\r\n        var query = this.queries[i];\r\n        if (size === query.name) return query.value;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  /**\r\n   * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\r\n   * @function\r\n   * @private\r\n   * @returns {String} Name of the current breakpoint.\r\n   */\r\n  _getCurrentSize() {\r\n    var matched;\r\n\r\n    for (var i = 0; i < this.queries.length; i++) {\r\n      var query = this.queries[i];\r\n\r\n      if (window.matchMedia(query.value).matches) {\r\n        matched = query;\r\n      }\r\n    }\r\n\r\n    if (typeof matched === 'object') {\r\n      return matched.name;\r\n    } else {\r\n      return matched;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\r\n   * @function\r\n   * @private\r\n   */\r\n  _watcher() {\r\n    $(window).on('resize.zf.mediaquery', () => {\r\n      var newSize = this._getCurrentSize(), currentSize = this.current;\r\n\r\n      if (newSize !== currentSize) {\r\n        // Change the current media query\r\n        this.current = newSize;\r\n\r\n        // Broadcast the media query change on the window\r\n        $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nFoundation.MediaQuery = MediaQuery;\r\n\r\n// matchMedia() polyfill - Test a CSS media type/query in JS.\r\n// Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\r\nwindow.matchMedia || (window.matchMedia = function() {\r\n  'use strict';\r\n\r\n  // For browsers that support matchMedium api such as IE 9 and webkit\r\n  var styleMedia = (window.styleMedia || window.media);\r\n\r\n  // For those that don't support matchMedium\r\n  if (!styleMedia) {\r\n    var style   = document.createElement('style'),\r\n    script      = document.getElementsByTagName('script')[0],\r\n    info        = null;\r\n\r\n    style.type  = 'text/css';\r\n    style.id    = 'matchmediajs-test';\r\n\r\n    script && script.parentNode && script.parentNode.insertBefore(style, script);\r\n\r\n    // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\r\n    info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\r\n\r\n    styleMedia = {\r\n      matchMedium(media) {\r\n        var text = `@media ${media}{ #matchmediajs-test { width: 1px; } }`;\r\n\r\n        // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\r\n        if (style.styleSheet) {\r\n          style.styleSheet.cssText = text;\r\n        } else {\r\n          style.textContent = text;\r\n        }\r\n\r\n        // Test if media query is true or false\r\n        return info.width === '1px';\r\n      }\r\n    }\r\n  }\r\n\r\n  return function(media) {\r\n    return {\r\n      matches: styleMedia.matchMedium(media || 'all'),\r\n      media: media || 'all'\r\n    };\r\n  }\r\n}());\r\n\r\n// Thank you: https://github.com/sindresorhus/query-string\r\nfunction parseStyleToObject(str) {\r\n  var styleObject = {};\r\n\r\n  if (typeof str !== 'string') {\r\n    return styleObject;\r\n  }\r\n\r\n  str = str.trim().slice(1, -1); // browsers re-quote string style values\r\n\r\n  if (!str) {\r\n    return styleObject;\r\n  }\r\n\r\n  styleObject = str.split('&').reduce(function(ret, param) {\r\n    var parts = param.replace(/\\+/g, ' ').split('=');\r\n    var key = parts[0];\r\n    var val = parts[1];\r\n    key = decodeURIComponent(key);\r\n\r\n    // missing `=` should be `null`:\r\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\r\n    val = val === undefined ? null : decodeURIComponent(val);\r\n\r\n    if (!ret.hasOwnProperty(key)) {\r\n      ret[key] = val;\r\n    } else if (Array.isArray(ret[key])) {\r\n      ret[key].push(val);\r\n    } else {\r\n      ret[key] = [ret[key], val];\r\n    }\r\n    return ret;\r\n  }, {});\r\n\r\n  return styleObject;\r\n}\r\n\r\nFoundation.MediaQuery = MediaQuery;\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Motion module.\r\n * @module foundation.motion\r\n */\r\n\r\nconst initClasses   = ['mui-enter', 'mui-leave'];\r\nconst activeClasses = ['mui-enter-active', 'mui-leave-active'];\r\n\r\nconst Motion = {\r\n  animateIn: function(element, animation, cb) {\r\n    animate(true, element, animation, cb);\r\n  },\r\n\r\n  animateOut: function(element, animation, cb) {\r\n    animate(false, element, animation, cb);\r\n  }\r\n}\r\n\r\nfunction Move(duration, elem, fn){\r\n  var anim, prog, start = null;\r\n  // console.log('called');\r\n\r\n  if (duration === 0) {\r\n    fn.apply(elem);\r\n    elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\r\n    return;\r\n  }\r\n\r\n  function move(ts){\r\n    if(!start) start = ts;\r\n    // console.log(start, ts);\r\n    prog = ts - start;\r\n    fn.apply(elem);\r\n\r\n    if(prog < duration){ anim = window.requestAnimationFrame(move, elem); }\r\n    else{\r\n      window.cancelAnimationFrame(anim);\r\n      elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\r\n    }\r\n  }\r\n  anim = window.requestAnimationFrame(move);\r\n}\r\n\r\n/**\r\n * Animates an element in or out using a CSS transition class.\r\n * @function\r\n * @private\r\n * @param {Boolean} isIn - Defines if the animation is in or out.\r\n * @param {Object} element - jQuery or HTML object to animate.\r\n * @param {String} animation - CSS class to use.\r\n * @param {Function} cb - Callback to run when animation is finished.\r\n */\r\nfunction animate(isIn, element, animation, cb) {\r\n  element = $(element).eq(0);\r\n\r\n  if (!element.length) return;\r\n\r\n  var initClass = isIn ? initClasses[0] : initClasses[1];\r\n  var activeClass = isIn ? activeClasses[0] : activeClasses[1];\r\n\r\n  // Set up the animation\r\n  reset();\r\n\r\n  element\r\n    .addClass(animation)\r\n    .css('transition', 'none');\r\n\r\n  requestAnimationFrame(() => {\r\n    element.addClass(initClass);\r\n    if (isIn) element.show();\r\n  });\r\n\r\n  // Start the animation\r\n  requestAnimationFrame(() => {\r\n    element[0].offsetWidth;\r\n    element\r\n      .css('transition', '')\r\n      .addClass(activeClass);\r\n  });\r\n\r\n  // Clean up the animation when it finishes\r\n  element.one(Foundation.transitionend(element), finish);\r\n\r\n  // Hides the element (for out animations), resets the element, and runs a callback\r\n  function finish() {\r\n    if (!isIn) element.hide();\r\n    reset();\r\n    if (cb) cb.apply(element);\r\n  }\r\n\r\n  // Resets transitions and removes motion-specific classes\r\n  function reset() {\r\n    element[0].style.transitionDuration = 0;\r\n    element.removeClass(`${initClass} ${activeClass} ${animation}`);\r\n  }\r\n}\r\n\r\nFoundation.Move = Move;\r\nFoundation.Motion = Motion;\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\nconst Nest = {\r\n  Feather(menu, type = 'zf') {\r\n    menu.attr('role', 'menubar');\r\n\r\n    var items = menu.find('li').attr({'role': 'menuitem'}),\r\n        subMenuClass = `is-${type}-submenu`,\r\n        subItemClass = `${subMenuClass}-item`,\r\n        hasSubClass = `is-${type}-submenu-parent`;\r\n\r\n    items.each(function() {\r\n      var $item = $(this),\r\n          $sub = $item.children('ul');\r\n\r\n      if ($sub.length) {\r\n        $item\r\n          .addClass(hasSubClass)\r\n          .attr({\r\n            'aria-haspopup': true,\r\n            'aria-label': $item.children('a:first').text()\r\n          });\r\n          // Note:  Drilldowns behave differently in how they hide, and so need\r\n          // additional attributes.  We should look if this possibly over-generalized\r\n          // utility (Nest) is appropriate when we rework menus in 6.4\r\n          if(type === 'drilldown') {\r\n            $item.attr({'aria-expanded': false});\r\n          }\r\n\r\n        $sub\r\n          .addClass(`submenu ${subMenuClass}`)\r\n          .attr({\r\n            'data-submenu': '',\r\n            'role': 'menu'\r\n          });\r\n        if(type === 'drilldown') {\r\n          $sub.attr({'aria-hidden': true});\r\n        }\r\n      }\r\n\r\n      if ($item.parent('[data-submenu]').length) {\r\n        $item.addClass(`is-submenu-item ${subItemClass}`);\r\n      }\r\n    });\r\n\r\n    return;\r\n  },\r\n\r\n  Burn(menu, type) {\r\n    var //items = menu.find('li'),\r\n        subMenuClass = `is-${type}-submenu`,\r\n        subItemClass = `${subMenuClass}-item`,\r\n        hasSubClass = `is-${type}-submenu-parent`;\r\n\r\n    menu\r\n      .find('>li, .menu, .menu > li')\r\n      .removeClass(`${subMenuClass} ${subItemClass} ${hasSubClass} is-submenu-item submenu is-active`)\r\n      .removeAttr('data-submenu').css('display', '');\r\n\r\n    // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\r\n    //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\r\n    //           .removeAttr('data-submenu'));\r\n    // items.each(function(){\r\n    //   var $item = $(this),\r\n    //       $sub = $item.children('ul');\r\n    //   if($item.parent('[data-submenu]').length){\r\n    //     $item.removeClass('is-submenu-item ' + subItemClass);\r\n    //   }\r\n    //   if($sub.length){\r\n    //     $item.removeClass('has-submenu');\r\n    //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\r\n    //   }\r\n    // });\r\n  }\r\n}\r\n\r\nFoundation.Nest = Nest;\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\nfunction Timer(elem, options, cb) {\r\n  var _this = this,\r\n      duration = options.duration,//options is an object for easily adding features later.\r\n      nameSpace = Object.keys(elem.data())[0] || 'timer',\r\n      remain = -1,\r\n      start,\r\n      timer;\r\n\r\n  this.isPaused = false;\r\n\r\n  this.restart = function() {\r\n    remain = -1;\r\n    clearTimeout(timer);\r\n    this.start();\r\n  }\r\n\r\n  this.start = function() {\r\n    this.isPaused = false;\r\n    // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\r\n    clearTimeout(timer);\r\n    remain = remain <= 0 ? duration : remain;\r\n    elem.data('paused', false);\r\n    start = Date.now();\r\n    timer = setTimeout(function(){\r\n      if(options.infinite){\r\n        _this.restart();//rerun the timer.\r\n      }\r\n      if (cb && typeof cb === 'function') { cb(); }\r\n    }, remain);\r\n    elem.trigger(`timerstart.zf.${nameSpace}`);\r\n  }\r\n\r\n  this.pause = function() {\r\n    this.isPaused = true;\r\n    //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\r\n    clearTimeout(timer);\r\n    elem.data('paused', true);\r\n    var end = Date.now();\r\n    remain = remain - (end - start);\r\n    elem.trigger(`timerpaused.zf.${nameSpace}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Runs a callback function when images are fully loaded.\r\n * @param {Object} images - Image(s) to check if loaded.\r\n * @param {Func} callback - Function to execute when image is fully loaded.\r\n */\r\nfunction onImagesLoaded(images, callback){\r\n  var self = this,\r\n      unloaded = images.length;\r\n\r\n  if (unloaded === 0) {\r\n    callback();\r\n  }\r\n\r\n  images.each(function() {\r\n    // Check if image is loaded\r\n    if (this.complete || (this.readyState === 4) || (this.readyState === 'complete')) {\r\n      singleImageLoaded();\r\n    }\r\n    // Force load the image\r\n    else {\r\n      // fix for IE. See https://css-tricks.com/snippets/jquery/fixing-load-in-ie-for-cached-images/\r\n      var src = $(this).attr('src');\r\n      $(this).attr('src', src + (src.indexOf('?') >= 0 ? '&' : '?') + (new Date().getTime()));\r\n      $(this).one('load', function() {\r\n        singleImageLoaded();\r\n      });\r\n    }\r\n  });\r\n\r\n  function singleImageLoaded() {\r\n    unloaded--;\r\n    if (unloaded === 0) {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\nFoundation.Timer = Timer;\r\nFoundation.onImagesLoaded = onImagesLoaded;\r\n\r\n}(jQuery);\r\n","//**************************************************\r\n//**Work inspired by multiple jquery swipe plugins**\r\n//**Done by Yohai Ararat ***************************\r\n//**************************************************\r\n(function($) {\r\n\r\n  $.spotSwipe = {\r\n    version: '1.0.0',\r\n    enabled: 'ontouchstart' in document.documentElement,\r\n    preventDefault: false,\r\n    moveThreshold: 75,\r\n    timeThreshold: 200\r\n  };\r\n\r\n  var   startPosX,\r\n        startPosY,\r\n        startTime,\r\n        elapsedTime,\r\n        isMoving = false;\r\n\r\n  function onTouchEnd() {\r\n    //  alert(this);\r\n    this.removeEventListener('touchmove', onTouchMove);\r\n    this.removeEventListener('touchend', onTouchEnd);\r\n    isMoving = false;\r\n  }\r\n\r\n  function onTouchMove(e) {\r\n    if ($.spotSwipe.preventDefault) { e.preventDefault(); }\r\n    if(isMoving) {\r\n      var x = e.touches[0].pageX;\r\n      var y = e.touches[0].pageY;\r\n      var dx = startPosX - x;\r\n      var dy = startPosY - y;\r\n      var dir;\r\n      elapsedTime = new Date().getTime() - startTime;\r\n      if(Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\r\n        dir = dx > 0 ? 'left' : 'right';\r\n      }\r\n      // else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\r\n      //   dir = dy > 0 ? 'down' : 'up';\r\n      // }\r\n      if(dir) {\r\n        e.preventDefault();\r\n        onTouchEnd.call(this);\r\n        $(this).trigger('swipe', dir).trigger(`swipe${dir}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  function onTouchStart(e) {\r\n    if (e.touches.length == 1) {\r\n      startPosX = e.touches[0].pageX;\r\n      startPosY = e.touches[0].pageY;\r\n      isMoving = true;\r\n      startTime = new Date().getTime();\r\n      this.addEventListener('touchmove', onTouchMove, false);\r\n      this.addEventListener('touchend', onTouchEnd, false);\r\n    }\r\n  }\r\n\r\n  function init() {\r\n    this.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\r\n  }\r\n\r\n  function teardown() {\r\n    this.removeEventListener('touchstart', onTouchStart);\r\n  }\r\n\r\n  $.event.special.swipe = { setup: init };\r\n\r\n  $.each(['left', 'up', 'down', 'right'], function () {\r\n    $.event.special[`swipe${this}`] = { setup: function(){\r\n      $(this).on('swipe', $.noop);\r\n    } };\r\n  });\r\n})(jQuery);\r\n/****************************************************\r\n * Method for adding psuedo drag events to elements *\r\n ***************************************************/\r\n!function($){\r\n  $.fn.addTouch = function(){\r\n    this.each(function(i,el){\r\n      $(el).bind('touchstart touchmove touchend touchcancel',function(){\r\n        //we pass the original event object because the jQuery event\r\n        //object is normalized to w3c specs and does not provide the TouchList\r\n        handleTouch(event);\r\n      });\r\n    });\r\n\r\n    var handleTouch = function(event){\r\n      var touches = event.changedTouches,\r\n          first = touches[0],\r\n          eventTypes = {\r\n            touchstart: 'mousedown',\r\n            touchmove: 'mousemove',\r\n            touchend: 'mouseup'\r\n          },\r\n          type = eventTypes[event.type],\r\n          simulatedEvent\r\n        ;\r\n\r\n      if('MouseEvent' in window && typeof window.MouseEvent === 'function') {\r\n        simulatedEvent = new window.MouseEvent(type, {\r\n          'bubbles': true,\r\n          'cancelable': true,\r\n          'screenX': first.screenX,\r\n          'screenY': first.screenY,\r\n          'clientX': first.clientX,\r\n          'clientY': first.clientY\r\n        });\r\n      } else {\r\n        simulatedEvent = document.createEvent('MouseEvent');\r\n        simulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0/*left*/, null);\r\n      }\r\n      first.target.dispatchEvent(simulatedEvent);\r\n    };\r\n  };\r\n}(jQuery);\r\n\r\n\r\n//**********************************\r\n//**From the jQuery Mobile Library**\r\n//**need to recreate functionality**\r\n//**and try to improve if possible**\r\n//**********************************\r\n\r\n/* Removing the jQuery function ****\r\n************************************\r\n\r\n(function( $, window, undefined ) {\r\n\r\n\tvar $document = $( document ),\r\n\t\t// supportTouch = $.mobile.support.touch,\r\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\r\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\r\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\r\n\r\n\t// setup new event shortcuts\r\n\t$.each( ( \"touchstart touchmove touchend \" +\r\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\r\n\r\n\t\t$.fn[ name ] = function( fn ) {\r\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\r\n\t\t};\r\n\r\n\t\t// jQuery < 1.8\r\n\t\tif ( $.attrFn ) {\r\n\t\t\t$.attrFn[ name ] = true;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\r\n\t\tvar originalType = event.type;\r\n\t\tevent.type = eventType;\r\n\t\tif ( bubble ) {\r\n\t\t\t$.event.trigger( event, undefined, obj );\r\n\t\t} else {\r\n\t\t\t$.event.dispatch.call( obj, event );\r\n\t\t}\r\n\t\tevent.type = originalType;\r\n\t}\r\n\r\n\t// also handles taphold\r\n\r\n\t// Also handles swipeleft, swiperight\r\n\t$.event.special.swipe = {\r\n\r\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\r\n\t\tscrollSupressionThreshold: 30,\r\n\r\n\t\t// More time than this, and it isn't a swipe.\r\n\t\tdurationThreshold: 1000,\r\n\r\n\t\t// Swipe horizontal displacement must be more than this.\r\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\t// Swipe vertical displacement must be less than this.\r\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\tgetLocation: function ( event ) {\r\n\t\t\tvar winPageX = window.pageXOffset,\r\n\t\t\t\twinPageY = window.pageYOffset,\r\n\t\t\t\tx = event.clientX,\r\n\t\t\t\ty = event.clientY;\r\n\r\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\r\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\r\n\r\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\r\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\r\n\t\t\t\tx = x - winPageX;\r\n\t\t\t\ty = y - winPageY;\r\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\r\n\r\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\r\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\r\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\r\n\t\t\t\tx = event.pageX - winPageX;\r\n\t\t\t\ty = event.pageY - winPageY;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tstart: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\r\n\t\t\t\t\t\torigin: $( event.target )\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\tstop: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\r\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\r\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\r\n\r\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\r\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t// This serves as a flag to ensure that at most one swipe event event is\r\n\t\t// in work at any given time\r\n\t\teventInProgress: false,\r\n\r\n\t\tsetup: function() {\r\n\t\t\tvar events,\r\n\t\t\t\tthisObject = this,\r\n\t\t\t\t$this = $( thisObject ),\r\n\t\t\t\tcontext = {};\r\n\r\n\t\t\t// Retrieve the events data for this element and add the swipe context\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( !events ) {\r\n\t\t\t\tevents = { length: 0 };\r\n\t\t\t\t$.data( this, \"mobile-events\", events );\r\n\t\t\t}\r\n\t\t\tevents.length++;\r\n\t\t\tevents.swipe = context;\r\n\r\n\t\t\tcontext.start = function( event ) {\r\n\r\n\t\t\t\t// Bail if we're already working on a swipe event\r\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\r\n\r\n\t\t\t\tvar stop,\r\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\r\n\t\t\t\t\torigTarget = event.target,\r\n\t\t\t\t\temitted = false;\r\n\r\n\t\t\t\tcontext.move = function( event ) {\r\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\r\n\t\t\t\t\tif ( !emitted ) {\r\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\r\n\t\t\t\t\t\tif ( emitted ) {\r\n\r\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// prevent scrolling\r\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcontext.stop = function() {\r\n\t\t\t\t\t\temitted = true;\r\n\r\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t\t\tcontext.move = null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$document.on( touchMoveEvent, context.move )\r\n\t\t\t\t\t.one( touchStopEvent, context.stop );\r\n\t\t\t};\r\n\t\t\t$this.on( touchStartEvent, context.start );\r\n\t\t},\r\n\r\n\t\tteardown: function() {\r\n\t\t\tvar events, context;\r\n\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( events ) {\r\n\t\t\t\tcontext = events.swipe;\r\n\t\t\t\tdelete events.swipe;\r\n\t\t\t\tevents.length--;\r\n\t\t\t\tif ( events.length === 0 ) {\r\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( context ) {\r\n\t\t\t\tif ( context.start ) {\r\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.move ) {\r\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.stop ) {\r\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t$.each({\r\n\t\tswipeleft: \"swipe.left\",\r\n\t\tswiperight: \"swipe.right\"\r\n\t}, function( event, sourceEvent ) {\r\n\r\n\t\t$.event.special[ event ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\t$( this ).unbind( sourceEvent );\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n})( jQuery, this );\r\n*/\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\nconst MutationObserver = (function () {\r\n  var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\r\n  for (var i=0; i < prefixes.length; i++) {\r\n    if (`${prefixes[i]}MutationObserver` in window) {\r\n      return window[`${prefixes[i]}MutationObserver`];\r\n    }\r\n  }\r\n  return false;\r\n}());\r\n\r\nconst triggers = (el, type) => {\r\n  el.data(type).split(' ').forEach(id => {\r\n    $(`#${id}`)[ type === 'close' ? 'trigger' : 'triggerHandler'](`${type}.zf.trigger`, [el]);\r\n  });\r\n};\r\n// Elements with [data-open] will reveal a plugin that supports it when clicked.\r\n$(document).on('click.zf.trigger', '[data-open]', function() {\r\n  triggers($(this), 'open');\r\n});\r\n\r\n// Elements with [data-close] will close a plugin that supports it when clicked.\r\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\r\n$(document).on('click.zf.trigger', '[data-close]', function() {\r\n  let id = $(this).data('close');\r\n  if (id) {\r\n    triggers($(this), 'close');\r\n  }\r\n  else {\r\n    $(this).trigger('close.zf.trigger');\r\n  }\r\n});\r\n\r\n// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\r\n$(document).on('click.zf.trigger', '[data-toggle]', function() {\r\n  let id = $(this).data('toggle');\r\n  if (id) {\r\n    triggers($(this), 'toggle');\r\n  } else {\r\n    $(this).trigger('toggle.zf.trigger');\r\n  }\r\n});\r\n\r\n// Elements with [data-closable] will respond to close.zf.trigger events.\r\n$(document).on('close.zf.trigger', '[data-closable]', function(e){\r\n  e.stopPropagation();\r\n  let animation = $(this).data('closable');\r\n\r\n  if(animation !== ''){\r\n    Foundation.Motion.animateOut($(this), animation, function() {\r\n      $(this).trigger('closed.zf');\r\n    });\r\n  }else{\r\n    $(this).fadeOut().trigger('closed.zf');\r\n  }\r\n});\r\n\r\n$(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function() {\r\n  let id = $(this).data('toggle-focus');\r\n  $(`#${id}`).triggerHandler('toggle.zf.trigger', [$(this)]);\r\n});\r\n\r\n/**\r\n* Fires once after all other scripts have loaded\r\n* @function\r\n* @private\r\n*/\r\n$(window).on('load', () => {\r\n  checkListeners();\r\n});\r\n\r\nfunction checkListeners() {\r\n  eventsListener();\r\n  resizeListener();\r\n  scrollListener();\r\n  closemeListener();\r\n}\r\n\r\n//******** only fires this function once on load, if there's something to watch ********\r\nfunction closemeListener(pluginName) {\r\n  var yetiBoxes = $('[data-yeti-box]'),\r\n      plugNames = ['dropdown', 'tooltip', 'reveal'];\r\n\r\n  if(pluginName){\r\n    if(typeof pluginName === 'string'){\r\n      plugNames.push(pluginName);\r\n    }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\r\n      plugNames.concat(pluginName);\r\n    }else{\r\n      console.error('Plugin names must be strings');\r\n    }\r\n  }\r\n  if(yetiBoxes.length){\r\n    let listeners = plugNames.map((name) => {\r\n      return `closeme.zf.${name}`;\r\n    }).join(' ');\r\n\r\n    $(window).off(listeners).on(listeners, function(e, pluginId){\r\n      let plugin = e.namespace.split('.')[0];\r\n      let plugins = $(`[data-${plugin}]`).not(`[data-yeti-box=\"${pluginId}\"]`);\r\n\r\n      plugins.each(function(){\r\n        let _this = $(this);\r\n\r\n        _this.triggerHandler('close.zf.trigger', [_this]);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction resizeListener(debounce){\r\n  let timer,\r\n      $nodes = $('[data-resize]');\r\n  if($nodes.length){\r\n    $(window).off('resize.zf.trigger')\r\n    .on('resize.zf.trigger', function(e) {\r\n      if (timer) { clearTimeout(timer); }\r\n\r\n      timer = setTimeout(function(){\r\n\r\n        if(!MutationObserver){//fallback for IE 9\r\n          $nodes.each(function(){\r\n            $(this).triggerHandler('resizeme.zf.trigger');\r\n          });\r\n        }\r\n        //trigger all listening elements and signal a resize event\r\n        $nodes.attr('data-events', \"resize\");\r\n      }, debounce || 10);//default time to emit resize event\r\n    });\r\n  }\r\n}\r\n\r\nfunction scrollListener(debounce){\r\n  let timer,\r\n      $nodes = $('[data-scroll]');\r\n  if($nodes.length){\r\n    $(window).off('scroll.zf.trigger')\r\n    .on('scroll.zf.trigger', function(e){\r\n      if(timer){ clearTimeout(timer); }\r\n\r\n      timer = setTimeout(function(){\r\n\r\n        if(!MutationObserver){//fallback for IE 9\r\n          $nodes.each(function(){\r\n            $(this).triggerHandler('scrollme.zf.trigger');\r\n          });\r\n        }\r\n        //trigger all listening elements and signal a scroll event\r\n        $nodes.attr('data-events', \"scroll\");\r\n      }, debounce || 10);//default time to emit scroll event\r\n    });\r\n  }\r\n}\r\n\r\nfunction eventsListener() {\r\n  if(!MutationObserver){ return false; }\r\n  let nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\r\n\r\n  //element callback\r\n  var listeningElementsMutation = function (mutationRecordsList) {\r\n      var $target = $(mutationRecordsList[0].target);\r\n\r\n\t  //trigger the event handler for the element depending on type\r\n      switch (mutationRecordsList[0].type) {\r\n\r\n        case \"attributes\":\r\n          if ($target.attr(\"data-events\") === \"scroll\" && mutationRecordsList[0].attributeName === \"data-events\") {\r\n\t\t  \t$target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\r\n\t\t  }\r\n\t\t  if ($target.attr(\"data-events\") === \"resize\" && mutationRecordsList[0].attributeName === \"data-events\") {\r\n\t\t  \t$target.triggerHandler('resizeme.zf.trigger', [$target]);\r\n\t\t   }\r\n\t\t  if (mutationRecordsList[0].attributeName === \"style\") {\r\n\t\t\t  $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\r\n\t\t\t  $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\r\n\t\t  }\r\n\t\t  break;\r\n\r\n        case \"childList\":\r\n\t\t  $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\r\n\t\t  $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\r\n          break;\r\n\r\n        default:\r\n          return false;\r\n        //nothing\r\n      }\r\n    };\r\n\r\n    if (nodes.length) {\r\n      //for each element that needs to listen for resizing, scrolling, or mutation add a single observer\r\n      for (var i = 0; i <= nodes.length - 1; i++) {\r\n        var elementObserver = new MutationObserver(listeningElementsMutation);\r\n        elementObserver.observe(nodes[i], { attributes: true, childList: true, characterData: false, subtree: true, attributeFilter: [\"data-events\", \"style\"] });\r\n      }\r\n    }\r\n  }\r\n\r\n// ------------------------------------\r\n\r\n// [PH]\r\n// Foundation.CheckWatchers = checkWatchers;\r\nFoundation.IHearYou = checkListeners;\r\n// Foundation.ISeeYou = scrollListener;\r\n// Foundation.IFeelYou = closemeListener;\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Abide module.\r\n * @module foundation.abide\r\n */\r\n\r\nclass Abide {\r\n  /**\r\n   * Creates a new instance of Abide.\r\n   * @class\r\n   * @fires Abide#init\r\n   * @param {Object} element - jQuery object to add the trigger to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options = {}) {\r\n    this.$element = element;\r\n    this.options  = $.extend({}, Abide.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Abide');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Abide plugin and calls functions to get Abide functioning on load.\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.$inputs = this.$element.find('input, textarea, select');\r\n\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Initializes events for Abide.\r\n   * @private\r\n   */\r\n  _events() {\r\n    this.$element.off('.abide')\r\n      .on('reset.zf.abide', () => {\r\n        this.resetForm();\r\n      })\r\n      .on('submit.zf.abide', () => {\r\n        return this.validateForm();\r\n      });\r\n\r\n    if (this.options.validateOn === 'fieldChange') {\r\n      this.$inputs\r\n        .off('change.zf.abide')\r\n        .on('change.zf.abide', (e) => {\r\n          this.validateInput($(e.target));\r\n        });\r\n    }\r\n\r\n    if (this.options.liveValidate) {\r\n      this.$inputs\r\n        .off('input.zf.abide')\r\n        .on('input.zf.abide', (e) => {\r\n          this.validateInput($(e.target));\r\n        });\r\n    }\r\n\r\n    if (this.options.validateOnBlur) {\r\n      this.$inputs\r\n        .off('blur.zf.abide')\r\n        .on('blur.zf.abide', (e) => {\r\n          this.validateInput($(e.target));\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calls necessary functions to update Abide upon DOM change\r\n   * @private\r\n   */\r\n  _reflow() {\r\n    this._init();\r\n  }\r\n\r\n  /**\r\n   * Checks whether or not a form element has the required attribute and if it's checked or not\r\n   * @param {Object} element - jQuery object to check for required attribute\r\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n   */\r\n  requiredCheck($el) {\r\n    if (!$el.attr('required')) return true;\r\n\r\n    var isGood = true;\r\n\r\n    switch ($el[0].type) {\r\n      case 'checkbox':\r\n        isGood = $el[0].checked;\r\n        break;\r\n\r\n      case 'select':\r\n      case 'select-one':\r\n      case 'select-multiple':\r\n        var opt = $el.find('option:selected');\r\n        if (!opt.length || !opt.val()) isGood = false;\r\n        break;\r\n\r\n      default:\r\n        if(!$el.val() || !$el.val().length) isGood = false;\r\n    }\r\n\r\n    return isGood;\r\n  }\r\n\r\n  /**\r\n   * Get:\r\n   * - Based on $el, the first element(s) corresponding to `formErrorSelector` in this order:\r\n   *   1. The element's direct sibling('s).\r\n   *   2. The element's parent's children.\r\n   * - Element(s) with the attribute `[data-form-error-for]` set with the element's id.\r\n   *\r\n   * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\r\n   *\r\n   * @param {Object} $el - jQuery object to use as reference to find the form error selector.\r\n   * @returns {Object} jQuery object with the selector.\r\n   */\r\n  findFormError($el) {\r\n    var id = $el[0].id;\r\n    var $error = $el.siblings(this.options.formErrorSelector);\r\n\r\n    if (!$error.length) {\r\n      $error = $el.parent().find(this.options.formErrorSelector);\r\n    }\r\n\r\n    $error = $error.add(this.$element.find(`[data-form-error-for=\"${id}\"]`));\r\n\r\n    return $error;\r\n  }\r\n\r\n  /**\r\n   * Get the first element in this order:\r\n   * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n   * 3. The `.closest()` <label>\r\n   *\r\n   * @param {Object} $el - jQuery object to check for required attribute\r\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n   */\r\n  findLabel($el) {\r\n    var id = $el[0].id;\r\n    var $label = this.$element.find(`label[for=\"${id}\"]`);\r\n\r\n    if (!$label.length) {\r\n      return $el.closest('label');\r\n    }\r\n\r\n    return $label;\r\n  }\r\n\r\n  /**\r\n   * Get the set of labels associated with a set of radio els in this order\r\n   * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n   * 3. The `.closest()` <label>\r\n   *\r\n   * @param {Object} $el - jQuery object to check for required attribute\r\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n   */\r\n  findRadioLabels($els) {\r\n    var labels = $els.map((i, el) => {\r\n      var id = el.id;\r\n      var $label = this.$element.find(`label[for=\"${id}\"]`);\r\n\r\n      if (!$label.length) {\r\n        $label = $(el).closest('label');\r\n      }\r\n      return $label[0];\r\n    });\r\n\r\n    return $(labels);\r\n  }\r\n\r\n  /**\r\n   * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\r\n   * @param {Object} $el - jQuery object to add the class to\r\n   */\r\n  addErrorClasses($el) {\r\n    var $label = this.findLabel($el);\r\n    var $formError = this.findFormError($el);\r\n\r\n    if ($label.length) {\r\n      $label.addClass(this.options.labelErrorClass);\r\n    }\r\n\r\n    if ($formError.length) {\r\n      $formError.addClass(this.options.formErrorClass);\r\n    }\r\n\r\n    $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\r\n  }\r\n\r\n  /**\r\n   * Remove CSS error classes etc from an entire radio button group\r\n   * @param {String} groupName - A string that specifies the name of a radio button group\r\n   *\r\n   */\r\n\r\n  removeRadioErrorClasses(groupName) {\r\n    var $els = this.$element.find(`:radio[name=\"${groupName}\"]`);\r\n    var $labels = this.findRadioLabels($els);\r\n    var $formErrors = this.findFormError($els);\r\n\r\n    if ($labels.length) {\r\n      $labels.removeClass(this.options.labelErrorClass);\r\n    }\r\n\r\n    if ($formErrors.length) {\r\n      $formErrors.removeClass(this.options.formErrorClass);\r\n    }\r\n\r\n    $els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\r\n\r\n  }\r\n\r\n  /**\r\n   * Removes CSS error class as specified by the Abide settings from the label, input, and the form\r\n   * @param {Object} $el - jQuery object to remove the class from\r\n   */\r\n  removeErrorClasses($el) {\r\n    // radios need to clear all of the els\r\n    if($el[0].type == 'radio') {\r\n      return this.removeRadioErrorClasses($el.attr('name'));\r\n    }\r\n\r\n    var $label = this.findLabel($el);\r\n    var $formError = this.findFormError($el);\r\n\r\n    if ($label.length) {\r\n      $label.removeClass(this.options.labelErrorClass);\r\n    }\r\n\r\n    if ($formError.length) {\r\n      $formError.removeClass(this.options.formErrorClass);\r\n    }\r\n\r\n    $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\r\n  }\r\n\r\n  /**\r\n   * Goes through a form to find inputs and proceeds to validate them in ways specific to their type. \r\n   * Ignores inputs with data-abide-ignore, type=\"hidden\" or disabled attributes set\r\n   * @fires Abide#invalid\r\n   * @fires Abide#valid\r\n   * @param {Object} element - jQuery object to validate, should be an HTML input\r\n   * @returns {Boolean} goodToGo - If the input is valid or not.\r\n   */\r\n  validateInput($el) {\r\n    var clearRequire = this.requiredCheck($el),\r\n        validated = false,\r\n        customValidator = true,\r\n        validator = $el.attr('data-validator'),\r\n        equalTo = true;\r\n\r\n    // don't validate ignored inputs or hidden inputs or disabled inputs\r\n    if ($el.is('[data-abide-ignore]') || $el.is('[type=\"hidden\"]') || $el.is('[disabled]')) {\r\n      return true;\r\n    }\r\n\r\n    switch ($el[0].type) {\r\n      case 'radio':\r\n        validated = this.validateRadio($el.attr('name'));\r\n        break;\r\n\r\n      case 'checkbox':\r\n        validated = clearRequire;\r\n        break;\r\n\r\n      case 'select':\r\n      case 'select-one':\r\n      case 'select-multiple':\r\n        validated = clearRequire;\r\n        break;\r\n\r\n      default:\r\n        validated = this.validateText($el);\r\n    }\r\n\r\n    if (validator) {\r\n      customValidator = this.matchValidation($el, validator, $el.attr('required'));\r\n    }\r\n\r\n    if ($el.attr('data-equalto')) {\r\n      equalTo = this.options.validators.equalTo($el);\r\n    }\r\n\r\n\r\n    var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\r\n    var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\r\n\r\n    if (goodToGo) {\r\n      // Re-validate inputs that depend on this one with equalto\r\n      const dependentElements = this.$element.find(`[data-equalto=\"${$el.attr('id')}\"]`);\r\n      if (dependentElements.length) {\r\n        let _this = this;\r\n        dependentElements.each(function() {\r\n          if ($(this).val()) {\r\n            _this.validateInput($(this));\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\r\n\r\n    /**\r\n     * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\r\n     * Trigger includes the DOM element of the input.\r\n     * @event Abide#valid\r\n     * @event Abide#invalid\r\n     */\r\n    $el.trigger(message, [$el]);\r\n\r\n    return goodToGo;\r\n  }\r\n\r\n  /**\r\n   * Goes through a form and if there are any invalid inputs, it will display the form error element\r\n   * @returns {Boolean} noError - true if no errors were detected...\r\n   * @fires Abide#formvalid\r\n   * @fires Abide#forminvalid\r\n   */\r\n  validateForm() {\r\n    var acc = [];\r\n    var _this = this;\r\n\r\n    this.$inputs.each(function() {\r\n      acc.push(_this.validateInput($(this)));\r\n    });\r\n\r\n    var noError = acc.indexOf(false) === -1;\r\n\r\n    this.$element.find('[data-abide-error]').css('display', (noError ? 'none' : 'block'));\r\n\r\n    /**\r\n     * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\r\n     * Trigger includes the element of the form.\r\n     * @event Abide#formvalid\r\n     * @event Abide#forminvalid\r\n     */\r\n    this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\r\n\r\n    return noError;\r\n  }\r\n\r\n  /**\r\n   * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\r\n   * @param {Object} $el - jQuery object to validate, should be a text input HTML element\r\n   * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\r\n   * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\r\n   */\r\n  validateText($el, pattern) {\r\n    // A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute\r\n    pattern = (pattern || $el.attr('pattern') || $el.attr('type'));\r\n    var inputText = $el.val();\r\n    var valid = false;\r\n\r\n    if (inputText.length) {\r\n      // If the pattern attribute on the element is in Abide's list of patterns, then test that regexp\r\n      if (this.options.patterns.hasOwnProperty(pattern)) {\r\n        valid = this.options.patterns[pattern].test(inputText);\r\n      }\r\n      // If the pattern name isn't also the type attribute of the field, then test it as a regexp\r\n      else if (pattern !== $el.attr('type')) {\r\n        valid = new RegExp(pattern).test(inputText);\r\n      }\r\n      else {\r\n        valid = true;\r\n      }\r\n    }\r\n    // An empty field is valid if it's not required\r\n    else if (!$el.prop('required')) {\r\n      valid = true;\r\n    }\r\n\r\n    return valid;\r\n   }\r\n\r\n  /**\r\n   * Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\r\n   * @param {String} groupName - A string that specifies the name of a radio button group\r\n   * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\r\n   */\r\n  validateRadio(groupName) {\r\n    // If at least one radio in the group has the `required` attribute, the group is considered required\r\n    // Per W3C spec, all radio buttons in a group should have `required`, but we're being nice\r\n    var $group = this.$element.find(`:radio[name=\"${groupName}\"]`);\r\n    var valid = false, required = false;\r\n\r\n    // For the group to be required, at least one radio needs to be required\r\n    $group.each((i, e) => {\r\n      if ($(e).attr('required')) {\r\n        required = true;\r\n      }\r\n    });\r\n    if(!required) valid=true;\r\n\r\n    if (!valid) {\r\n      // For the group to be valid, at least one radio needs to be checked\r\n      $group.each((i, e) => {\r\n        if ($(e).prop('checked')) {\r\n          valid = true;\r\n        }\r\n      });\r\n    };\r\n\r\n    return valid;\r\n  }\r\n\r\n  /**\r\n   * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\r\n   * @param {Object} $el - jQuery input element.\r\n   * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\r\n   * @param {Boolean} required - self explanatory?\r\n   * @returns {Boolean} - true if validations passed.\r\n   */\r\n  matchValidation($el, validators, required) {\r\n    required = required ? true : false;\r\n\r\n    var clear = validators.split(' ').map((v) => {\r\n      return this.options.validators[v]($el, required, $el.parent());\r\n    });\r\n    return clear.indexOf(false) === -1;\r\n  }\r\n\r\n  /**\r\n   * Resets form inputs and styles\r\n   * @fires Abide#formreset\r\n   */\r\n  resetForm() {\r\n    var $form = this.$element,\r\n        opts = this.options;\r\n\r\n    $(`.${opts.labelErrorClass}`, $form).not('small').removeClass(opts.labelErrorClass);\r\n    $(`.${opts.inputErrorClass}`, $form).not('small').removeClass(opts.inputErrorClass);\r\n    $(`${opts.formErrorSelector}.${opts.formErrorClass}`).removeClass(opts.formErrorClass);\r\n    $form.find('[data-abide-error]').css('display', 'none');\r\n    $(':input', $form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');\r\n    $(':input:radio', $form).not('[data-abide-ignore]').prop('checked',false).removeAttr('data-invalid');\r\n    $(':input:checkbox', $form).not('[data-abide-ignore]').prop('checked',false).removeAttr('data-invalid');\r\n    /**\r\n     * Fires when the form has been reset.\r\n     * @event Abide#formreset\r\n     */\r\n    $form.trigger('formreset.zf.abide', [$form]);\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of Abide.\r\n   * Removes error styles and classes from elements, without resetting their values.\r\n   */\r\n  destroy() {\r\n    var _this = this;\r\n    this.$element\r\n      .off('.abide')\r\n      .find('[data-abide-error]')\r\n        .css('display', 'none');\r\n\r\n    this.$inputs\r\n      .off('.abide')\r\n      .each(function() {\r\n        _this.removeErrorClasses($(this));\r\n      });\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\n/**\r\n * Default settings for plugin\r\n */\r\nAbide.defaults = {\r\n  /**\r\n   * The default event to validate inputs. Checkboxes and radios validate immediately.\r\n   * Remove or change this value for manual validation.\r\n   * @option\r\n   * @type {?string}\r\n   * @default 'fieldChange'\r\n   */\r\n  validateOn: 'fieldChange',\r\n\r\n  /**\r\n   * Class to be applied to input labels on failed validation.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'is-invalid-label'\r\n   */\r\n  labelErrorClass: 'is-invalid-label',\r\n\r\n  /**\r\n   * Class to be applied to inputs on failed validation.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'is-invalid-input'\r\n   */\r\n  inputErrorClass: 'is-invalid-input',\r\n\r\n  /**\r\n   * Class selector to use to target Form Errors for show/hide.\r\n   * @option\r\n   * @type {string}\r\n   * @default '.form-error'\r\n   */\r\n  formErrorSelector: '.form-error',\r\n\r\n  /**\r\n   * Class added to Form Errors on failed validation.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'is-visible'\r\n   */\r\n  formErrorClass: 'is-visible',\r\n\r\n  /**\r\n   * Set to true to validate text inputs on any value change.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  liveValidate: false,\r\n\r\n  /**\r\n   * Set to true to validate inputs on blur.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  validateOnBlur: false,\r\n\r\n  patterns: {\r\n    alpha : /^[a-zA-Z]+$/,\r\n    alpha_numeric : /^[a-zA-Z0-9]+$/,\r\n    integer : /^[-+]?\\d+$/,\r\n    number : /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\r\n\r\n    // amex, visa, diners\r\n    card : /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\r\n    cvv : /^([0-9]){3,4}$/,\r\n\r\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\r\n    email : /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\r\n\r\n    url : /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\r\n    // abc.de\r\n    domain : /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\r\n\r\n    datetime : /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\r\n    // YYYY-MM-DD\r\n    date : /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\r\n    // HH:MM:SS\r\n    time : /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\r\n    dateISO : /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\r\n    // MM/DD/YYYY\r\n    month_day_year : /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\r\n    // DD/MM/YYYY\r\n    day_month_year : /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\r\n\r\n    // #FFF or #FFFFFF\r\n    color : /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\r\n  },\r\n\r\n  /**\r\n   * Optional validation functions to be used. `equalTo` being the only default included function.\r\n   * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\r\n   * el : The jQuery element to validate.\r\n   * required : Boolean value of the required attribute be present or not.\r\n   * parent : The direct parent of the input.\r\n   * @option\r\n   */\r\n  validators: {\r\n    equalTo: function (el, required, parent) {\r\n      return $(`#${el.attr('data-equalto')}`).val() === el.val();\r\n    }\r\n  }\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Abide, 'Abide');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Accordion module.\r\n * @module foundation.accordion\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.motion\r\n */\r\n\r\nclass Accordion {\r\n  /**\r\n   * Creates a new instance of an accordion.\r\n   * @class\r\n   * @fires Accordion#init\r\n   * @param {jQuery} element - jQuery object to make into an accordion.\r\n   * @param {Object} options - a plain object with settings to override the default options.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Accordion');\r\n    Foundation.Keyboard.register('Accordion', {\r\n      'ENTER': 'toggle',\r\n      'SPACE': 'toggle',\r\n      'ARROW_DOWN': 'next',\r\n      'ARROW_UP': 'previous'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the accordion by animating the preset active pane(s).\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.$element.attr('role', 'tablist');\r\n    this.$tabs = this.$element.children('[data-accordion-item]');\r\n\r\n    this.$tabs.each(function(idx, el) {\r\n      var $el = $(el),\r\n          $content = $el.children('[data-tab-content]'),\r\n          id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\r\n          linkId = el.id || `${id}-label`;\r\n\r\n      $el.find('a:first').attr({\r\n        'aria-controls': id,\r\n        'role': 'tab',\r\n        'id': linkId,\r\n        'aria-expanded': false,\r\n        'aria-selected': false\r\n      });\r\n\r\n      $content.attr({'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id});\r\n    });\r\n    var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\r\n    this.firstTimeInit = true;\r\n    if($initActive.length){\r\n      this.down($initActive, this.firstTimeInit);\r\n      this.firstTimeInit = false;\r\n    }\r\n\r\n    this._checkDeepLink = () => {\r\n      var anchor = window.location.hash;\r\n      //need a hash and a relevant anchor in this tabset\r\n      if(anchor.length) {\r\n        var $link = this.$element.find('[href$=\"'+anchor+'\"]'),\r\n        $anchor = $(anchor);\r\n\r\n        if ($link.length && $anchor) {\r\n          if (!$link.parent('[data-accordion-item]').hasClass('is-active')) {\r\n            this.down($anchor, this.firstTimeInit);\r\n            this.firstTimeInit = false;\r\n          };\r\n\r\n          //roll up a little to show the titles\r\n          if (this.options.deepLinkSmudge) {\r\n            var _this = this;\r\n            $(window).load(function() {\r\n              var offset = _this.$element.offset();\r\n              $('html, body').animate({ scrollTop: offset.top }, _this.options.deepLinkSmudgeDelay);\r\n            });\r\n          }\r\n\r\n          /**\r\n            * Fires when the zplugin has deeplinked at pageload\r\n            * @event Accordion#deeplink\r\n            */\r\n          this.$element.trigger('deeplink.zf.accordion', [$link, $anchor]);\r\n        }\r\n      }\r\n    }\r\n\r\n    //use browser to open a tab, if it exists in this tabset\r\n    if (this.options.deepLink) {\r\n      this._checkDeepLink();\r\n    }\r\n\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers for items within the accordion.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    this.$tabs.each(function() {\r\n      var $elem = $(this);\r\n      var $tabContent = $elem.children('[data-tab-content]');\r\n      if ($tabContent.length) {\r\n        $elem.children('a').off('click.zf.accordion keydown.zf.accordion')\r\n               .on('click.zf.accordion', function(e) {\r\n          e.preventDefault();\r\n          _this.toggle($tabContent);\r\n        }).on('keydown.zf.accordion', function(e){\r\n          Foundation.Keyboard.handleKey(e, 'Accordion', {\r\n            toggle: function() {\r\n              _this.toggle($tabContent);\r\n            },\r\n            next: function() {\r\n              var $a = $elem.next().find('a').focus();\r\n              if (!_this.options.multiExpand) {\r\n                $a.trigger('click.zf.accordion')\r\n              }\r\n            },\r\n            previous: function() {\r\n              var $a = $elem.prev().find('a').focus();\r\n              if (!_this.options.multiExpand) {\r\n                $a.trigger('click.zf.accordion')\r\n              }\r\n            },\r\n            handled: function() {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n    if(this.options.deepLink) {\r\n      $(window).on('popstate', this._checkDeepLink);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the selected content pane's open/close state.\r\n   * @param {jQuery} $target - jQuery object of the pane to toggle (`.accordion-content`).\r\n   * @function\r\n   */\r\n  toggle($target) {\r\n    if($target.parent().hasClass('is-active')) {\r\n      this.up($target);\r\n    } else {\r\n      this.down($target);\r\n    }\r\n    //either replace or update browser history\r\n    if (this.options.deepLink) {\r\n      var anchor = $target.prev('a').attr('href');\r\n\r\n      if (this.options.updateHistory) {\r\n        history.pushState({}, '', anchor);\r\n      } else {\r\n        history.replaceState({}, '', anchor);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the accordion tab defined by `$target`.\r\n   * @param {jQuery} $target - Accordion pane to open (`.accordion-content`).\r\n   * @param {Boolean} firstTime - flag to determine if reflow should happen.\r\n   * @fires Accordion#down\r\n   * @function\r\n   */\r\n  down($target, firstTime) {\r\n    $target\r\n      .attr('aria-hidden', false)\r\n      .parent('[data-tab-content]')\r\n      .addBack()\r\n      .parent().addClass('is-active');\r\n\r\n    if (!this.options.multiExpand && !firstTime) {\r\n      var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\r\n      if ($currentActive.length) {\r\n        this.up($currentActive.not($target));\r\n      }\r\n    }\r\n\r\n    $target.slideDown(this.options.slideSpeed, () => {\r\n      /**\r\n       * Fires when the tab is done opening.\r\n       * @event Accordion#down\r\n       */\r\n      this.$element.trigger('down.zf.accordion', [$target]);\r\n    });\r\n\r\n    $(`#${$target.attr('aria-labelledby')}`).attr({\r\n      'aria-expanded': true,\r\n      'aria-selected': true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Closes the tab defined by `$target`.\r\n   * @param {jQuery} $target - Accordion tab to close (`.accordion-content`).\r\n   * @fires Accordion#up\r\n   * @function\r\n   */\r\n  up($target) {\r\n    var $aunts = $target.parent().siblings(),\r\n        _this = this;\r\n\r\n    if((!this.options.allowAllClosed && !$aunts.hasClass('is-active')) || !$target.parent().hasClass('is-active')) {\r\n      return;\r\n    }\r\n\r\n    // Foundation.Move(this.options.slideSpeed, $target, function(){\r\n      $target.slideUp(_this.options.slideSpeed, function () {\r\n        /**\r\n         * Fires when the tab is done collapsing up.\r\n         * @event Accordion#up\r\n         */\r\n        _this.$element.trigger('up.zf.accordion', [$target]);\r\n      });\r\n    // });\r\n\r\n    $target.attr('aria-hidden', true)\r\n           .parent().removeClass('is-active');\r\n\r\n    $(`#${$target.attr('aria-labelledby')}`).attr({\r\n     'aria-expanded': false,\r\n     'aria-selected': false\r\n   });\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of an accordion.\r\n   * @fires Accordion#destroyed\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\r\n    this.$element.find('a').off('.zf.accordion');\r\n    if(this.options.deepLink) {\r\n      $(window).off('popstate', this._checkDeepLink);\r\n    }\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nAccordion.defaults = {\r\n  /**\r\n   * Amount of time to animate the opening of an accordion pane.\r\n   * @option\r\n   * @type {number}\r\n   * @default 250\r\n   */\r\n  slideSpeed: 250,\r\n  /**\r\n   * Allow the accordion to have multiple open panes.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  multiExpand: false,\r\n  /**\r\n   * Allow the accordion to close all panes.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  allowAllClosed: false,\r\n  /**\r\n   * Allows the window to scroll to content of pane specified by hash anchor\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  deepLink: false,\r\n\r\n  /**\r\n   * Adjust the deep link scroll to make sure the top of the accordion panel is visible\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  deepLinkSmudge: false,\r\n\r\n  /**\r\n   * Animation time (ms) for the deep link adjustment\r\n   * @option\r\n   * @type {number}\r\n   * @default 300\r\n   */\r\n  deepLinkSmudgeDelay: 300,\r\n\r\n  /**\r\n   * Update the browser history with the open accordion\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  updateHistory: false\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Accordion, 'Accordion');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * AccordionMenu module.\r\n * @module foundation.accordionMenu\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.motion\r\n * @requires foundation.util.nest\r\n */\r\n\r\nclass AccordionMenu {\r\n  /**\r\n   * Creates a new instance of an accordion menu.\r\n   * @class\r\n   * @fires AccordionMenu#init\r\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\r\n\r\n    Foundation.Nest.Feather(this.$element, 'accordion');\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'AccordionMenu');\r\n    Foundation.Keyboard.register('AccordionMenu', {\r\n      'ENTER': 'toggle',\r\n      'SPACE': 'toggle',\r\n      'ARROW_RIGHT': 'open',\r\n      'ARROW_UP': 'up',\r\n      'ARROW_DOWN': 'down',\r\n      'ARROW_LEFT': 'close',\r\n      'ESCAPE': 'closeAll'\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Initializes the accordion menu by hiding all nested menus.\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.$element.find('[data-submenu]').not('.is-active').slideUp(0);//.find('a').css('padding-left', '1rem');\r\n    this.$element.attr({\r\n      'role': 'menu',\r\n      'aria-multiselectable': this.options.multiOpen\r\n    });\r\n\r\n    this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\r\n    this.$menuLinks.each(function(){\r\n      var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\r\n          $elem = $(this),\r\n          $sub = $elem.children('[data-submenu]'),\r\n          subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\r\n          isActive = $sub.hasClass('is-active');\r\n      $elem.attr({\r\n        'aria-controls': subId,\r\n        'aria-expanded': isActive,\r\n        'role': 'menuitem',\r\n        'id': linkId\r\n      });\r\n      $sub.attr({\r\n        'aria-labelledby': linkId,\r\n        'aria-hidden': !isActive,\r\n        'role': 'menu',\r\n        'id': subId\r\n      });\r\n    });\r\n    var initPanes = this.$element.find('.is-active');\r\n    if(initPanes.length){\r\n      var _this = this;\r\n      initPanes.each(function(){\r\n        _this.down($(this));\r\n      });\r\n    }\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers for items within the menu.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    this.$element.find('li').each(function() {\r\n      var $submenu = $(this).children('[data-submenu]');\r\n\r\n      if ($submenu.length) {\r\n        $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function(e) {\r\n          e.preventDefault();\r\n\r\n          _this.toggle($submenu);\r\n        });\r\n      }\r\n    }).on('keydown.zf.accordionmenu', function(e){\r\n      var $element = $(this),\r\n          $elements = $element.parent('ul').children('li'),\r\n          $prevElement,\r\n          $nextElement,\r\n          $target = $element.children('[data-submenu]');\r\n\r\n      $elements.each(function(i) {\r\n        if ($(this).is($element)) {\r\n          $prevElement = $elements.eq(Math.max(0, i-1)).find('a').first();\r\n          $nextElement = $elements.eq(Math.min(i+1, $elements.length-1)).find('a').first();\r\n\r\n          if ($(this).children('[data-submenu]:visible').length) { // has open sub menu\r\n            $nextElement = $element.find('li:first-child').find('a').first();\r\n          }\r\n          if ($(this).is(':first-child')) { // is first element of sub menu\r\n            $prevElement = $element.parents('li').first().find('a').first();\r\n          } else if ($prevElement.parents('li').first().children('[data-submenu]:visible').length) { // if previous element has open sub menu\r\n            $prevElement = $prevElement.parents('li').find('li:last-child').find('a').first();\r\n          }\r\n          if ($(this).is(':last-child')) { // is last element of sub menu\r\n            $nextElement = $element.parents('li').first().next('li').find('a').first();\r\n          }\r\n\r\n          return;\r\n        }\r\n      });\r\n\r\n      Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\r\n        open: function() {\r\n          if ($target.is(':hidden')) {\r\n            _this.down($target);\r\n            $target.find('li').first().find('a').first().focus();\r\n          }\r\n        },\r\n        close: function() {\r\n          if ($target.length && !$target.is(':hidden')) { // close active sub of this item\r\n            _this.up($target);\r\n          } else if ($element.parent('[data-submenu]').length) { // close currently open sub\r\n            _this.up($element.parent('[data-submenu]'));\r\n            $element.parents('li').first().find('a').first().focus();\r\n          }\r\n        },\r\n        up: function() {\r\n          $prevElement.focus();\r\n          return true;\r\n        },\r\n        down: function() {\r\n          $nextElement.focus();\r\n          return true;\r\n        },\r\n        toggle: function() {\r\n          if ($element.children('[data-submenu]').length) {\r\n            _this.toggle($element.children('[data-submenu]'));\r\n          }\r\n        },\r\n        closeAll: function() {\r\n          _this.hideAll();\r\n        },\r\n        handled: function(preventDefault) {\r\n          if (preventDefault) {\r\n            e.preventDefault();\r\n          }\r\n          e.stopImmediatePropagation();\r\n        }\r\n      });\r\n    });//.attr('tabindex', 0);\r\n  }\r\n\r\n  /**\r\n   * Closes all panes of the menu.\r\n   * @function\r\n   */\r\n  hideAll() {\r\n    this.up(this.$element.find('[data-submenu]'));\r\n  }\r\n\r\n  /**\r\n   * Opens all panes of the menu.\r\n   * @function\r\n   */\r\n  showAll() {\r\n    this.down(this.$element.find('[data-submenu]'));\r\n  }\r\n\r\n  /**\r\n   * Toggles the open/close state of a submenu.\r\n   * @function\r\n   * @param {jQuery} $target - the submenu to toggle\r\n   */\r\n  toggle($target){\r\n    if(!$target.is(':animated')) {\r\n      if (!$target.is(':hidden')) {\r\n        this.up($target);\r\n      }\r\n      else {\r\n        this.down($target);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the sub-menu defined by `$target`.\r\n   * @param {jQuery} $target - Sub-menu to open.\r\n   * @fires AccordionMenu#down\r\n   */\r\n  down($target) {\r\n    var _this = this;\r\n\r\n    if(!this.options.multiOpen) {\r\n      this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\r\n    }\r\n\r\n    $target.addClass('is-active').attr({'aria-hidden': false})\r\n      .parent('.is-accordion-submenu-parent').attr({'aria-expanded': true});\r\n\r\n      //Foundation.Move(this.options.slideSpeed, $target, function() {\r\n        $target.slideDown(_this.options.slideSpeed, function () {\r\n          /**\r\n           * Fires when the menu is done opening.\r\n           * @event AccordionMenu#down\r\n           */\r\n          _this.$element.trigger('down.zf.accordionMenu', [$target]);\r\n        });\r\n      //});\r\n  }\r\n\r\n  /**\r\n   * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\r\n   * @param {jQuery} $target - Sub-menu to close.\r\n   * @fires AccordionMenu#up\r\n   */\r\n  up($target) {\r\n    var _this = this;\r\n    //Foundation.Move(this.options.slideSpeed, $target, function(){\r\n      $target.slideUp(_this.options.slideSpeed, function () {\r\n        /**\r\n         * Fires when the menu is done collapsing up.\r\n         * @event AccordionMenu#up\r\n         */\r\n        _this.$element.trigger('up.zf.accordionMenu', [$target]);\r\n      });\r\n    //});\r\n\r\n    var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\r\n\r\n    $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of accordion menu.\r\n   * @fires AccordionMenu#destroyed\r\n   */\r\n  destroy() {\r\n    this.$element.find('[data-submenu]').slideDown(0).css('display', '');\r\n    this.$element.find('a').off('click.zf.accordionMenu');\r\n\r\n    Foundation.Nest.Burn(this.$element, 'accordion');\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nAccordionMenu.defaults = {\r\n  /**\r\n   * Amount of time to animate the opening of a submenu in ms.\r\n   * @option\r\n   * @type {number}\r\n   * @default 250\r\n   */\r\n  slideSpeed: 250,\r\n  /**\r\n   * Allow the menu to have multiple open panes.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  multiOpen: true\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(AccordionMenu, 'AccordionMenu');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Drilldown module.\r\n * @module foundation.drilldown\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.motion\r\n * @requires foundation.util.nest\r\n */\r\n\r\nclass Drilldown {\r\n  /**\r\n   * Creates a new instance of a drilldown menu.\r\n   * @class\r\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\r\n\r\n    Foundation.Nest.Feather(this.$element, 'drilldown');\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Drilldown');\r\n    Foundation.Keyboard.register('Drilldown', {\r\n      'ENTER': 'open',\r\n      'SPACE': 'open',\r\n      'ARROW_RIGHT': 'next',\r\n      'ARROW_UP': 'up',\r\n      'ARROW_DOWN': 'down',\r\n      'ARROW_LEFT': 'previous',\r\n      'ESCAPE': 'close',\r\n      'TAB': 'down',\r\n      'SHIFT_TAB': 'up'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the drilldown by creating jQuery collections of elements\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent').children('a');\r\n    this.$submenus = this.$submenuAnchors.parent('li').children('[data-submenu]');\r\n    this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem').find('a');\r\n    this.$element.attr('data-mutate', (this.$element.attr('data-drilldown') || Foundation.GetYoDigits(6, 'drilldown')));\r\n\r\n    this._prepareMenu();\r\n    this._registerEvents();\r\n\r\n    this._keyboardEvents();\r\n  }\r\n\r\n  /**\r\n   * prepares drilldown menu by setting attributes to links and elements\r\n   * sets a min height to prevent content jumping\r\n   * wraps the element if not already wrapped\r\n   * @private\r\n   * @function\r\n   */\r\n  _prepareMenu() {\r\n    var _this = this;\r\n    // if(!this.options.holdOpen){\r\n    //   this._menuLinkEvents();\r\n    // }\r\n    this.$submenuAnchors.each(function(){\r\n      var $link = $(this);\r\n      var $sub = $link.parent();\r\n      if(_this.options.parentLink){\r\n        $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\r\n      }\r\n      $link.data('savedHref', $link.attr('href')).removeAttr('href').attr('tabindex', 0);\r\n      $link.children('[data-submenu]')\r\n          .attr({\r\n            'aria-hidden': true,\r\n            'tabindex': 0,\r\n            'role': 'menu'\r\n          });\r\n      _this._events($link);\r\n    });\r\n    this.$submenus.each(function(){\r\n      var $menu = $(this),\r\n          $back = $menu.find('.js-drilldown-back');\r\n      if(!$back.length){\r\n        switch (_this.options.backButtonPosition) {\r\n          case \"bottom\":\r\n            $menu.append(_this.options.backButton);\r\n            break;\r\n          case \"top\":\r\n            $menu.prepend(_this.options.backButton);\r\n            break;\r\n          default:\r\n            console.error(\"Unsupported backButtonPosition value '\" + _this.options.backButtonPosition + \"'\");\r\n        }\r\n      }\r\n      _this._back($menu);\r\n    });\r\n\r\n    this.$submenus.addClass('invisible');\r\n    if(!this.options.autoHeight) {\r\n      this.$submenus.addClass('drilldown-submenu-cover-previous');\r\n    }\r\n\r\n    // create a wrapper on element if it doesn't exist.\r\n    if(!this.$element.parent().hasClass('is-drilldown')){\r\n      this.$wrapper = $(this.options.wrapper).addClass('is-drilldown');\r\n      if(this.options.animateHeight) this.$wrapper.addClass('animate-height');\r\n      this.$element.wrap(this.$wrapper);\r\n    }\r\n    // set wrapper\r\n    this.$wrapper = this.$element.parent();\r\n    this.$wrapper.css(this._getMaxDims());\r\n  }\r\n\r\n  _resize() {\r\n    this.$wrapper.css({'max-width': 'none', 'min-height': 'none'});\r\n    // _getMaxDims has side effects (boo) but calling it should update all other necessary heights & widths\r\n    this.$wrapper.css(this._getMaxDims());\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers to elements in the menu.\r\n   * @function\r\n   * @private\r\n   * @param {jQuery} $elem - the current menu item to add handlers to.\r\n   */\r\n  _events($elem) {\r\n    var _this = this;\r\n\r\n    $elem.off('click.zf.drilldown')\r\n    .on('click.zf.drilldown', function(e){\r\n      if($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')){\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n      }\r\n\r\n      // if(e.target !== e.currentTarget.firstElementChild){\r\n      //   return false;\r\n      // }\r\n      _this._show($elem.parent('li'));\r\n\r\n      if(_this.options.closeOnClick){\r\n        var $body = $('body');\r\n        $body.off('.zf.drilldown').on('click.zf.drilldown', function(e){\r\n          if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) { return; }\r\n          e.preventDefault();\r\n          _this._hideAll();\r\n          $body.off('.zf.drilldown');\r\n        });\r\n      }\r\n    });\r\n\t  this.$element.on('mutateme.zf.trigger', this._resize.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers to the menu element.\r\n   * @function\r\n   * @private\r\n   */\r\n  _registerEvents() {\r\n    if(this.options.scrollTop){\r\n      this._bindHandler = this._scrollTop.bind(this);\r\n      this.$element.on('open.zf.drilldown hide.zf.drilldown closed.zf.drilldown',this._bindHandler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll to Top of Element or data-scroll-top-element\r\n   * @function\r\n   * @fires Drilldown#scrollme\r\n   */\r\n  _scrollTop() {\r\n    var _this = this;\r\n    var $scrollTopElement = _this.options.scrollTopElement!=''?$(_this.options.scrollTopElement):_this.$element,\r\n        scrollPos = parseInt($scrollTopElement.offset().top+_this.options.scrollTopOffset);\r\n    $('html, body').stop(true).animate({ scrollTop: scrollPos }, _this.options.animationDuration, _this.options.animationEasing,function(){\r\n      /**\r\n        * Fires after the menu has scrolled\r\n        * @event Drilldown#scrollme\r\n        */\r\n      if(this===$('html')[0])_this.$element.trigger('scrollme.zf.drilldown');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds keydown event listener to `li`'s in the menu.\r\n   * @private\r\n   */\r\n  _keyboardEvents() {\r\n    var _this = this;\r\n\r\n    this.$menuItems.add(this.$element.find('.js-drilldown-back > a, .is-submenu-parent-item > a')).on('keydown.zf.drilldown', function(e){\r\n      var $element = $(this),\r\n          $elements = $element.parent('li').parent('ul').children('li').children('a'),\r\n          $prevElement,\r\n          $nextElement;\r\n\r\n      $elements.each(function(i) {\r\n        if ($(this).is($element)) {\r\n          $prevElement = $elements.eq(Math.max(0, i-1));\r\n          $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\r\n          return;\r\n        }\r\n      });\r\n\r\n      Foundation.Keyboard.handleKey(e, 'Drilldown', {\r\n        next: function() {\r\n          if ($element.is(_this.$submenuAnchors)) {\r\n            _this._show($element.parent('li'));\r\n            $element.parent('li').one(Foundation.transitionend($element), function(){\r\n              $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\r\n            });\r\n            return true;\r\n          }\r\n        },\r\n        previous: function() {\r\n          _this._hide($element.parent('li').parent('ul'));\r\n          $element.parent('li').parent('ul').one(Foundation.transitionend($element), function(){\r\n            setTimeout(function() {\r\n              $element.parent('li').parent('ul').parent('li').children('a').first().focus();\r\n            }, 1);\r\n          });\r\n          return true;\r\n        },\r\n        up: function() {\r\n          $prevElement.focus();\r\n          // Don't tap focus on first element in root ul\r\n          return !$element.is(_this.$element.find('> li:first-child > a'));\r\n        },\r\n        down: function() {\r\n          $nextElement.focus();\r\n          // Don't tap focus on last element in root ul\r\n          return !$element.is(_this.$element.find('> li:last-child > a'));\r\n        },\r\n        close: function() {\r\n          // Don't close on element in root ul\r\n          if (!$element.is(_this.$element.find('> li > a'))) {\r\n            _this._hide($element.parent().parent());\r\n            $element.parent().parent().siblings('a').focus();\r\n          }\r\n        },\r\n        open: function() {\r\n          if (!$element.is(_this.$menuItems)) { // not menu item means back button\r\n            _this._hide($element.parent('li').parent('ul'));\r\n            $element.parent('li').parent('ul').one(Foundation.transitionend($element), function(){\r\n              setTimeout(function() {\r\n                $element.parent('li').parent('ul').parent('li').children('a').first().focus();\r\n              }, 1);\r\n            });\r\n            return true;\r\n          } else if ($element.is(_this.$submenuAnchors)) {\r\n            _this._show($element.parent('li'));\r\n            $element.parent('li').one(Foundation.transitionend($element), function(){\r\n              $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\r\n            });\r\n            return true;\r\n          }\r\n        },\r\n        handled: function(preventDefault) {\r\n          if (preventDefault) {\r\n            e.preventDefault();\r\n          }\r\n          e.stopImmediatePropagation();\r\n        }\r\n      });\r\n    }); // end keyboardAccess\r\n  }\r\n\r\n  /**\r\n   * Closes all open elements, and returns to root menu.\r\n   * @function\r\n   * @fires Drilldown#closed\r\n   */\r\n  _hideAll() {\r\n    var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\r\n    if(this.options.autoHeight) this.$wrapper.css({height:$elem.parent().closest('ul').data('calcHeight')});\r\n    $elem.one(Foundation.transitionend($elem), function(e){\r\n      $elem.removeClass('is-active is-closing');\r\n    });\r\n        /**\r\n         * Fires when the menu is fully closed.\r\n         * @event Drilldown#closed\r\n         */\r\n    this.$element.trigger('closed.zf.drilldown');\r\n  }\r\n\r\n  /**\r\n   * Adds event listener for each `back` button, and closes open menus.\r\n   * @function\r\n   * @fires Drilldown#back\r\n   * @param {jQuery} $elem - the current sub-menu to add `back` event.\r\n   */\r\n  _back($elem) {\r\n    var _this = this;\r\n    $elem.off('click.zf.drilldown');\r\n    $elem.children('.js-drilldown-back')\r\n      .on('click.zf.drilldown', function(e){\r\n        e.stopImmediatePropagation();\r\n        // console.log('mouseup on back');\r\n        _this._hide($elem);\r\n\r\n        // If there is a parent submenu, call show\r\n        let parentSubMenu = $elem.parent('li').parent('ul').parent('li');\r\n        if (parentSubMenu.length) {\r\n          _this._show(parentSubMenu);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Adds event listener to menu items w/o submenus to close open menus on click.\r\n   * @function\r\n   * @private\r\n   */\r\n  _menuLinkEvents() {\r\n    var _this = this;\r\n    this.$menuItems.not('.is-drilldown-submenu-parent')\r\n        .off('click.zf.drilldown')\r\n        .on('click.zf.drilldown', function(e){\r\n          // e.stopImmediatePropagation();\r\n          setTimeout(function(){\r\n            _this._hideAll();\r\n          }, 0);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Opens a submenu.\r\n   * @function\r\n   * @fires Drilldown#open\r\n   * @param {jQuery} $elem - the current element with a submenu to open, i.e. the `li` tag.\r\n   */\r\n  _show($elem) {\r\n    if(this.options.autoHeight) this.$wrapper.css({height:$elem.children('[data-submenu]').data('calcHeight')});\r\n    $elem.attr('aria-expanded', true);\r\n    $elem.children('[data-submenu]').addClass('is-active').removeClass('invisible').attr('aria-hidden', false);\r\n    /**\r\n     * Fires when the submenu has opened.\r\n     * @event Drilldown#open\r\n     */\r\n    this.$element.trigger('open.zf.drilldown', [$elem]);\r\n  };\r\n\r\n  /**\r\n   * Hides a submenu\r\n   * @function\r\n   * @fires Drilldown#hide\r\n   * @param {jQuery} $elem - the current sub-menu to hide, i.e. the `ul` tag.\r\n   */\r\n  _hide($elem) {\r\n    if(this.options.autoHeight) this.$wrapper.css({height:$elem.parent().closest('ul').data('calcHeight')});\r\n    var _this = this;\r\n    $elem.parent('li').attr('aria-expanded', false);\r\n    $elem.attr('aria-hidden', true).addClass('is-closing')\r\n    $elem.addClass('is-closing')\r\n         .one(Foundation.transitionend($elem), function(){\r\n           $elem.removeClass('is-active is-closing');\r\n           $elem.blur().addClass('invisible');\r\n         });\r\n    /**\r\n     * Fires when the submenu has closed.\r\n     * @event Drilldown#hide\r\n     */\r\n    $elem.trigger('hide.zf.drilldown', [$elem]);\r\n  }\r\n\r\n  /**\r\n   * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\r\n   * Prevents content jumping.\r\n   * @function\r\n   * @private\r\n   */\r\n  _getMaxDims() {\r\n    var  maxHeight = 0, result = {}, _this = this;\r\n    this.$submenus.add(this.$element).each(function(){\r\n      var numOfElems = $(this).children('li').length;\r\n      var height = Foundation.Box.GetDimensions(this).height;\r\n      maxHeight = height > maxHeight ? height : maxHeight;\r\n      if(_this.options.autoHeight) {\r\n        $(this).data('calcHeight',height);\r\n        if (!$(this).hasClass('is-drilldown-submenu')) result['height'] = height;\r\n      }\r\n    });\r\n\r\n    if(!this.options.autoHeight) result['min-height'] = `${maxHeight}px`;\r\n\r\n    result['max-width'] = `${this.$element[0].getBoundingClientRect().width}px`;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Destroys the Drilldown Menu\r\n   * @function\r\n   */\r\n  destroy() {\r\n    if(this.options.scrollTop) this.$element.off('.zf.drilldown',this._bindHandler);\r\n    this._hideAll();\r\n\t  this.$element.off('mutateme.zf.trigger');\r\n    Foundation.Nest.Burn(this.$element, 'drilldown');\r\n    this.$element.unwrap()\r\n                 .find('.js-drilldown-back, .is-submenu-parent-item').remove()\r\n                 .end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu')\r\n                 .end().find('[data-submenu]').removeAttr('aria-hidden tabindex role');\r\n    this.$submenuAnchors.each(function() {\r\n      $(this).off('.zf.drilldown');\r\n    });\r\n\r\n    this.$submenus.removeClass('drilldown-submenu-cover-previous');\r\n\r\n    this.$element.find('a').each(function(){\r\n      var $link = $(this);\r\n      $link.removeAttr('tabindex');\r\n      if($link.data('savedHref')){\r\n        $link.attr('href', $link.data('savedHref')).removeData('savedHref');\r\n      }else{ return; }\r\n    });\r\n    Foundation.unregisterPlugin(this);\r\n  };\r\n}\r\n\r\nDrilldown.defaults = {\r\n  /**\r\n   * Markup used for JS generated back button. Prepended  or appended (see backButtonPosition) to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\r\n   * @option\r\n   * @type {string}\r\n   * @default '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>'\r\n   */\r\n  backButton: '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>',\r\n  /**\r\n   * Position the back button either at the top or bottom of drilldown submenus. Can be `'left'` or `'bottom'`.\r\n   * @option\r\n   * @type {string}\r\n   * @default top\r\n   */\r\n  backButtonPosition: 'top',\r\n  /**\r\n   * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\r\n   * @option\r\n   * @type {string}\r\n   * @default '<div></div>'\r\n   */\r\n  wrapper: '<div></div>',\r\n  /**\r\n   * Adds the parent link to the submenu.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  parentLink: false,\r\n  /**\r\n   * Allow the menu to return to root list on body click.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  closeOnClick: false,\r\n  /**\r\n   * Allow the menu to auto adjust height.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  autoHeight: false,\r\n  /**\r\n   * Animate the auto adjust height.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  animateHeight: false,\r\n  /**\r\n   * Scroll to the top of the menu after opening a submenu or navigating back using the menu back button\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  scrollTop: false,\r\n  /**\r\n   * String jquery selector (for example 'body') of element to take offset().top from, if empty string the drilldown menu offset().top is taken\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  scrollTopElement: '',\r\n  /**\r\n   * ScrollTop offset\r\n   * @option\r\n   * @type {number}\r\n   * @default 0\r\n   */\r\n  scrollTopOffset: 0,\r\n  /**\r\n   * Scroll animation duration\r\n   * @option\r\n   * @type {number}\r\n   * @default 500\r\n   */\r\n  animationDuration: 500,\r\n  /**\r\n   * Scroll animation easing. Can be `'swing'` or `'linear'`.\r\n   * @option\r\n   * @type {string}\r\n   * @see {@link https://api.jquery.com/animate|JQuery animate}\r\n   * @default 'swing'\r\n   */\r\n  animationEasing: 'swing'\r\n  // holdOpen: false\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Drilldown, 'Drilldown');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Dropdown module.\r\n * @module foundation.dropdown\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.box\r\n * @requires foundation.util.triggers\r\n */\r\n\r\nclass Dropdown {\r\n  /**\r\n   * Creates a new instance of a dropdown.\r\n   * @class\r\n   * @param {jQuery} element - jQuery object to make into a dropdown.\r\n   *        Object should be of the dropdown panel, rather than its anchor.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Dropdown');\r\n    Foundation.Keyboard.register('Dropdown', {\r\n      'ENTER': 'open',\r\n      'SPACE': 'open',\r\n      'ESCAPE': 'close'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var $id = this.$element.attr('id');\r\n\r\n    this.$anchor = $(`[data-toggle=\"${$id}\"]`).length ? $(`[data-toggle=\"${$id}\"]`) : $(`[data-open=\"${$id}\"]`);\r\n    this.$anchor.attr({\r\n      'aria-controls': $id,\r\n      'data-is-focus': false,\r\n      'data-yeti-box': $id,\r\n      'aria-haspopup': true,\r\n      'aria-expanded': false\r\n\r\n    });\r\n\r\n    if(this.options.parentClass){\r\n      this.$parent = this.$element.parents('.' + this.options.parentClass);\r\n    }else{\r\n      this.$parent = null;\r\n    }\r\n    this.options.positionClass = this.getPositionClass();\r\n    this.counter = 4;\r\n    this.usedPositions = [];\r\n    this.$element.attr({\r\n      'aria-hidden': 'true',\r\n      'data-yeti-box': $id,\r\n      'data-resize': $id,\r\n      'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\r\n    });\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Helper function to determine current orientation of dropdown pane.\r\n   * @function\r\n   * @returns {String} position - string value of a position class.\r\n   */\r\n  getPositionClass() {\r\n    var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\r\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\r\n    var horizontalPosition = /float-(\\S+)/.exec(this.$anchor[0].className);\r\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\r\n    var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\r\n\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Adjusts the dropdown panes orientation by adding/removing positioning classes.\r\n   * @function\r\n   * @private\r\n   * @param {String} position - position class to remove.\r\n   */\r\n  _reposition(position) {\r\n    this.usedPositions.push(position ? position : 'bottom');\r\n    //default, try switching to opposite side\r\n    if(!position && (this.usedPositions.indexOf('top') < 0)){\r\n      this.$element.addClass('top');\r\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') < 0)){\r\n      this.$element.removeClass(position);\r\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') < 0)){\r\n      this.$element.removeClass(position)\r\n          .addClass('right');\r\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') < 0)){\r\n      this.$element.removeClass(position)\r\n          .addClass('left');\r\n    }\r\n\r\n    //if default change didn't work, try bottom or left first\r\n    else if(!position && (this.usedPositions.indexOf('top') > -1) && (this.usedPositions.indexOf('left') < 0)){\r\n      this.$element.addClass('left');\r\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') > -1) && (this.usedPositions.indexOf('left') < 0)){\r\n      this.$element.removeClass(position)\r\n          .addClass('left');\r\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\r\n      this.$element.removeClass(position);\r\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\r\n      this.$element.removeClass(position);\r\n    }\r\n    //if nothing cleared, set to bottom\r\n    else{\r\n      this.$element.removeClass(position);\r\n    }\r\n    this.classChanged = true;\r\n    this.counter--;\r\n  }\r\n\r\n  /**\r\n   * Sets the position and orientation of the dropdown pane, checks for collisions.\r\n   * Recursively calls itself if a collision is detected, with a new position class.\r\n   * @function\r\n   * @private\r\n   */\r\n  _setPosition() {\r\n    if(this.$anchor.attr('aria-expanded') === 'false'){ return false; }\r\n    var position = this.getPositionClass(),\r\n        $eleDims = Foundation.Box.GetDimensions(this.$element),\r\n        $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\r\n        _this = this,\r\n        direction = (position === 'left' ? 'left' : ((position === 'right') ? 'left' : 'top')),\r\n        param = (direction === 'top') ? 'height' : 'width',\r\n        offset = (param === 'height') ? this.options.vOffset : this.options.hOffset;\r\n\r\n    if(($eleDims.width >= $eleDims.windowDims.width) || (!this.counter && !Foundation.Box.ImNotTouchingYou(this.$element, this.$parent))){\r\n      var newWidth = $eleDims.windowDims.width,\r\n          parentHOffset = 0;\r\n      if(this.$parent){\r\n        var $parentDims = Foundation.Box.GetDimensions(this.$parent),\r\n            parentHOffset = $parentDims.offset.left;\r\n        if ($parentDims.width < newWidth){\r\n          newWidth = $parentDims.width;\r\n        }\r\n      }\r\n\r\n      this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset + parentHOffset, true)).css({\r\n        'width': newWidth - (this.options.hOffset * 2),\r\n        'height': 'auto'\r\n      });\r\n      this.classChanged = true;\r\n      return false;\r\n    }\r\n\r\n    this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\r\n\r\n    while(!Foundation.Box.ImNotTouchingYou(this.$element, this.$parent, true) && this.counter){\r\n      this._reposition(position);\r\n      this._setPosition();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners to the element utilizing the triggers utility library.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n    this.$element.on({\r\n      'open.zf.trigger': this.open.bind(this),\r\n      'close.zf.trigger': this.close.bind(this),\r\n      'toggle.zf.trigger': this.toggle.bind(this),\r\n      'resizeme.zf.trigger': this._setPosition.bind(this)\r\n    });\r\n\r\n    if(this.options.hover){\r\n      this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\r\n      .on('mouseenter.zf.dropdown', function(){\r\n        var bodyData = $('body').data();\r\n        if(typeof(bodyData.whatinput) === 'undefined' || bodyData.whatinput === 'mouse') {\r\n          clearTimeout(_this.timeout);\r\n          _this.timeout = setTimeout(function(){\r\n            _this.open();\r\n            _this.$anchor.data('hover', true);\r\n          }, _this.options.hoverDelay);\r\n        }\r\n      }).on('mouseleave.zf.dropdown', function(){\r\n        clearTimeout(_this.timeout);\r\n        _this.timeout = setTimeout(function(){\r\n          _this.close();\r\n          _this.$anchor.data('hover', false);\r\n        }, _this.options.hoverDelay);\r\n      });\r\n      if(this.options.hoverPane){\r\n        this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\r\n            .on('mouseenter.zf.dropdown', function(){\r\n              clearTimeout(_this.timeout);\r\n            }).on('mouseleave.zf.dropdown', function(){\r\n              clearTimeout(_this.timeout);\r\n              _this.timeout = setTimeout(function(){\r\n                _this.close();\r\n                _this.$anchor.data('hover', false);\r\n              }, _this.options.hoverDelay);\r\n            });\r\n      }\r\n    }\r\n    this.$anchor.add(this.$element).on('keydown.zf.dropdown', function(e) {\r\n\r\n      var $target = $(this),\r\n        visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\r\n\r\n      Foundation.Keyboard.handleKey(e, 'Dropdown', {\r\n        open: function() {\r\n          if ($target.is(_this.$anchor)) {\r\n            _this.open();\r\n            _this.$element.attr('tabindex', -1).focus();\r\n            e.preventDefault();\r\n          }\r\n        },\r\n        close: function() {\r\n          _this.close();\r\n          _this.$anchor.focus();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds an event handler to the body to close any dropdowns on a click.\r\n   * @function\r\n   * @private\r\n   */\r\n  _addBodyHandler() {\r\n     var $body = $(document.body).not(this.$element),\r\n         _this = this;\r\n     $body.off('click.zf.dropdown')\r\n          .on('click.zf.dropdown', function(e){\r\n            if(_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\r\n              return;\r\n            }\r\n            if(_this.$element.find(e.target).length) {\r\n              return;\r\n            }\r\n            _this.close();\r\n            $body.off('click.zf.dropdown');\r\n          });\r\n  }\r\n\r\n  /**\r\n   * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\r\n   * @function\r\n   * @fires Dropdown#closeme\r\n   * @fires Dropdown#show\r\n   */\r\n  open() {\r\n    // var _this = this;\r\n    /**\r\n     * Fires to close other open dropdowns, typically when dropdown is opening\r\n     * @event Dropdown#closeme\r\n     */\r\n    this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\r\n    this.$anchor.addClass('hover')\r\n        .attr({'aria-expanded': true});\r\n    // this.$element/*.show()*/;\r\n    this._setPosition();\r\n    this.$element.addClass('is-open')\r\n        .attr({'aria-hidden': false});\r\n\r\n    if(this.options.autoFocus){\r\n      var $focusable = Foundation.Keyboard.findFocusable(this.$element);\r\n      if($focusable.length){\r\n        $focusable.eq(0).focus();\r\n      }\r\n    }\r\n\r\n    if(this.options.closeOnClick){ this._addBodyHandler(); }\r\n\r\n    if (this.options.trapFocus) {\r\n      Foundation.Keyboard.trapFocus(this.$element);\r\n    }\r\n\r\n    /**\r\n     * Fires once the dropdown is visible.\r\n     * @event Dropdown#show\r\n     */\r\n    this.$element.trigger('show.zf.dropdown', [this.$element]);\r\n  }\r\n\r\n  /**\r\n   * Closes the open dropdown pane.\r\n   * @function\r\n   * @fires Dropdown#hide\r\n   */\r\n  close() {\r\n    if(!this.$element.hasClass('is-open')){\r\n      return false;\r\n    }\r\n    this.$element.removeClass('is-open')\r\n        .attr({'aria-hidden': true});\r\n\r\n    this.$anchor.removeClass('hover')\r\n        .attr('aria-expanded', false);\r\n\r\n    if(this.classChanged){\r\n      var curPositionClass = this.getPositionClass();\r\n      if(curPositionClass){\r\n        this.$element.removeClass(curPositionClass);\r\n      }\r\n      this.$element.addClass(this.options.positionClass)\r\n          /*.hide()*/.css({height: '', width: ''});\r\n      this.classChanged = false;\r\n      this.counter = 4;\r\n      this.usedPositions.length = 0;\r\n    }\r\n    /**\r\n     * Fires once the dropdown is no longer visible.\r\n     * @event Dropdown#hide\r\n     */\r\n    this.$element.trigger('hide.zf.dropdown', [this.$element]);\r\n\r\n    if (this.options.trapFocus) {\r\n      Foundation.Keyboard.releaseFocus(this.$element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the dropdown pane's visibility.\r\n   * @function\r\n   */\r\n  toggle() {\r\n    if(this.$element.hasClass('is-open')){\r\n      if(this.$anchor.data('hover')) return;\r\n      this.close();\r\n    }else{\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the dropdown.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$element.off('.zf.trigger').hide();\r\n    this.$anchor.off('.zf.dropdown');\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nDropdown.defaults = {\r\n  /**\r\n   * Class that designates bounding container of Dropdown (default: window)\r\n   * @option\r\n   * @type {?string}\r\n   * @default null\r\n   */\r\n  parentClass: null,\r\n  /**\r\n   * Amount of time to delay opening a submenu on hover event.\r\n   * @option\r\n   * @type {number}\r\n   * @default 250\r\n   */\r\n  hoverDelay: 250,\r\n  /**\r\n   * Allow submenus to open on hover events\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  hover: false,\r\n  /**\r\n   * Don't close dropdown when hovering over dropdown pane\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  hoverPane: false,\r\n  /**\r\n   * Number of pixels between the dropdown pane and the triggering element on open.\r\n   * @option\r\n   * @type {number}\r\n   * @default 1\r\n   */\r\n  vOffset: 1,\r\n  /**\r\n   * Number of pixels between the dropdown pane and the triggering element on open.\r\n   * @option\r\n   * @type {number}\r\n   * @default 1\r\n   */\r\n  hOffset: 1,\r\n  /**\r\n   * Class applied to adjust open position. JS will test and fill this in.\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  positionClass: '',\r\n  /**\r\n   * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  trapFocus: false,\r\n  /**\r\n   * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  autoFocus: false,\r\n  /**\r\n   * Allows a click on the body to close the dropdown.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  closeOnClick: false\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Dropdown, 'Dropdown');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * DropdownMenu module.\r\n * @module foundation.dropdown-menu\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.box\r\n * @requires foundation.util.nest\r\n */\r\n\r\nclass DropdownMenu {\r\n  /**\r\n   * Creates a new instance of DropdownMenu.\r\n   * @class\r\n   * @fires DropdownMenu#init\r\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\r\n\r\n    Foundation.Nest.Feather(this.$element, 'dropdown');\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'DropdownMenu');\r\n    Foundation.Keyboard.register('DropdownMenu', {\r\n      'ENTER': 'open',\r\n      'SPACE': 'open',\r\n      'ARROW_RIGHT': 'next',\r\n      'ARROW_UP': 'up',\r\n      'ARROW_DOWN': 'down',\r\n      'ARROW_LEFT': 'previous',\r\n      'ESCAPE': 'close'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the plugin, and calls _prepareMenu\r\n   * @private\r\n   * @function\r\n   */\r\n  _init() {\r\n    var subs = this.$element.find('li.is-dropdown-submenu-parent');\r\n    this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\r\n\r\n    this.$menuItems = this.$element.find('[role=\"menuitem\"]');\r\n    this.$tabs = this.$element.children('[role=\"menuitem\"]');\r\n    this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\r\n\r\n    if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\r\n      this.options.alignment = 'right';\r\n      subs.addClass('opens-left');\r\n    } else {\r\n      subs.addClass('opens-right');\r\n    }\r\n    this.changed = false;\r\n    this._events();\r\n  };\r\n\r\n  _isVertical() {\r\n    return this.$tabs.css('display') === 'block';\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners to elements within the menu\r\n   * @private\r\n   * @function\r\n   */\r\n  _events() {\r\n    var _this = this,\r\n        hasTouch = 'ontouchstart' in window || (typeof window.ontouchstart !== 'undefined'),\r\n        parClass = 'is-dropdown-submenu-parent';\r\n\r\n    // used for onClick and in the keyboard handlers\r\n    var handleClickFn = function(e) {\r\n      var $elem = $(e.target).parentsUntil('ul', `.${parClass}`),\r\n          hasSub = $elem.hasClass(parClass),\r\n          hasClicked = $elem.attr('data-is-click') === 'true',\r\n          $sub = $elem.children('.is-dropdown-submenu');\r\n\r\n      if (hasSub) {\r\n        if (hasClicked) {\r\n          if (!_this.options.closeOnClick || (!_this.options.clickOpen && !hasTouch) || (_this.options.forceFollow && hasTouch)) { return; }\r\n          else {\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n            _this._hide($elem);\r\n          }\r\n        } else {\r\n          e.preventDefault();\r\n          e.stopImmediatePropagation();\r\n          _this._show($sub);\r\n          $elem.add($elem.parentsUntil(_this.$element, `.${parClass}`)).attr('data-is-click', true);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (this.options.clickOpen || hasTouch) {\r\n      this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\r\n    }\r\n\r\n    // Handle Leaf element Clicks\r\n    if(_this.options.closeOnClickInside){\r\n      this.$menuItems.on('click.zf.dropdownmenu', function(e) {\r\n        var $elem = $(this),\r\n            hasSub = $elem.hasClass(parClass);\r\n        if(!hasSub){\r\n          _this._hide();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!this.options.disableHover) {\r\n      this.$menuItems.on('mouseenter.zf.dropdownmenu', function(e) {\r\n        var $elem = $(this),\r\n            hasSub = $elem.hasClass(parClass);\r\n\r\n        if (hasSub) {\r\n          clearTimeout($elem.data('_delay'));\r\n          $elem.data('_delay', setTimeout(function() {\r\n            _this._show($elem.children('.is-dropdown-submenu'));\r\n          }, _this.options.hoverDelay));\r\n        }\r\n      }).on('mouseleave.zf.dropdownmenu', function(e) {\r\n        var $elem = $(this),\r\n            hasSub = $elem.hasClass(parClass);\r\n        if (hasSub && _this.options.autoclose) {\r\n          if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) { return false; }\r\n\r\n          clearTimeout($elem.data('_delay'));\r\n          $elem.data('_delay', setTimeout(function() {\r\n            _this._hide($elem);\r\n          }, _this.options.closingTime));\r\n        }\r\n      });\r\n    }\r\n    this.$menuItems.on('keydown.zf.dropdownmenu', function(e) {\r\n      var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\r\n          isTab = _this.$tabs.index($element) > -1,\r\n          $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\r\n          $prevElement,\r\n          $nextElement;\r\n\r\n      $elements.each(function(i) {\r\n        if ($(this).is($element)) {\r\n          $prevElement = $elements.eq(i-1);\r\n          $nextElement = $elements.eq(i+1);\r\n          return;\r\n        }\r\n      });\r\n\r\n      var nextSibling = function() {\r\n        if (!$element.is(':last-child')) {\r\n          $nextElement.children('a:first').focus();\r\n          e.preventDefault();\r\n        }\r\n      }, prevSibling = function() {\r\n        $prevElement.children('a:first').focus();\r\n        e.preventDefault();\r\n      }, openSub = function() {\r\n        var $sub = $element.children('ul.is-dropdown-submenu');\r\n        if ($sub.length) {\r\n          _this._show($sub);\r\n          $element.find('li > a:first').focus();\r\n          e.preventDefault();\r\n        } else { return; }\r\n      }, closeSub = function() {\r\n        //if ($element.is(':first-child')) {\r\n        var close = $element.parent('ul').parent('li');\r\n        close.children('a:first').focus();\r\n        _this._hide(close);\r\n        e.preventDefault();\r\n        //}\r\n      };\r\n      var functions = {\r\n        open: openSub,\r\n        close: function() {\r\n          _this._hide(_this.$element);\r\n          _this.$menuItems.find('a:first').focus(); // focus to first element\r\n          e.preventDefault();\r\n        },\r\n        handled: function() {\r\n          e.stopImmediatePropagation();\r\n        }\r\n      };\r\n\r\n      if (isTab) {\r\n        if (_this._isVertical()) { // vertical menu\r\n          if (Foundation.rtl()) { // right aligned\r\n            $.extend(functions, {\r\n              down: nextSibling,\r\n              up: prevSibling,\r\n              next: closeSub,\r\n              previous: openSub\r\n            });\r\n          } else { // left aligned\r\n            $.extend(functions, {\r\n              down: nextSibling,\r\n              up: prevSibling,\r\n              next: openSub,\r\n              previous: closeSub\r\n            });\r\n          }\r\n        } else { // horizontal menu\r\n          if (Foundation.rtl()) { // right aligned\r\n            $.extend(functions, {\r\n              next: prevSibling,\r\n              previous: nextSibling,\r\n              down: openSub,\r\n              up: closeSub\r\n            });\r\n          } else { // left aligned\r\n            $.extend(functions, {\r\n              next: nextSibling,\r\n              previous: prevSibling,\r\n              down: openSub,\r\n              up: closeSub\r\n            });\r\n          }\r\n        }\r\n      } else { // not tabs -> one sub\r\n        if (Foundation.rtl()) { // right aligned\r\n          $.extend(functions, {\r\n            next: closeSub,\r\n            previous: openSub,\r\n            down: nextSibling,\r\n            up: prevSibling\r\n          });\r\n        } else { // left aligned\r\n          $.extend(functions, {\r\n            next: openSub,\r\n            previous: closeSub,\r\n            down: nextSibling,\r\n            up: prevSibling\r\n          });\r\n        }\r\n      }\r\n      Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds an event handler to the body to close any dropdowns on a click.\r\n   * @function\r\n   * @private\r\n   */\r\n  _addBodyHandler() {\r\n    var $body = $(document.body),\r\n        _this = this;\r\n    $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu')\r\n         .on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function(e) {\r\n           var $link = _this.$element.find(e.target);\r\n           if ($link.length) { return; }\r\n\r\n           _this._hide();\r\n           $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\r\n         });\r\n  }\r\n\r\n  /**\r\n   * Opens a dropdown pane, and checks for collisions first.\r\n   * @param {jQuery} $sub - ul element that is a submenu to show\r\n   * @function\r\n   * @private\r\n   * @fires DropdownMenu#show\r\n   */\r\n  _show($sub) {\r\n    var idx = this.$tabs.index(this.$tabs.filter(function(i, el) {\r\n      return $(el).find($sub).length > 0;\r\n    }));\r\n    var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\r\n    this._hide($sibs, idx);\r\n    $sub.css('visibility', 'hidden').addClass('js-dropdown-active')\r\n        .parent('li.is-dropdown-submenu-parent').addClass('is-active');\r\n    var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\r\n    if (!clear) {\r\n      var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\r\n          $parentLi = $sub.parent('.is-dropdown-submenu-parent');\r\n      $parentLi.removeClass(`opens${oldClass}`).addClass(`opens-${this.options.alignment}`);\r\n      clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\r\n      if (!clear) {\r\n        $parentLi.removeClass(`opens-${this.options.alignment}`).addClass('opens-inner');\r\n      }\r\n      this.changed = true;\r\n    }\r\n    $sub.css('visibility', '');\r\n    if (this.options.closeOnClick) { this._addBodyHandler(); }\r\n    /**\r\n     * Fires when the new dropdown pane is visible.\r\n     * @event DropdownMenu#show\r\n     */\r\n    this.$element.trigger('show.zf.dropdownmenu', [$sub]);\r\n  }\r\n\r\n  /**\r\n   * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\r\n   * @function\r\n   * @param {jQuery} $elem - element with a submenu to hide\r\n   * @param {Number} idx - index of the $tabs collection to hide\r\n   * @private\r\n   */\r\n  _hide($elem, idx) {\r\n    var $toClose;\r\n    if ($elem && $elem.length) {\r\n      $toClose = $elem;\r\n    } else if (idx !== undefined) {\r\n      $toClose = this.$tabs.not(function(i, el) {\r\n        return i === idx;\r\n      });\r\n    }\r\n    else {\r\n      $toClose = this.$element;\r\n    }\r\n    var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\r\n\r\n    if (somethingToClose) {\r\n      $toClose.find('li.is-active').add($toClose).attr({\r\n        'data-is-click': false\r\n      }).removeClass('is-active');\r\n\r\n      $toClose.find('ul.js-dropdown-active').removeClass('js-dropdown-active');\r\n\r\n      if (this.changed || $toClose.find('opens-inner').length) {\r\n        var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\r\n        $toClose.find('li.is-dropdown-submenu-parent').add($toClose)\r\n                .removeClass(`opens-inner opens-${this.options.alignment}`)\r\n                .addClass(`opens-${oldClass}`);\r\n        this.changed = false;\r\n      }\r\n      /**\r\n       * Fires when the open menus are closed.\r\n       * @event DropdownMenu#hide\r\n       */\r\n      this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the plugin.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click')\r\n        .removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\r\n    $(document.body).off('.zf.dropdownmenu');\r\n    Foundation.Nest.Burn(this.$element, 'dropdown');\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\n/**\r\n * Default settings for plugin\r\n */\r\nDropdownMenu.defaults = {\r\n  /**\r\n   * Disallows hover events from opening submenus\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  disableHover: false,\r\n  /**\r\n   * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  autoclose: true,\r\n  /**\r\n   * Amount of time to delay opening a submenu on hover event.\r\n   * @option\r\n   * @type {number}\r\n   * @default 50\r\n   */\r\n  hoverDelay: 50,\r\n  /**\r\n   * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  clickOpen: false,\r\n  /**\r\n   * Amount of time to delay closing a submenu on a mouseleave event.\r\n   * @option\r\n   * @type {number}\r\n   * @default 500\r\n   */\r\n\r\n  closingTime: 500,\r\n  /**\r\n   * Position of the menu relative to what direction the submenus should open. Handled by JS. Can be `'left'` or `'right'`.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'left'\r\n   */\r\n  alignment: 'left',\r\n  /**\r\n   * Allow clicks on the body to close any open submenus.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  closeOnClick: true,\r\n  /**\r\n   * Allow clicks on leaf anchor links to close any open submenus.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  closeOnClickInside: true,\r\n  /**\r\n   * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'vertical'\r\n   */\r\n  verticalClass: 'vertical',\r\n  /**\r\n   * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'align-right'\r\n   */\r\n  rightClass: 'align-right',\r\n  /**\r\n   * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  forceFollow: true\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(DropdownMenu, 'DropdownMenu');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Equalizer module.\r\n * @module foundation.equalizer\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.timerAndImageLoader if equalizer contains images\r\n */\r\n\r\nclass Equalizer {\r\n  /**\r\n   * Creates a new instance of Equalizer.\r\n   * @class\r\n   * @fires Equalizer#init\r\n   * @param {Object} element - jQuery object to add the trigger to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options){\r\n    this.$element = element;\r\n    this.options  = $.extend({}, Equalizer.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Equalizer');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\r\n   * @private\r\n   */\r\n  _init() {\r\n    var eqId = this.$element.attr('data-equalizer') || '';\r\n    var $watched = this.$element.find(`[data-equalizer-watch=\"${eqId}\"]`);\r\n\r\n    this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\r\n    this.$element.attr('data-resize', (eqId || Foundation.GetYoDigits(6, 'eq')));\r\n\tthis.$element.attr('data-mutate', (eqId || Foundation.GetYoDigits(6, 'eq')));\r\n\r\n    this.hasNested = this.$element.find('[data-equalizer]').length > 0;\r\n    this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\r\n    this.isOn = false;\r\n    this._bindHandler = {\r\n      onResizeMeBound: this._onResizeMe.bind(this),\r\n      onPostEqualizedBound: this._onPostEqualized.bind(this)\r\n    };\r\n\r\n    var imgs = this.$element.find('img');\r\n    var tooSmall;\r\n    if(this.options.equalizeOn){\r\n      tooSmall = this._checkMQ();\r\n      $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\r\n    }else{\r\n      this._events();\r\n    }\r\n    if((tooSmall !== undefined && tooSmall === false) || tooSmall === undefined){\r\n      if(imgs.length){\r\n        Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\r\n      }else{\r\n        this._reflow();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners if the breakpoint is too small.\r\n   * @private\r\n   */\r\n  _pauseEvents() {\r\n    this.isOn = false;\r\n    this.$element.off({\r\n      '.zf.equalizer': this._bindHandler.onPostEqualizedBound,\r\n      'resizeme.zf.trigger': this._bindHandler.onResizeMeBound,\r\n\t  'mutateme.zf.trigger': this._bindHandler.onResizeMeBound\r\n    });\r\n  }\r\n\r\n  /**\r\n   * function to handle $elements resizeme.zf.trigger, with bound this on _bindHandler.onResizeMeBound\r\n   * @private\r\n   */\r\n  _onResizeMe(e) {\r\n    this._reflow();\r\n  }\r\n\r\n  /**\r\n   * function to handle $elements postequalized.zf.equalizer, with bound this on _bindHandler.onPostEqualizedBound\r\n   * @private\r\n   */\r\n  _onPostEqualized(e) {\r\n    if(e.target !== this.$element[0]){ this._reflow(); }\r\n  }\r\n\r\n  /**\r\n   * Initializes events for Equalizer.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n    this._pauseEvents();\r\n    if(this.hasNested){\r\n      this.$element.on('postequalized.zf.equalizer', this._bindHandler.onPostEqualizedBound);\r\n    }else{\r\n      this.$element.on('resizeme.zf.trigger', this._bindHandler.onResizeMeBound);\r\n\t  this.$element.on('mutateme.zf.trigger', this._bindHandler.onResizeMeBound);\r\n    }\r\n    this.isOn = true;\r\n  }\r\n\r\n  /**\r\n   * Checks the current breakpoint to the minimum required size.\r\n   * @private\r\n   */\r\n  _checkMQ() {\r\n    var tooSmall = !Foundation.MediaQuery.is(this.options.equalizeOn);\r\n    if(tooSmall){\r\n      if(this.isOn){\r\n        this._pauseEvents();\r\n        this.$watched.css('height', 'auto');\r\n      }\r\n    }else{\r\n      if(!this.isOn){\r\n        this._events();\r\n      }\r\n    }\r\n    return tooSmall;\r\n  }\r\n\r\n  /**\r\n   * A noop version for the plugin\r\n   * @private\r\n   */\r\n  _killswitch() {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Calls necessary functions to update Equalizer upon DOM change\r\n   * @private\r\n   */\r\n  _reflow() {\r\n    if(!this.options.equalizeOnStack){\r\n      if(this._isStacked()){\r\n        this.$watched.css('height', 'auto');\r\n        return false;\r\n      }\r\n    }\r\n    if (this.options.equalizeByRow) {\r\n      this.getHeightsByRow(this.applyHeightByRow.bind(this));\r\n    }else{\r\n      this.getHeights(this.applyHeight.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manually determines if the first 2 elements are *NOT* stacked.\r\n   * @private\r\n   */\r\n  _isStacked() {\r\n    if (!this.$watched[0] || !this.$watched[1]) {\r\n      return true;\r\n    }\r\n    return this.$watched[0].getBoundingClientRect().top !== this.$watched[1].getBoundingClientRect().top;\r\n  }\r\n\r\n  /**\r\n   * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n   * @param {Function} cb - A non-optional callback to return the heights array to.\r\n   * @returns {Array} heights - An array of heights of children within Equalizer container\r\n   */\r\n  getHeights(cb) {\r\n    var heights = [];\r\n    for(var i = 0, len = this.$watched.length; i < len; i++){\r\n      this.$watched[i].style.height = 'auto';\r\n      heights.push(this.$watched[i].offsetHeight);\r\n    }\r\n    cb(heights);\r\n  }\r\n\r\n  /**\r\n   * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n   * @param {Function} cb - A non-optional callback to return the heights array to.\r\n   * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n   */\r\n  getHeightsByRow(cb) {\r\n    var lastElTopOffset = (this.$watched.length ? this.$watched.first().offset().top : 0),\r\n        groups = [],\r\n        group = 0;\r\n    //group by Row\r\n    groups[group] = [];\r\n    for(var i = 0, len = this.$watched.length; i < len; i++){\r\n      this.$watched[i].style.height = 'auto';\r\n      //maybe could use this.$watched[i].offsetTop\r\n      var elOffsetTop = $(this.$watched[i]).offset().top;\r\n      if (elOffsetTop!=lastElTopOffset) {\r\n        group++;\r\n        groups[group] = [];\r\n        lastElTopOffset=elOffsetTop;\r\n      }\r\n      groups[group].push([this.$watched[i],this.$watched[i].offsetHeight]);\r\n    }\r\n\r\n    for (var j = 0, ln = groups.length; j < ln; j++) {\r\n      var heights = $(groups[j]).map(function(){ return this[1]; }).get();\r\n      var max         = Math.max.apply(null, heights);\r\n      groups[j].push(max);\r\n    }\r\n    cb(groups);\r\n  }\r\n\r\n  /**\r\n   * Changes the CSS height property of each child in an Equalizer parent to match the tallest\r\n   * @param {array} heights - An array of heights of children within Equalizer container\r\n   * @fires Equalizer#preequalized\r\n   * @fires Equalizer#postequalized\r\n   */\r\n  applyHeight(heights) {\r\n    var max = Math.max.apply(null, heights);\r\n    /**\r\n     * Fires before the heights are applied\r\n     * @event Equalizer#preequalized\r\n     */\r\n    this.$element.trigger('preequalized.zf.equalizer');\r\n\r\n    this.$watched.css('height', max);\r\n\r\n    /**\r\n     * Fires when the heights have been applied\r\n     * @event Equalizer#postequalized\r\n     */\r\n     this.$element.trigger('postequalized.zf.equalizer');\r\n  }\r\n\r\n  /**\r\n   * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\r\n   * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n   * @fires Equalizer#preequalized\r\n   * @fires Equalizer#preequalizedrow\r\n   * @fires Equalizer#postequalizedrow\r\n   * @fires Equalizer#postequalized\r\n   */\r\n  applyHeightByRow(groups) {\r\n    /**\r\n     * Fires before the heights are applied\r\n     */\r\n    this.$element.trigger('preequalized.zf.equalizer');\r\n    for (var i = 0, len = groups.length; i < len ; i++) {\r\n      var groupsILength = groups[i].length,\r\n          max = groups[i][groupsILength - 1];\r\n      if (groupsILength<=2) {\r\n        $(groups[i][0][0]).css({'height':'auto'});\r\n        continue;\r\n      }\r\n      /**\r\n        * Fires before the heights per row are applied\r\n        * @event Equalizer#preequalizedrow\r\n        */\r\n      this.$element.trigger('preequalizedrow.zf.equalizer');\r\n      for (var j = 0, lenJ = (groupsILength-1); j < lenJ ; j++) {\r\n        $(groups[i][j][0]).css({'height':max});\r\n      }\r\n      /**\r\n        * Fires when the heights per row have been applied\r\n        * @event Equalizer#postequalizedrow\r\n        */\r\n      this.$element.trigger('postequalizedrow.zf.equalizer');\r\n    }\r\n    /**\r\n     * Fires when the heights have been applied\r\n     */\r\n     this.$element.trigger('postequalized.zf.equalizer');\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of Equalizer.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this._pauseEvents();\r\n    this.$watched.css('height', 'auto');\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\n/**\r\n * Default settings for plugin\r\n */\r\nEqualizer.defaults = {\r\n  /**\r\n   * Enable height equalization when stacked on smaller screens.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  equalizeOnStack: false,\r\n  /**\r\n   * Enable height equalization row by row.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  equalizeByRow: false,\r\n  /**\r\n   * String representing the minimum breakpoint size the plugin should equalize heights on.\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  equalizeOn: ''\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Equalizer, 'Equalizer');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Interchange module.\r\n * @module foundation.interchange\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.timerAndImageLoader\r\n */\r\n\r\nclass Interchange {\r\n  /**\r\n   * Creates a new instance of Interchange.\r\n   * @class\r\n   * @fires Interchange#init\r\n   * @param {Object} element - jQuery object to add the trigger to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Interchange.defaults, options);\r\n    this.rules = [];\r\n    this.currentPath = '';\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'Interchange');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    this._addBreakpoints();\r\n    this._generateRules();\r\n    this._reflow();\r\n  }\r\n\r\n  /**\r\n   * Initializes events for Interchange.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    $(window).on('resize.zf.interchange', Foundation.util.throttle(() => {\r\n      this._reflow();\r\n    }, 50));\r\n  }\r\n\r\n  /**\r\n   * Calls necessary functions to update Interchange upon DOM change\r\n   * @function\r\n   * @private\r\n   */\r\n  _reflow() {\r\n    var match;\r\n\r\n    // Iterate through each rule, but only save the last match\r\n    for (var i in this.rules) {\r\n      if(this.rules.hasOwnProperty(i)) {\r\n        var rule = this.rules[i];\r\n        if (window.matchMedia(rule.query).matches) {\r\n          match = rule;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (match) {\r\n      this.replace(match.path);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\r\n   * @function\r\n   * @private\r\n   */\r\n  _addBreakpoints() {\r\n    for (var i in Foundation.MediaQuery.queries) {\r\n      if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\r\n        var query = Foundation.MediaQuery.queries[i];\r\n        Interchange.SPECIAL_QUERIES[query.name] = query.value;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks the Interchange element for the provided media query + content pairings\r\n   * @function\r\n   * @private\r\n   * @param {Object} element - jQuery object that is an Interchange instance\r\n   * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\r\n   */\r\n  _generateRules(element) {\r\n    var rulesList = [];\r\n    var rules;\r\n\r\n    if (this.options.rules) {\r\n      rules = this.options.rules;\r\n    }\r\n    else {\r\n      rules = this.$element.data('interchange');\r\n    }\r\n    \r\n    rules =  typeof rules === 'string' ? rules.match(/\\[.*?\\]/g) : rules;\r\n\r\n    for (var i in rules) {\r\n      if(rules.hasOwnProperty(i)) {\r\n        var rule = rules[i].slice(1, -1).split(', ');\r\n        var path = rule.slice(0, -1).join('');\r\n        var query = rule[rule.length - 1];\r\n\r\n        if (Interchange.SPECIAL_QUERIES[query]) {\r\n          query = Interchange.SPECIAL_QUERIES[query];\r\n        }\r\n\r\n        rulesList.push({\r\n          path: path,\r\n          query: query\r\n        });\r\n      }\r\n    }\r\n\r\n    this.rules = rulesList;\r\n  }\r\n\r\n  /**\r\n   * Update the `src` property of an image, or change the HTML of a container, to the specified path.\r\n   * @function\r\n   * @param {String} path - Path to the image or HTML partial.\r\n   * @fires Interchange#replaced\r\n   */\r\n  replace(path) {\r\n    if (this.currentPath === path) return;\r\n\r\n    var _this = this,\r\n        trigger = 'replaced.zf.interchange';\r\n\r\n    // Replacing images\r\n    if (this.$element[0].nodeName === 'IMG') {\r\n      this.$element.attr('src', path).on('load', function() {\r\n        _this.currentPath = path;\r\n      })\r\n      .trigger(trigger);\r\n    }\r\n    // Replacing background images\r\n    else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\r\n      this.$element.css({ 'background-image': 'url('+path+')' })\r\n          .trigger(trigger);\r\n    }\r\n    // Replacing HTML\r\n    else {\r\n      $.get(path, function(response) {\r\n        _this.$element.html(response)\r\n             .trigger(trigger);\r\n        $(response).foundation();\r\n        _this.currentPath = path;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Fires when content in an Interchange element is done being loaded.\r\n     * @event Interchange#replaced\r\n     */\r\n    // this.$element.trigger('replaced.zf.interchange');\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of interchange.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    //TODO this.\r\n  }\r\n}\r\n\r\n/**\r\n * Default settings for plugin\r\n */\r\nInterchange.defaults = {\r\n  /**\r\n   * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\r\n   * @option\r\n   * @type {?array}\r\n   * @default null\r\n   */\r\n  rules: null\r\n};\r\n\r\nInterchange.SPECIAL_QUERIES = {\r\n  'landscape': 'screen and (orientation: landscape)',\r\n  'portrait': 'screen and (orientation: portrait)',\r\n  'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Interchange, 'Interchange');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Magellan module.\r\n * @module foundation.magellan\r\n */\r\n\r\nclass Magellan {\r\n  /**\r\n   * Creates a new instance of Magellan.\r\n   * @class\r\n   * @fires Magellan#init\r\n   * @param {Object} element - jQuery object to add the trigger to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options  = $.extend({}, Magellan.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n    this.calcPoints();\r\n\r\n    Foundation.registerPlugin(this, 'Magellan');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\r\n   * @private\r\n   */\r\n  _init() {\r\n    var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\r\n    var _this = this;\r\n    this.$targets = $('[data-magellan-target]');\r\n    this.$links = this.$element.find('a');\r\n    this.$element.attr({\r\n      'data-resize': id,\r\n      'data-scroll': id,\r\n      'id': id\r\n    });\r\n    this.$active = $();\r\n    this.scrollPos = parseInt(window.pageYOffset, 10);\r\n\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Calculates an array of pixel values that are the demarcation lines between locations on the page.\r\n   * Can be invoked if new elements are added or the size of a location changes.\r\n   * @function\r\n   */\r\n  calcPoints() {\r\n    var _this = this,\r\n        body = document.body,\r\n        html = document.documentElement;\r\n\r\n    this.points = [];\r\n    this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\r\n    this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\r\n\r\n    this.$targets.each(function(){\r\n      var $tar = $(this),\r\n          pt = Math.round($tar.offset().top - _this.options.threshold);\r\n      $tar.targetPoint = pt;\r\n      _this.points.push(pt);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes events for Magellan.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this,\r\n        $body = $('html, body'),\r\n        opts = {\r\n          duration: _this.options.animationDuration,\r\n          easing:   _this.options.animationEasing\r\n        };\r\n    $(window).one('load', function(){\r\n      if(_this.options.deepLinking){\r\n        if(location.hash){\r\n          _this.scrollToLoc(location.hash);\r\n        }\r\n      }\r\n      _this.calcPoints();\r\n      _this._updateActive();\r\n    });\r\n\r\n    this.$element.on({\r\n      'resizeme.zf.trigger': this.reflow.bind(this),\r\n      'scrollme.zf.trigger': this._updateActive.bind(this)\r\n    }).on('click.zf.magellan', 'a[href^=\"#\"]', function(e) {\r\n        e.preventDefault();\r\n        var arrival   = this.getAttribute('href');\r\n        _this.scrollToLoc(arrival);\r\n      });\r\n    $(window).on('popstate', function(e) {\r\n      if(_this.options.deepLinking) {\r\n        _this.scrollToLoc(window.location.hash);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Function to scroll to a given location on the page.\r\n   * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\r\n   * @function\r\n   */\r\n  scrollToLoc(loc) {\r\n    // Do nothing if target does not exist to prevent errors\r\n    if (!$(loc).length) {return false;}\r\n    this._inTransition = true;\r\n    var _this = this,\r\n        scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\r\n\r\n    $('html, body').stop(true).animate(\r\n      { scrollTop: scrollPos },\r\n      this.options.animationDuration,\r\n      this.options.animationEasing,\r\n      function() {_this._inTransition = false; _this._updateActive()}\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Calls necessary functions to update Magellan upon DOM change\r\n   * @function\r\n   */\r\n  reflow() {\r\n    this.calcPoints();\r\n    this._updateActive();\r\n  }\r\n\r\n  /**\r\n   * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\r\n   * @private\r\n   * @function\r\n   * @fires Magellan#update\r\n   */\r\n  _updateActive(/*evt, elem, scrollPos*/) {\r\n    if(this._inTransition) {return;}\r\n    var winPos = /*scrollPos ||*/ parseInt(window.pageYOffset, 10),\r\n        curIdx;\r\n\r\n    if(winPos + this.winHeight === this.docHeight){ curIdx = this.points.length - 1; }\r\n    else if(winPos < this.points[0]){ curIdx = undefined; }\r\n    else{\r\n      var isDown = this.scrollPos < winPos,\r\n          _this = this,\r\n          curVisible = this.points.filter(function(p, i){\r\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\r\n          });\r\n      curIdx = curVisible.length ? curVisible.length - 1 : 0;\r\n    }\r\n\r\n    this.$active.removeClass(this.options.activeClass);\r\n    this.$active = this.$links.filter('[href=\"#' + this.$targets.eq(curIdx).data('magellan-target') + '\"]').addClass(this.options.activeClass);\r\n\r\n    if(this.options.deepLinking){\r\n      var hash = \"\";\r\n      if(curIdx != undefined){\r\n        hash = this.$active[0].getAttribute('href');\r\n      }\r\n      if(hash !== window.location.hash) {\r\n        if(window.history.pushState){\r\n          window.history.pushState(null, null, hash);\r\n        }else{\r\n          window.location.hash = hash;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.scrollPos = winPos;\r\n    /**\r\n     * Fires when magellan is finished updating to the new active element.\r\n     * @event Magellan#update\r\n     */\r\n    this.$element.trigger('update.zf.magellan', [this.$active]);\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of Magellan and resets the url of the window.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$element.off('.zf.trigger .zf.magellan')\r\n        .find(`.${this.options.activeClass}`).removeClass(this.options.activeClass);\r\n\r\n    if(this.options.deepLinking){\r\n      var hash = this.$active[0].getAttribute('href');\r\n      window.location.hash.replace(hash, '');\r\n    }\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\n/**\r\n * Default settings for plugin\r\n */\r\nMagellan.defaults = {\r\n  /**\r\n   * Amount of time, in ms, the animated scrolling should take between locations.\r\n   * @option\r\n   * @type {number}\r\n   * @default 500\r\n   */\r\n  animationDuration: 500,\r\n  /**\r\n   * Animation style to use when scrolling between locations. Can be `'swing'` or `'linear'`.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'linear'\r\n   * @see {@link https://api.jquery.com/animate|Jquery animate}\r\n   */\r\n  animationEasing: 'linear',\r\n  /**\r\n   * Number of pixels to use as a marker for location changes.\r\n   * @option\r\n   * @type {number}\r\n   * @default 50\r\n   */\r\n  threshold: 50,\r\n  /**\r\n   * Class applied to the active locations link on the magellan container.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'active'\r\n   */\r\n  activeClass: 'active',\r\n  /**\r\n   * Allows the script to manipulate the url of the current page, and if supported, alter the history.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  deepLinking: false,\r\n  /**\r\n   * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\r\n   * @option\r\n   * @type {number}\r\n   * @default 0\r\n   */\r\n  barOffset: 0\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Magellan, 'Magellan');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * OffCanvas module.\r\n * @module foundation.offcanvas\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.triggers\r\n * @requires foundation.util.motion\r\n */\r\n\r\nclass OffCanvas {\r\n  /**\r\n   * Creates a new instance of an off-canvas wrapper.\r\n   * @class\r\n   * @fires OffCanvas#init\r\n   * @param {Object} element - jQuery object to initialize.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\r\n    this.$lastTrigger = $();\r\n    this.$triggers = $();\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'OffCanvas')\r\n    Foundation.Keyboard.register('OffCanvas', {\r\n      'ESCAPE': 'close'\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var id = this.$element.attr('id');\r\n\r\n    this.$element.attr('aria-hidden', 'true');\r\n\r\n    this.$element.addClass(`is-transition-${this.options.transition}`);\r\n\r\n    // Find triggers that affect this element and add aria-expanded to them\r\n    this.$triggers = $(document)\r\n      .find('[data-open=\"'+id+'\"], [data-close=\"'+id+'\"], [data-toggle=\"'+id+'\"]')\r\n      .attr('aria-expanded', 'false')\r\n      .attr('aria-controls', id);\r\n\r\n    // Add an overlay over the content if necessary\r\n    if (this.options.contentOverlay === true) {\r\n      var overlay = document.createElement('div');\r\n      var overlayPosition = $(this.$element).css(\"position\") === 'fixed' ? 'is-overlay-fixed' : 'is-overlay-absolute';\r\n      overlay.setAttribute('class', 'js-off-canvas-overlay ' + overlayPosition);\r\n      this.$overlay = $(overlay);\r\n      if(overlayPosition === 'is-overlay-fixed') {\r\n        $('body').append(this.$overlay);\r\n      } else {\r\n        this.$element.siblings('[data-off-canvas-content]').append(this.$overlay);\r\n      }\r\n    }\r\n\r\n    this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\r\n\r\n    if (this.options.isRevealed === true) {\r\n      this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\r\n      this._setMQChecker();\r\n    }\r\n    if (!this.options.transitionTime === true) {\r\n      this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas]')[0]).transitionDuration) * 1000;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers to the off-canvas wrapper and the exit overlay.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    this.$element.off('.zf.trigger .zf.offcanvas').on({\r\n      'open.zf.trigger': this.open.bind(this),\r\n      'close.zf.trigger': this.close.bind(this),\r\n      'toggle.zf.trigger': this.toggle.bind(this),\r\n      'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\r\n    });\r\n\r\n    if (this.options.closeOnClick === true) {\r\n      var $target = this.options.contentOverlay ? this.$overlay : $('[data-off-canvas-content]');\r\n      $target.on({'click.zf.offcanvas': this.close.bind(this)});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Applies event listener for elements that will reveal at certain breakpoints.\r\n   * @private\r\n   */\r\n  _setMQChecker() {\r\n    var _this = this;\r\n\r\n    $(window).on('changed.zf.mediaquery', function() {\r\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\r\n        _this.reveal(true);\r\n      } else {\r\n        _this.reveal(false);\r\n      }\r\n    }).one('load.zf.offcanvas', function() {\r\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\r\n        _this.reveal(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\r\n   * @param {Boolean} isRevealed - true if element should be revealed.\r\n   * @function\r\n   */\r\n  reveal(isRevealed) {\r\n    var $closer = this.$element.find('[data-close]');\r\n    if (isRevealed) {\r\n      this.close();\r\n      this.isRevealed = true;\r\n      this.$element.attr('aria-hidden', 'false');\r\n      this.$element.off('open.zf.trigger toggle.zf.trigger');\r\n      if ($closer.length) { $closer.hide(); }\r\n    } else {\r\n      this.isRevealed = false;\r\n      this.$element.attr('aria-hidden', 'true');\r\n      this.$element.off('open.zf.trigger toggle.zf.trigger').on({\r\n        'open.zf.trigger': this.open.bind(this),\r\n        'toggle.zf.trigger': this.toggle.bind(this)\r\n      });\r\n      if ($closer.length) {\r\n        $closer.show();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stops scrolling of the body when offcanvas is open on mobile Safari and other troublesome browsers.\r\n   * @private\r\n   */\r\n  _stopScrolling(event) {\r\n    return false;\r\n  }\r\n\r\n  // Taken and adapted from http://stackoverflow.com/questions/16889447/prevent-full-page-scrolling-ios\r\n  // Only really works for y, not sure how to extend to x or if we need to.\r\n  _recordScrollable(event) {\r\n    let elem = this; // called from event handler context with this as elem\r\n\r\n     // If the element is scrollable (content overflows), then...\r\n    if (elem.scrollHeight !== elem.clientHeight) {\r\n      // If we're at the top, scroll down one pixel to allow scrolling up\r\n      if (elem.scrollTop === 0) {\r\n        elem.scrollTop = 1;\r\n      }\r\n      // If we're at the bottom, scroll up one pixel to allow scrolling down\r\n      if (elem.scrollTop === elem.scrollHeight - elem.clientHeight) {\r\n        elem.scrollTop = elem.scrollHeight - elem.clientHeight - 1;\r\n      }\r\n    }\r\n    elem.allowUp = elem.scrollTop > 0;\r\n    elem.allowDown = elem.scrollTop < (elem.scrollHeight - elem.clientHeight);\r\n    elem.lastY = event.originalEvent.pageY;\r\n  }\r\n\r\n  _stopScrollPropagation(event) {\r\n    let elem = this; // called from event handler context with this as elem\r\n    let up = event.pageY < elem.lastY;\r\n    let down = !up;\r\n    elem.lastY = event.pageY;\r\n\r\n    if((up && elem.allowUp) || (down && elem.allowDown)) {\r\n      event.stopPropagation();\r\n    } else {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the off-canvas menu.\r\n   * @function\r\n   * @param {Object} event - Event object passed from listener.\r\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n   * @fires OffCanvas#opened\r\n   */\r\n  open(event, trigger) {\r\n    if (this.$element.hasClass('is-open') || this.isRevealed) { return; }\r\n    var _this = this;\r\n\r\n    if (trigger) {\r\n      this.$lastTrigger = trigger;\r\n    }\r\n\r\n    if (this.options.forceTo === 'top') {\r\n      window.scrollTo(0, 0);\r\n    } else if (this.options.forceTo === 'bottom') {\r\n      window.scrollTo(0,document.body.scrollHeight);\r\n    }\r\n\r\n    /**\r\n     * Fires when the off-canvas menu opens.\r\n     * @event OffCanvas#opened\r\n     */\r\n    _this.$element.addClass('is-open')\r\n\r\n    this.$triggers.attr('aria-expanded', 'true');\r\n    this.$element.attr('aria-hidden', 'false')\r\n        .trigger('opened.zf.offcanvas');\r\n\r\n    // If `contentScroll` is set to false, add class and disable scrolling on touch devices.\r\n    if (this.options.contentScroll === false) {\r\n      $('body').addClass('is-off-canvas-open').on('touchmove', this._stopScrolling);\r\n      this.$element.on('touchstart', this._recordScrollable);\r\n      this.$element.on('touchmove', this._stopScrollPropagation);\r\n    }\r\n\r\n    if (this.options.contentOverlay === true) {\r\n      this.$overlay.addClass('is-visible');\r\n    }\r\n\r\n    if (this.options.closeOnClick === true && this.options.contentOverlay === true) {\r\n      this.$overlay.addClass('is-closable');\r\n    }\r\n\r\n    if (this.options.autoFocus === true) {\r\n      this.$element.one(Foundation.transitionend(this.$element), function() {\r\n        var canvasFocus = _this.$element.find('[data-autofocus]');\r\n        if (canvasFocus.length) {\r\n            canvasFocus.eq(0).focus();\r\n        } else {\r\n            _this.$element.find('a, button').eq(0).focus();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.options.trapFocus === true) {\r\n      this.$element.siblings('[data-off-canvas-content]').attr('tabindex', '-1');\r\n      Foundation.Keyboard.trapFocus(this.$element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the off-canvas menu.\r\n   * @function\r\n   * @param {Function} cb - optional cb to fire after closure.\r\n   * @fires OffCanvas#closed\r\n   */\r\n  close(cb) {\r\n    if (!this.$element.hasClass('is-open') || this.isRevealed) { return; }\r\n\r\n    var _this = this;\r\n\r\n    _this.$element.removeClass('is-open');\r\n\r\n    this.$element.attr('aria-hidden', 'true')\r\n      /**\r\n       * Fires when the off-canvas menu opens.\r\n       * @event OffCanvas#closed\r\n       */\r\n        .trigger('closed.zf.offcanvas');\r\n\r\n    // If `contentScroll` is set to false, remove class and re-enable scrolling on touch devices.\r\n    if (this.options.contentScroll === false) {\r\n      $('body').removeClass('is-off-canvas-open').off('touchmove', this._stopScrolling);\r\n      this.$element.off('touchstart', this._recordScrollable);\r\n      this.$element.off('touchmove', this._stopScrollPropagation);\r\n    }\r\n\r\n    if (this.options.contentOverlay === true) {\r\n      this.$overlay.removeClass('is-visible');\r\n    }\r\n\r\n    if (this.options.closeOnClick === true && this.options.contentOverlay === true) {\r\n      this.$overlay.removeClass('is-closable');\r\n    }\r\n\r\n    this.$triggers.attr('aria-expanded', 'false');\r\n\r\n    if (this.options.trapFocus === true) {\r\n      this.$element.siblings('[data-off-canvas-content]').removeAttr('tabindex');\r\n      Foundation.Keyboard.releaseFocus(this.$element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the off-canvas menu open or closed.\r\n   * @function\r\n   * @param {Object} event - Event object passed from listener.\r\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n   */\r\n  toggle(event, trigger) {\r\n    if (this.$element.hasClass('is-open')) {\r\n      this.close(event, trigger);\r\n    }\r\n    else {\r\n      this.open(event, trigger);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\r\n   * @function\r\n   * @private\r\n   */\r\n  _handleKeyboard(e) {\r\n    Foundation.Keyboard.handleKey(e, 'OffCanvas', {\r\n      close: () => {\r\n        this.close();\r\n        this.$lastTrigger.focus();\r\n        return true;\r\n      },\r\n      handled: () => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Destroys the offcanvas plugin.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.close();\r\n    this.$element.off('.zf.trigger .zf.offcanvas');\r\n    this.$overlay.off('.zf.offcanvas');\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nOffCanvas.defaults = {\r\n  /**\r\n   * Allow the user to click outside of the menu to close it.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  closeOnClick: true,\r\n\r\n  /**\r\n   * Adds an overlay on top of `[data-off-canvas-content]`.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  contentOverlay: true,\r\n\r\n  /**\r\n   * Enable/disable scrolling of the main content when an off canvas panel is open.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  contentScroll: true,\r\n\r\n  /**\r\n   * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\r\n   * @option\r\n   * @type {number}\r\n   * @default 0\r\n   */\r\n  transitionTime: 0,\r\n\r\n  /**\r\n   * Type of transition for the offcanvas menu. Options are 'push', 'detached' or 'slide'.\r\n   * @option\r\n   * @type {string}\r\n   * @default push\r\n   */\r\n  transition: 'push',\r\n\r\n  /**\r\n   * Force the page to scroll to top or bottom on open.\r\n   * @option\r\n   * @type {?string}\r\n   * @default null\r\n   */\r\n  forceTo: null,\r\n\r\n  /**\r\n   * Allow the offcanvas to remain open for certain breakpoints.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  isRevealed: false,\r\n\r\n  /**\r\n   * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\r\n   * @option\r\n   * @type {?string}\r\n   * @default null\r\n   */\r\n  revealOn: null,\r\n\r\n  /**\r\n   * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  autoFocus: true,\r\n\r\n  /**\r\n   * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\r\n   * @option\r\n   * @type {string}\r\n   * @default reveal-for-\r\n   * @todo improve the regex testing for this.\r\n   */\r\n  revealClass: 'reveal-for-',\r\n\r\n  /**\r\n   * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  trapFocus: false\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(OffCanvas, 'OffCanvas');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Orbit module.\r\n * @module foundation.orbit\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.motion\r\n * @requires foundation.util.timerAndImageLoader\r\n * @requires foundation.util.touch\r\n */\r\n\r\nclass Orbit {\r\n  /**\r\n  * Creates a new instance of an orbit carousel.\r\n  * @class\r\n  * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\r\n  * @param {Object} options - Overrides to the default plugin settings.\r\n  */\r\n  constructor(element, options){\r\n    this.$element = element;\r\n    this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Orbit');\r\n    Foundation.Keyboard.register('Orbit', {\r\n      'ltr': {\r\n        'ARROW_RIGHT': 'next',\r\n        'ARROW_LEFT': 'previous'\r\n      },\r\n      'rtl': {\r\n        'ARROW_LEFT': 'next',\r\n        'ARROW_RIGHT': 'previous'\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\r\n  * @function\r\n  * @private\r\n  */\r\n  _init() {\r\n    // @TODO: consider discussion on PR #9278 about DOM pollution by changeSlide\r\n    this._reset();\r\n\r\n    this.$wrapper = this.$element.find(`.${this.options.containerClass}`);\r\n    this.$slides = this.$element.find(`.${this.options.slideClass}`);\r\n\r\n    var $images = this.$element.find('img'),\r\n        initActive = this.$slides.filter('.is-active'),\r\n        id = this.$element[0].id || Foundation.GetYoDigits(6, 'orbit');\r\n\r\n    this.$element.attr({\r\n      'data-resize': id,\r\n      'id': id\r\n    });\r\n\r\n    if (!initActive.length) {\r\n      this.$slides.eq(0).addClass('is-active');\r\n    }\r\n\r\n    if (!this.options.useMUI) {\r\n      this.$slides.addClass('no-motionui');\r\n    }\r\n\r\n    if ($images.length) {\r\n      Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\r\n    } else {\r\n      this._prepareForOrbit();//hehe\r\n    }\r\n\r\n    if (this.options.bullets) {\r\n      this._loadBullets();\r\n    }\r\n\r\n    this._events();\r\n\r\n    if (this.options.autoPlay && this.$slides.length > 1) {\r\n      this.geoSync();\r\n    }\r\n\r\n    if (this.options.accessible) { // allow wrapper to be focusable to enable arrow navigation\r\n      this.$wrapper.attr('tabindex', 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Creates a jQuery collection of bullets, if they are being used.\r\n  * @function\r\n  * @private\r\n  */\r\n  _loadBullets() {\r\n    this.$bullets = this.$element.find(`.${this.options.boxOfBullets}`).find('button');\r\n  }\r\n\r\n  /**\r\n  * Sets a `timer` object on the orbit, and starts the counter for the next slide.\r\n  * @function\r\n  */\r\n  geoSync() {\r\n    var _this = this;\r\n    this.timer = new Foundation.Timer(\r\n      this.$element,\r\n      {\r\n        duration: this.options.timerDelay,\r\n        infinite: false\r\n      },\r\n      function() {\r\n        _this.changeSlide(true);\r\n      });\r\n    this.timer.start();\r\n  }\r\n\r\n  /**\r\n  * Sets wrapper and slide heights for the orbit.\r\n  * @function\r\n  * @private\r\n  */\r\n  _prepareForOrbit() {\r\n    var _this = this;\r\n    this._setWrapperHeight();\r\n  }\r\n\r\n  /**\r\n  * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\r\n  * @function\r\n  * @private\r\n  * @param {Function} cb - a callback function to fire when complete.\r\n  */\r\n  _setWrapperHeight(cb) {//rewrite this to `for` loop\r\n    var max = 0, temp, counter = 0, _this = this;\r\n\r\n    this.$slides.each(function() {\r\n      temp = this.getBoundingClientRect().height;\r\n      $(this).attr('data-slide', counter);\r\n\r\n      if (_this.$slides.filter('.is-active')[0] !== _this.$slides.eq(counter)[0]) {//if not the active slide, set css position and display property\r\n        $(this).css({'position': 'relative', 'display': 'none'});\r\n      }\r\n      max = temp > max ? temp : max;\r\n      counter++;\r\n    });\r\n\r\n    if (counter === this.$slides.length) {\r\n      this.$wrapper.css({'height': max}); //only change the wrapper height property once.\r\n      if(cb) {cb(max);} //fire callback with max height dimension.\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Sets the max-height of each slide.\r\n  * @function\r\n  * @private\r\n  */\r\n  _setSlideHeight(height) {\r\n    this.$slides.each(function() {\r\n      $(this).css('max-height', height);\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Adds event listeners to basically everything within the element.\r\n  * @function\r\n  * @private\r\n  */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    //***************************************\r\n    //**Now using custom event - thanks to:**\r\n    //**      Yohai Ararat of Toronto      **\r\n    //***************************************\r\n    //\r\n    this.$element.off('.resizeme.zf.trigger').on({\r\n      'resizeme.zf.trigger': this._prepareForOrbit.bind(this)\r\n    })\r\n    if (this.$slides.length > 1) {\r\n\r\n      if (this.options.swipe) {\r\n        this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit')\r\n        .on('swipeleft.zf.orbit', function(e){\r\n          e.preventDefault();\r\n          _this.changeSlide(true);\r\n        }).on('swiperight.zf.orbit', function(e){\r\n          e.preventDefault();\r\n          _this.changeSlide(false);\r\n        });\r\n      }\r\n      //***************************************\r\n\r\n      if (this.options.autoPlay) {\r\n        this.$slides.on('click.zf.orbit', function() {\r\n          _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\r\n          _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\r\n        });\r\n\r\n        if (this.options.pauseOnHover) {\r\n          this.$element.on('mouseenter.zf.orbit', function() {\r\n            _this.timer.pause();\r\n          }).on('mouseleave.zf.orbit', function() {\r\n            if (!_this.$element.data('clickedOn')) {\r\n              _this.timer.start();\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (this.options.navButtons) {\r\n        var $controls = this.$element.find(`.${this.options.nextClass}, .${this.options.prevClass}`);\r\n        $controls.attr('tabindex', 0)\r\n        //also need to handle enter/return and spacebar key presses\r\n        .on('click.zf.orbit touchend.zf.orbit', function(e){\r\n\t  e.preventDefault();\r\n          _this.changeSlide($(this).hasClass(_this.options.nextClass));\r\n        });\r\n      }\r\n\r\n      if (this.options.bullets) {\r\n        this.$bullets.on('click.zf.orbit touchend.zf.orbit', function() {\r\n          if (/is-active/g.test(this.className)) { return false; }//if this is active, kick out of function.\r\n          var idx = $(this).data('slide'),\r\n          ltr = idx > _this.$slides.filter('.is-active').data('slide'),\r\n          $slide = _this.$slides.eq(idx);\r\n\r\n          _this.changeSlide(ltr, $slide, idx);\r\n        });\r\n      }\r\n\r\n      if (this.options.accessible) {\r\n        this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function(e) {\r\n          // handle keyboard event with keyboard util\r\n          Foundation.Keyboard.handleKey(e, 'Orbit', {\r\n            next: function() {\r\n              _this.changeSlide(true);\r\n            },\r\n            previous: function() {\r\n              _this.changeSlide(false);\r\n            },\r\n            handled: function() { // if bullet is focused, make sure focus moves\r\n              if ($(e.target).is(_this.$bullets)) {\r\n                _this.$bullets.filter('.is-active').focus();\r\n              }\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets Orbit so it can be reinitialized\r\n   */\r\n  _reset() {\r\n    // Don't do anything if there are no slides (first run)\r\n    if (typeof this.$slides == 'undefined') {\r\n      return;\r\n    }\r\n\r\n    if (this.$slides.length > 1) {\r\n      // Remove old events\r\n      this.$element.off('.zf.orbit').find('*').off('.zf.orbit')\r\n\r\n      // Restart timer if autoPlay is enabled\r\n      if (this.options.autoPlay) {\r\n        this.timer.restart();\r\n      }\r\n\r\n      // Reset all sliddes\r\n      this.$slides.each(function(el) {\r\n        $(el).removeClass('is-active is-active is-in')\r\n          .removeAttr('aria-live')\r\n          .hide();\r\n      });\r\n\r\n      // Show the first slide\r\n      this.$slides.first().addClass('is-active').show();\r\n\r\n      // Triggers when the slide has finished animating\r\n      this.$element.trigger('slidechange.zf.orbit', [this.$slides.first()]);\r\n\r\n      // Select first bullet if bullets are present\r\n      if (this.options.bullets) {\r\n        this._updateBullets(0);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Changes the current slide to a new one.\r\n  * @function\r\n  * @param {Boolean} isLTR - flag if the slide should move left to right.\r\n  * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\r\n  * @param {Number} idx - the index of the new slide in its collection, if one chosen.\r\n  * @fires Orbit#slidechange\r\n  */\r\n  changeSlide(isLTR, chosenSlide, idx) {\r\n    if (!this.$slides) {return; } // Don't freak out if we're in the middle of cleanup\r\n    var $curSlide = this.$slides.filter('.is-active').eq(0);\r\n\r\n    if (/mui/g.test($curSlide[0].className)) { return false; } //if the slide is currently animating, kick out of the function\r\n\r\n    var $firstSlide = this.$slides.first(),\r\n    $lastSlide = this.$slides.last(),\r\n    dirIn = isLTR ? 'Right' : 'Left',\r\n    dirOut = isLTR ? 'Left' : 'Right',\r\n    _this = this,\r\n    $newSlide;\r\n\r\n    if (!chosenSlide) { //most of the time, this will be auto played or clicked from the navButtons.\r\n      $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\r\n      (this.options.infiniteWrap ? $curSlide.next(`.${this.options.slideClass}`).length ? $curSlide.next(`.${this.options.slideClass}`) : $firstSlide : $curSlide.next(`.${this.options.slideClass}`))//pick next slide if moving left to right\r\n      :\r\n      (this.options.infiniteWrap ? $curSlide.prev(`.${this.options.slideClass}`).length ? $curSlide.prev(`.${this.options.slideClass}`) : $lastSlide : $curSlide.prev(`.${this.options.slideClass}`));//pick prev slide if moving right to left\r\n    } else {\r\n      $newSlide = chosenSlide;\r\n    }\r\n\r\n    if ($newSlide.length) {\r\n      /**\r\n      * Triggers before the next slide starts animating in and only if a next slide has been found.\r\n      * @event Orbit#beforeslidechange\r\n      */\r\n      this.$element.trigger('beforeslidechange.zf.orbit', [$curSlide, $newSlide]);\r\n\r\n      if (this.options.bullets) {\r\n        idx = idx || this.$slides.index($newSlide); //grab index to update bullets\r\n        this._updateBullets(idx);\r\n      }\r\n\r\n      if (this.options.useMUI && !this.$element.is(':hidden')) {\r\n        Foundation.Motion.animateIn(\r\n          $newSlide.addClass('is-active').css({'position': 'absolute', 'top': 0}),\r\n          this.options[`animInFrom${dirIn}`],\r\n          function(){\r\n            $newSlide.css({'position': 'relative', 'display': 'block'})\r\n            .attr('aria-live', 'polite');\r\n        });\r\n\r\n        Foundation.Motion.animateOut(\r\n          $curSlide.removeClass('is-active'),\r\n          this.options[`animOutTo${dirOut}`],\r\n          function(){\r\n            $curSlide.removeAttr('aria-live');\r\n            if(_this.options.autoPlay && !_this.timer.isPaused){\r\n              _this.timer.restart();\r\n            }\r\n            //do stuff?\r\n          });\r\n      } else {\r\n        $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\r\n        $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\r\n        if (this.options.autoPlay && !this.timer.isPaused) {\r\n          this.timer.restart();\r\n        }\r\n      }\r\n    /**\r\n    * Triggers when the slide has finished animating in.\r\n    * @event Orbit#slidechange\r\n    */\r\n      this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Updates the active state of the bullets, if displayed.\r\n  * @function\r\n  * @private\r\n  * @param {Number} idx - the index of the current slide.\r\n  */\r\n  _updateBullets(idx) {\r\n    var $oldBullet = this.$element.find(`.${this.options.boxOfBullets}`)\r\n    .find('.is-active').removeClass('is-active').blur(),\r\n    span = $oldBullet.find('span:last').detach(),\r\n    $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\r\n  }\r\n\r\n  /**\r\n  * Destroys the carousel and hides the element.\r\n  * @function\r\n  */\r\n  destroy() {\r\n    this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nOrbit.defaults = {\r\n  /**\r\n  * Tells the JS to look for and loadBullets.\r\n  * @option\r\n   * @type {boolean}\r\n  * @default true\r\n  */\r\n  bullets: true,\r\n  /**\r\n  * Tells the JS to apply event listeners to nav buttons\r\n  * @option\r\n   * @type {boolean}\r\n  * @default true\r\n  */\r\n  navButtons: true,\r\n  /**\r\n  * motion-ui animation class to apply\r\n  * @option\r\n   * @type {string}\r\n  * @default 'slide-in-right'\r\n  */\r\n  animInFromRight: 'slide-in-right',\r\n  /**\r\n  * motion-ui animation class to apply\r\n  * @option\r\n   * @type {string}\r\n  * @default 'slide-out-right'\r\n  */\r\n  animOutToRight: 'slide-out-right',\r\n  /**\r\n  * motion-ui animation class to apply\r\n  * @option\r\n   * @type {string}\r\n  * @default 'slide-in-left'\r\n  *\r\n  */\r\n  animInFromLeft: 'slide-in-left',\r\n  /**\r\n  * motion-ui animation class to apply\r\n  * @option\r\n   * @type {string}\r\n  * @default 'slide-out-left'\r\n  */\r\n  animOutToLeft: 'slide-out-left',\r\n  /**\r\n  * Allows Orbit to automatically animate on page load.\r\n  * @option\r\n   * @type {boolean}\r\n  * @default true\r\n  */\r\n  autoPlay: true,\r\n  /**\r\n  * Amount of time, in ms, between slide transitions\r\n  * @option\r\n   * @type {number}\r\n  * @default 5000\r\n  */\r\n  timerDelay: 5000,\r\n  /**\r\n  * Allows Orbit to infinitely loop through the slides\r\n  * @option\r\n   * @type {boolean}\r\n  * @default true\r\n  */\r\n  infiniteWrap: true,\r\n  /**\r\n  * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\r\n  * @option\r\n   * @type {boolean}\r\n  * @default true\r\n  */\r\n  swipe: true,\r\n  /**\r\n  * Allows the timing function to pause animation on hover.\r\n  * @option\r\n   * @type {boolean}\r\n  * @default true\r\n  */\r\n  pauseOnHover: true,\r\n  /**\r\n  * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\r\n  * @option\r\n   * @type {boolean}\r\n  * @default true\r\n  */\r\n  accessible: true,\r\n  /**\r\n  * Class applied to the container of Orbit\r\n  * @option\r\n   * @type {string}\r\n  * @default 'orbit-container'\r\n  */\r\n  containerClass: 'orbit-container',\r\n  /**\r\n  * Class applied to individual slides.\r\n  * @option\r\n   * @type {string}\r\n  * @default 'orbit-slide'\r\n  */\r\n  slideClass: 'orbit-slide',\r\n  /**\r\n  * Class applied to the bullet container. You're welcome.\r\n  * @option\r\n   * @type {string}\r\n  * @default 'orbit-bullets'\r\n  */\r\n  boxOfBullets: 'orbit-bullets',\r\n  /**\r\n  * Class applied to the `next` navigation button.\r\n  * @option\r\n   * @type {string}\r\n  * @default 'orbit-next'\r\n  */\r\n  nextClass: 'orbit-next',\r\n  /**\r\n  * Class applied to the `previous` navigation button.\r\n  * @option\r\n   * @type {string}\r\n  * @default 'orbit-previous'\r\n  */\r\n  prevClass: 'orbit-previous',\r\n  /**\r\n  * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\r\n  * @option\r\n   * @type {boolean}\r\n  * @default true\r\n  */\r\n  useMUI: true\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Orbit, 'Orbit');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * ResponsiveMenu module.\r\n * @module foundation.responsiveMenu\r\n * @requires foundation.util.triggers\r\n * @requires foundation.util.mediaQuery\r\n */\r\n\r\nclass ResponsiveMenu {\r\n  /**\r\n   * Creates a new instance of a responsive menu.\r\n   * @class\r\n   * @fires ResponsiveMenu#init\r\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = $(element);\r\n    this.rules = this.$element.data('responsive-menu');\r\n    this.currentMq = null;\r\n    this.currentPlugin = null;\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'ResponsiveMenu');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\r\n    if (typeof this.rules === 'string') {\r\n      let rulesTree = {};\r\n\r\n      // Parse rules from \"classes\" pulled from data attribute\r\n      let rules = this.rules.split(' ');\r\n\r\n      // Iterate through every rule found\r\n      for (let i = 0; i < rules.length; i++) {\r\n        let rule = rules[i].split('-');\r\n        let ruleSize = rule.length > 1 ? rule[0] : 'small';\r\n        let rulePlugin = rule.length > 1 ? rule[1] : rule[0];\r\n\r\n        if (MenuPlugins[rulePlugin] !== null) {\r\n          rulesTree[ruleSize] = MenuPlugins[rulePlugin];\r\n        }\r\n      }\r\n\r\n      this.rules = rulesTree;\r\n    }\r\n\r\n    if (!$.isEmptyObject(this.rules)) {\r\n      this._checkMediaQueries();\r\n    }\r\n    // Add data-mutate since children may need it.\r\n    this.$element.attr('data-mutate', (this.$element.attr('data-mutate') || Foundation.GetYoDigits(6, 'responsive-menu')));\r\n  }\r\n\r\n  /**\r\n   * Initializes events for the Menu.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    $(window).on('changed.zf.mediaquery', function() {\r\n      _this._checkMediaQueries();\r\n    });\r\n    // $(window).on('resize.zf.ResponsiveMenu', function() {\r\n    //   _this._checkMediaQueries();\r\n    // });\r\n  }\r\n\r\n  /**\r\n   * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\r\n   * @function\r\n   * @private\r\n   */\r\n  _checkMediaQueries() {\r\n    var matchedMq, _this = this;\r\n    // Iterate through each rule and find the last matching rule\r\n    $.each(this.rules, function(key) {\r\n      if (Foundation.MediaQuery.atLeast(key)) {\r\n        matchedMq = key;\r\n      }\r\n    });\r\n\r\n    // No match? No dice\r\n    if (!matchedMq) return;\r\n\r\n    // Plugin already initialized? We good\r\n    if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\r\n\r\n    // Remove existing plugin-specific CSS classes\r\n    $.each(MenuPlugins, function(key, value) {\r\n      _this.$element.removeClass(value.cssClass);\r\n    });\r\n\r\n    // Add the CSS class for the new plugin\r\n    this.$element.addClass(this.rules[matchedMq].cssClass);\r\n\r\n    // Create an instance of the new plugin\r\n    if (this.currentPlugin) this.currentPlugin.destroy();\r\n    this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\r\n  }\r\n\r\n  /**\r\n   * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.currentPlugin.destroy();\r\n    $(window).off('.zf.ResponsiveMenu');\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nResponsiveMenu.defaults = {};\r\n\r\n// The plugin matches the plugin classes with these plugin instances.\r\nvar MenuPlugins = {\r\n  dropdown: {\r\n    cssClass: 'dropdown',\r\n    plugin: Foundation._plugins['dropdown-menu'] || null\r\n  },\r\n drilldown: {\r\n    cssClass: 'drilldown',\r\n    plugin: Foundation._plugins['drilldown'] || null\r\n  },\r\n  accordion: {\r\n    cssClass: 'accordion-menu',\r\n    plugin: Foundation._plugins['accordion-menu'] || null\r\n  }\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * ResponsiveToggle module.\r\n * @module foundation.responsiveToggle\r\n * @requires foundation.util.mediaQuery\r\n */\r\n\r\nclass ResponsiveToggle {\r\n  /**\r\n   * Creates a new instance of Tab Bar.\r\n   * @class\r\n   * @fires ResponsiveToggle#init\r\n   * @param {jQuery} element - jQuery object to attach tab bar functionality to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = $(element);\r\n    this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'ResponsiveToggle');\r\n  }\r\n\r\n  /**\r\n   * Initializes the tab bar by finding the target element, toggling element, and running update().\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var targetID = this.$element.data('responsive-toggle');\r\n    if (!targetID) {\r\n      console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\r\n    }\r\n\r\n    this.$targetMenu = $(`#${targetID}`);\r\n    this.$toggler = this.$element.find('[data-toggle]').filter(function() {\r\n      var target = $(this).data('toggle');\r\n      return (target === targetID || target === \"\");\r\n    });\r\n    this.options = $.extend({}, this.options, this.$targetMenu.data());\r\n\r\n    // If they were set, parse the animation classes\r\n    if(this.options.animate) {\r\n      let input = this.options.animate.split(' ');\r\n\r\n      this.animationIn = input[0];\r\n      this.animationOut = input[1] || null;\r\n    }\r\n\r\n    this._update();\r\n  }\r\n\r\n  /**\r\n   * Adds necessary event handlers for the tab bar to work.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    this._updateMqHandler = this._update.bind(this);\r\n\r\n    $(window).on('changed.zf.mediaquery', this._updateMqHandler);\r\n\r\n    this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Checks the current media query to determine if the tab bar should be visible or hidden.\r\n   * @function\r\n   * @private\r\n   */\r\n  _update() {\r\n    // Mobile\r\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\r\n      this.$element.show();\r\n      this.$targetMenu.hide();\r\n    }\r\n\r\n    // Desktop\r\n    else {\r\n      this.$element.hide();\r\n      this.$targetMenu.show();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\r\n   * @function\r\n   * @fires ResponsiveToggle#toggled\r\n   */\r\n  toggleMenu() {\r\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\r\n      /**\r\n       * Fires when the element attached to the tab bar toggles.\r\n       * @event ResponsiveToggle#toggled\r\n       */\r\n      if(this.options.animate) {\r\n        if (this.$targetMenu.is(':hidden')) {\r\n          Foundation.Motion.animateIn(this.$targetMenu, this.animationIn, () => {\r\n            this.$element.trigger('toggled.zf.responsiveToggle');\r\n            this.$targetMenu.find('[data-mutate]').triggerHandler('mutateme.zf.trigger');\r\n          });\r\n        }\r\n        else {\r\n          Foundation.Motion.animateOut(this.$targetMenu, this.animationOut, () => {\r\n            this.$element.trigger('toggled.zf.responsiveToggle');\r\n          });\r\n        }\r\n      }\r\n      else {\r\n        this.$targetMenu.toggle(0);\r\n        this.$targetMenu.find('[data-mutate]').trigger('mutateme.zf.trigger');\r\n        this.$element.trigger('toggled.zf.responsiveToggle');\r\n      }\r\n    }\r\n  };\r\n\r\n  destroy() {\r\n    this.$element.off('.zf.responsiveToggle');\r\n    this.$toggler.off('.zf.responsiveToggle');\r\n\r\n    $(window).off('changed.zf.mediaquery', this._updateMqHandler);\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nResponsiveToggle.defaults = {\r\n  /**\r\n   * The breakpoint after which the menu is always shown, and the tab bar is hidden.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'medium'\r\n   */\r\n  hideFor: 'medium',\r\n\r\n  /**\r\n   * To decide if the toggle should be animated or not.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  animate: false\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Reveal module.\r\n * @module foundation.reveal\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.box\r\n * @requires foundation.util.triggers\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.motion if using animations\r\n */\r\n\r\nclass Reveal {\r\n  /**\r\n   * Creates a new instance of Reveal.\r\n   * @class\r\n   * @param {jQuery} element - jQuery object to use for the modal.\r\n   * @param {Object} options - optional parameters.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Reveal');\r\n    Foundation.Keyboard.register('Reveal', {\r\n      'ENTER': 'open',\r\n      'SPACE': 'open',\r\n      'ESCAPE': 'close',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the modal by adding the overlay and close buttons, (if selected).\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.id = this.$element.attr('id');\r\n    this.isActive = false;\r\n    this.cached = {mq: Foundation.MediaQuery.current};\r\n    this.isMobile = mobileSniff();\r\n\r\n    this.$anchor = $(`[data-open=\"${this.id}\"]`).length ? $(`[data-open=\"${this.id}\"]`) : $(`[data-toggle=\"${this.id}\"]`);\r\n    this.$anchor.attr({\r\n      'aria-controls': this.id,\r\n      'aria-haspopup': true,\r\n      'tabindex': 0\r\n    });\r\n\r\n    if (this.options.fullScreen || this.$element.hasClass('full')) {\r\n      this.options.fullScreen = true;\r\n      this.options.overlay = false;\r\n    }\r\n    if (this.options.overlay && !this.$overlay) {\r\n      this.$overlay = this._makeOverlay(this.id);\r\n    }\r\n\r\n    this.$element.attr({\r\n        'role': 'dialog',\r\n        'aria-hidden': true,\r\n        'data-yeti-box': this.id,\r\n        'data-resize': this.id\r\n    });\r\n\r\n    if(this.$overlay) {\r\n      this.$element.detach().appendTo(this.$overlay);\r\n    } else {\r\n      this.$element.detach().appendTo($(this.options.appendTo));\r\n      this.$element.addClass('without-overlay');\r\n    }\r\n    this._events();\r\n    if (this.options.deepLink && window.location.hash === ( `#${this.id}`)) {\r\n      $(window).one('load.zf.reveal', this.open.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an overlay div to display behind the modal.\r\n   * @private\r\n   */\r\n  _makeOverlay() {\r\n    return $('<div></div>')\r\n      .addClass('reveal-overlay')\r\n      .appendTo(this.options.appendTo);\r\n  }\r\n\r\n  /**\r\n   * Updates position of modal\r\n   * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\r\n   * @private\r\n   */\r\n  _updatePosition() {\r\n    var width = this.$element.outerWidth();\r\n    var outerWidth = $(window).width();\r\n    var height = this.$element.outerHeight();\r\n    var outerHeight = $(window).height();\r\n    var left, top;\r\n    if (this.options.hOffset === 'auto') {\r\n      left = parseInt((outerWidth - width) / 2, 10);\r\n    } else {\r\n      left = parseInt(this.options.hOffset, 10);\r\n    }\r\n    if (this.options.vOffset === 'auto') {\r\n      if (height > outerHeight) {\r\n        top = parseInt(Math.min(100, outerHeight / 10), 10);\r\n      } else {\r\n        top = parseInt((outerHeight - height) / 4, 10);\r\n      }\r\n    } else {\r\n      top = parseInt(this.options.vOffset, 10);\r\n    }\r\n    this.$element.css({top: top + 'px'});\r\n    // only worry about left if we don't have an overlay or we havea  horizontal offset,\r\n    // otherwise we're perfectly in the middle\r\n    if(!this.$overlay || (this.options.hOffset !== 'auto')) {\r\n      this.$element.css({left: left + 'px'});\r\n      this.$element.css({margin: '0px'});\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers for the modal.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    this.$element.on({\r\n      'open.zf.trigger': this.open.bind(this),\r\n      'close.zf.trigger': (event, $element) => {\r\n        if ((event.target === _this.$element[0]) ||\r\n            ($(event.target).parents('[data-closable]')[0] === $element)) { // only close reveal when it's explicitly called\r\n          return this.close.apply(this);\r\n        }\r\n      },\r\n      'toggle.zf.trigger': this.toggle.bind(this),\r\n      'resizeme.zf.trigger': function() {\r\n        _this._updatePosition();\r\n      }\r\n    });\r\n\r\n    if (this.$anchor.length) {\r\n      this.$anchor.on('keydown.zf.reveal', function(e) {\r\n        if (e.which === 13 || e.which === 32) {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n          _this.open();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.options.closeOnClick && this.options.overlay) {\r\n      this.$overlay.off('.zf.reveal').on('click.zf.reveal', function(e) {\r\n        if (e.target === _this.$element[0] ||\r\n          $.contains(_this.$element[0], e.target) ||\r\n            !$.contains(document, e.target)) {\r\n              return;\r\n        }\r\n        _this.close();\r\n      });\r\n    }\r\n    if (this.options.deepLink) {\r\n      $(window).on(`popstate.zf.reveal:${this.id}`, this._handleState.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\r\n   * @private\r\n   */\r\n  _handleState(e) {\r\n    if(window.location.hash === ( '#' + this.id) && !this.isActive){ this.open(); }\r\n    else{ this.close(); }\r\n  }\r\n\r\n\r\n  /**\r\n   * Opens the modal controlled by `this.$anchor`, and closes all others by default.\r\n   * @function\r\n   * @fires Reveal#closeme\r\n   * @fires Reveal#open\r\n   */\r\n  open() {\r\n    if (this.options.deepLink) {\r\n      var hash = `#${this.id}`;\r\n\r\n      if (window.history.pushState) {\r\n        window.history.pushState(null, null, hash);\r\n      } else {\r\n        window.location.hash = hash;\r\n      }\r\n    }\r\n\r\n    this.isActive = true;\r\n\r\n    // Make elements invisible, but remove display: none so we can get size and positioning\r\n    this.$element\r\n        .css({ 'visibility': 'hidden' })\r\n        .show()\r\n        .scrollTop(0);\r\n    if (this.options.overlay) {\r\n      this.$overlay.css({'visibility': 'hidden'}).show();\r\n    }\r\n\r\n    this._updatePosition();\r\n\r\n    this.$element\r\n      .hide()\r\n      .css({ 'visibility': '' });\r\n\r\n    if(this.$overlay) {\r\n      this.$overlay.css({'visibility': ''}).hide();\r\n      if(this.$element.hasClass('fast')) {\r\n        this.$overlay.addClass('fast');\r\n      } else if (this.$element.hasClass('slow')) {\r\n        this.$overlay.addClass('slow');\r\n      }\r\n    }\r\n\r\n\r\n    if (!this.options.multipleOpened) {\r\n      /**\r\n       * Fires immediately before the modal opens.\r\n       * Closes any other modals that are currently open\r\n       * @event Reveal#closeme\r\n       */\r\n      this.$element.trigger('closeme.zf.reveal', this.id);\r\n    }\r\n\r\n    var _this = this;\r\n\r\n    function addRevealOpenClasses() {\r\n      if (_this.isMobile) {\r\n        if(!_this.originalScrollPos) {\r\n          _this.originalScrollPos = window.pageYOffset;\r\n        }\r\n        $('html, body').addClass('is-reveal-open');\r\n      }\r\n      else {\r\n        $('body').addClass('is-reveal-open');\r\n      }\r\n    }\r\n    // Motion UI method of reveal\r\n    if (this.options.animationIn) {\r\n      function afterAnimation(){\r\n        _this.$element\r\n          .attr({\r\n            'aria-hidden': false,\r\n            'tabindex': -1\r\n          })\r\n          .focus();\r\n        addRevealOpenClasses();\r\n        Foundation.Keyboard.trapFocus(_this.$element);\r\n      }\r\n      if (this.options.overlay) {\r\n        Foundation.Motion.animateIn(this.$overlay, 'fade-in');\r\n      }\r\n      Foundation.Motion.animateIn(this.$element, this.options.animationIn, () => {\r\n        if(this.$element) { // protect against object having been removed\r\n          this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\r\n          afterAnimation();\r\n        }\r\n      });\r\n    }\r\n    // jQuery method of reveal\r\n    else {\r\n      if (this.options.overlay) {\r\n        this.$overlay.show(0);\r\n      }\r\n      this.$element.show(this.options.showDelay);\r\n    }\r\n\r\n    // handle accessibility\r\n    this.$element\r\n      .attr({\r\n        'aria-hidden': false,\r\n        'tabindex': -1\r\n      })\r\n      .focus();\r\n    Foundation.Keyboard.trapFocus(this.$element);\r\n\r\n    /**\r\n     * Fires when the modal has successfully opened.\r\n     * @event Reveal#open\r\n     */\r\n    this.$element.trigger('open.zf.reveal');\r\n\r\n    addRevealOpenClasses();\r\n\r\n    setTimeout(() => {\r\n      this._extraHandlers();\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * Adds extra event handlers for the body and window if necessary.\r\n   * @private\r\n   */\r\n  _extraHandlers() {\r\n    var _this = this;\r\n    if(!this.$element) { return; } // If we're in the middle of cleanup, don't freak out\r\n    this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\r\n\r\n    if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\r\n      $('body').on('click.zf.reveal', function(e) {\r\n        if (e.target === _this.$element[0] ||\r\n          $.contains(_this.$element[0], e.target) ||\r\n            !$.contains(document, e.target)) { return; }\r\n        _this.close();\r\n      });\r\n    }\r\n\r\n    if (this.options.closeOnEsc) {\r\n      $(window).on('keydown.zf.reveal', function(e) {\r\n        Foundation.Keyboard.handleKey(e, 'Reveal', {\r\n          close: function() {\r\n            if (_this.options.closeOnEsc) {\r\n              _this.close();\r\n              _this.$anchor.focus();\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    // lock focus within modal while tabbing\r\n    this.$element.on('keydown.zf.reveal', function(e) {\r\n      var $target = $(this);\r\n      // handle keyboard event with keyboard util\r\n      Foundation.Keyboard.handleKey(e, 'Reveal', {\r\n        open: function() {\r\n          if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\r\n            setTimeout(function() { // set focus back to anchor if close button has been activated\r\n              _this.$anchor.focus();\r\n            }, 1);\r\n          } else if ($target.is(_this.focusableElements)) { // dont't trigger if acual element has focus (i.e. inputs, links, ...)\r\n            _this.open();\r\n          }\r\n        },\r\n        close: function() {\r\n          if (_this.options.closeOnEsc) {\r\n            _this.close();\r\n            _this.$anchor.focus();\r\n          }\r\n        },\r\n        handled: function(preventDefault) {\r\n          if (preventDefault) {\r\n            e.preventDefault();\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Closes the modal.\r\n   * @function\r\n   * @fires Reveal#closed\r\n   */\r\n  close() {\r\n    if (!this.isActive || !this.$element.is(':visible')) {\r\n      return false;\r\n    }\r\n    var _this = this;\r\n\r\n    // Motion UI method of hiding\r\n    if (this.options.animationOut) {\r\n      if (this.options.overlay) {\r\n        Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\r\n      }\r\n      else {\r\n        finishUp();\r\n      }\r\n\r\n      Foundation.Motion.animateOut(this.$element, this.options.animationOut);\r\n    }\r\n    // jQuery method of hiding\r\n    else {\r\n\r\n      this.$element.hide(this.options.hideDelay);\r\n\r\n      if (this.options.overlay) {\r\n        this.$overlay.hide(0, finishUp);\r\n      }\r\n      else {\r\n        finishUp();\r\n      }\r\n    }\r\n\r\n    // Conditionals to remove extra event listeners added on open\r\n    if (this.options.closeOnEsc) {\r\n      $(window).off('keydown.zf.reveal');\r\n    }\r\n\r\n    if (!this.options.overlay && this.options.closeOnClick) {\r\n      $('body').off('click.zf.reveal');\r\n    }\r\n\r\n    this.$element.off('keydown.zf.reveal');\r\n\r\n    function finishUp() {\r\n      if (_this.isMobile) {\r\n        if ($('.reveal:visible').length === 0) {\r\n          $('html, body').removeClass('is-reveal-open');\r\n        }\r\n        if(_this.originalScrollPos) {\r\n          $('body').scrollTop(_this.originalScrollPos);\r\n          _this.originalScrollPos = null;\r\n        }\r\n      }\r\n      else {\r\n        if ($('.reveal:visible').length  === 0) {\r\n          $('body').removeClass('is-reveal-open');\r\n        }\r\n      }\r\n\r\n\r\n      Foundation.Keyboard.releaseFocus(_this.$element);\r\n\r\n      _this.$element.attr('aria-hidden', true);\r\n\r\n      /**\r\n      * Fires when the modal is done closing.\r\n      * @event Reveal#closed\r\n      */\r\n      _this.$element.trigger('closed.zf.reveal');\r\n    }\r\n\r\n    /**\r\n    * Resets the modal content\r\n    * This prevents a running video to keep going in the background\r\n    */\r\n    if (this.options.resetOnClose) {\r\n      this.$element.html(this.$element.html());\r\n    }\r\n\r\n    this.isActive = false;\r\n     if (_this.options.deepLink) {\r\n       if (window.history.replaceState) {\r\n         window.history.replaceState('', document.title, window.location.href.replace(`#${this.id}`, ''));\r\n       } else {\r\n         window.location.hash = '';\r\n       }\r\n     }\r\n  }\r\n\r\n  /**\r\n   * Toggles the open/closed state of a modal.\r\n   * @function\r\n   */\r\n  toggle() {\r\n    if (this.isActive) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Destroys an instance of a modal.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    if (this.options.overlay) {\r\n      this.$element.appendTo($(this.options.appendTo)); // move $element outside of $overlay to prevent error unregisterPlugin()\r\n      this.$overlay.hide().off().remove();\r\n    }\r\n    this.$element.hide().off();\r\n    this.$anchor.off('.zf');\r\n    $(window).off(`.zf.reveal:${this.id}`);\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  };\r\n}\r\n\r\nReveal.defaults = {\r\n  /**\r\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  animationIn: '',\r\n  /**\r\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  animationOut: '',\r\n  /**\r\n   * Time, in ms, to delay the opening of a modal after a click if no animation used.\r\n   * @option\r\n   * @type {number}\r\n   * @default 0\r\n   */\r\n  showDelay: 0,\r\n  /**\r\n   * Time, in ms, to delay the closing of a modal after a click if no animation used.\r\n   * @option\r\n   * @type {number}\r\n   * @default 0\r\n   */\r\n  hideDelay: 0,\r\n  /**\r\n   * Allows a click on the body/overlay to close the modal.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  closeOnClick: true,\r\n  /**\r\n   * Allows the modal to close if the user presses the `ESCAPE` key.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  closeOnEsc: true,\r\n  /**\r\n   * If true, allows multiple modals to be displayed at once.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  multipleOpened: false,\r\n  /**\r\n   * Distance, in pixels, the modal should push down from the top of the screen.\r\n   * @option\r\n   * @type {number|string}\r\n   * @default auto\r\n   */\r\n  vOffset: 'auto',\r\n  /**\r\n   * Distance, in pixels, the modal should push in from the side of the screen.\r\n   * @option\r\n   * @type {number|string}\r\n   * @default auto\r\n   */\r\n  hOffset: 'auto',\r\n  /**\r\n   * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  fullScreen: false,\r\n  /**\r\n   * Percentage of screen height the modal should push up from the bottom of the view.\r\n   * @option\r\n   * @type {number}\r\n   * @default 10\r\n   */\r\n  btmOffsetPct: 10,\r\n  /**\r\n   * Allows the modal to generate an overlay div, which will cover the view when modal opens.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  overlay: true,\r\n  /**\r\n   * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  resetOnClose: false,\r\n  /**\r\n   * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  deepLink: false,\r\n    /**\r\n   * Allows the modal to append to custom div.\r\n   * @option\r\n   * @type {string}\r\n   * @default \"body\"\r\n   */\r\n  appendTo: \"body\"\r\n\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Reveal, 'Reveal');\r\n\r\nfunction iPhoneSniff() {\r\n  return /iP(ad|hone|od).*OS/.test(window.navigator.userAgent);\r\n}\r\n\r\nfunction androidSniff() {\r\n  return /Android/.test(window.navigator.userAgent);\r\n}\r\n\r\nfunction mobileSniff() {\r\n  return iPhoneSniff() || androidSniff();\r\n}\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Slider module.\r\n * @module foundation.slider\r\n * @requires foundation.util.motion\r\n * @requires foundation.util.triggers\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.touch\r\n */\r\n\r\nclass Slider {\r\n  /**\r\n   * Creates a new instance of a slider control.\r\n   * @class\r\n   * @param {jQuery} element - jQuery object to make into a slider control.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Slider');\r\n    Foundation.Keyboard.register('Slider', {\r\n      'ltr': {\r\n        'ARROW_RIGHT': 'increase',\r\n        'ARROW_UP': 'increase',\r\n        'ARROW_DOWN': 'decrease',\r\n        'ARROW_LEFT': 'decrease',\r\n        'SHIFT_ARROW_RIGHT': 'increase_fast',\r\n        'SHIFT_ARROW_UP': 'increase_fast',\r\n        'SHIFT_ARROW_DOWN': 'decrease_fast',\r\n        'SHIFT_ARROW_LEFT': 'decrease_fast'\r\n      },\r\n      'rtl': {\r\n        'ARROW_LEFT': 'increase',\r\n        'ARROW_RIGHT': 'decrease',\r\n        'SHIFT_ARROW_LEFT': 'increase_fast',\r\n        'SHIFT_ARROW_RIGHT': 'decrease_fast'\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    this.inputs = this.$element.find('input');\r\n    this.handles = this.$element.find('[data-slider-handle]');\r\n\r\n    this.$handle = this.handles.eq(0);\r\n    this.$input = this.inputs.length ? this.inputs.eq(0) : $(`#${this.$handle.attr('aria-controls')}`);\r\n    this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\r\n\r\n    var isDbl = false,\r\n        _this = this;\r\n    if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\r\n      this.options.disabled = true;\r\n      this.$element.addClass(this.options.disabledClass);\r\n    }\r\n    if (!this.inputs.length) {\r\n      this.inputs = $().add(this.$input);\r\n      this.options.binding = true;\r\n    }\r\n\r\n    this._setInitAttr(0);\r\n\r\n    if (this.handles[1]) {\r\n      this.options.doubleSided = true;\r\n      this.$handle2 = this.handles.eq(1);\r\n      this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $(`#${this.$handle2.attr('aria-controls')}`);\r\n\r\n      if (!this.inputs[1]) {\r\n        this.inputs = this.inputs.add(this.$input2);\r\n      }\r\n      isDbl = true;\r\n\r\n      // this.$handle.triggerHandler('click.zf.slider');\r\n      this._setInitAttr(1);\r\n    }\r\n\r\n    // Set handle positions\r\n    this.setHandles();\r\n\r\n    this._events();\r\n  }\r\n\r\n  setHandles() {\r\n    if(this.handles[1]) {\r\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true, () => {\r\n        this._setHandlePos(this.$handle2, this.inputs.eq(1).val(), true);\r\n      });\r\n    } else {\r\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true);\r\n    }\r\n  }\r\n\r\n  _reflow() {\r\n    this.setHandles();\r\n  }\r\n  /**\r\n  * @function\r\n  * @private\r\n  * @param {Number} value - floating point (the value) to be transformed using to a relative position on the slider (the inverse of _value)\r\n  */\r\n  _pctOfBar(value) {\r\n    var pctOfBar = percent(value - this.options.start, this.options.end - this.options.start)\r\n\r\n    switch(this.options.positionValueFunction) {\r\n    case \"pow\":\r\n      pctOfBar = this._logTransform(pctOfBar);\r\n      break;\r\n    case \"log\":\r\n      pctOfBar = this._powTransform(pctOfBar);\r\n      break;\r\n    }\r\n\r\n    return pctOfBar.toFixed(2)\r\n  }\r\n\r\n  /**\r\n  * @function\r\n  * @private\r\n  * @param {Number} pctOfBar - floating point, the relative position of the slider (typically between 0-1) to be transformed to a value\r\n  */\r\n  _value(pctOfBar) {\r\n    switch(this.options.positionValueFunction) {\r\n    case \"pow\":\r\n      pctOfBar = this._powTransform(pctOfBar);\r\n      break;\r\n    case \"log\":\r\n      pctOfBar = this._logTransform(pctOfBar);\r\n      break;\r\n    }\r\n    var value = (this.options.end - this.options.start) * pctOfBar + this.options.start;\r\n\r\n    return value\r\n  }\r\n\r\n  /**\r\n  * @function\r\n  * @private\r\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the log function\r\n  */\r\n  _logTransform(value) {\r\n    return baseLog(this.options.nonLinearBase, ((value*(this.options.nonLinearBase-1))+1))\r\n  }\r\n\r\n  /**\r\n  * @function\r\n  * @private\r\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the power function\r\n  */\r\n  _powTransform(value) {\r\n    return (Math.pow(this.options.nonLinearBase, value) - 1) / (this.options.nonLinearBase - 1)\r\n  }\r\n\r\n  /**\r\n   * Sets the position of the selected handle and fill bar.\r\n   * @function\r\n   * @private\r\n   * @param {jQuery} $hndl - the selected handle to move.\r\n   * @param {Number} location - floating point between the start and end values of the slider bar.\r\n   * @param {Function} cb - callback function to fire on completion.\r\n   * @fires Slider#moved\r\n   * @fires Slider#changed\r\n   */\r\n  _setHandlePos($hndl, location, noInvert, cb) {\r\n    // don't move if the slider has been disabled since its initialization\r\n    if (this.$element.hasClass(this.options.disabledClass)) {\r\n      return;\r\n    }\r\n    //might need to alter that slightly for bars that will have odd number selections.\r\n    location = parseFloat(location);//on input change events, convert string to number...grumble.\r\n\r\n    // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\r\n    if (location < this.options.start) { location = this.options.start; }\r\n    else if (location > this.options.end) { location = this.options.end; }\r\n\r\n    var isDbl = this.options.doubleSided;\r\n\r\n    if (isDbl) { //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\r\n      if (this.handles.index($hndl) === 0) {\r\n        var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\r\n        location = location >= h2Val ? h2Val - this.options.step : location;\r\n      } else {\r\n        var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\r\n        location = location <= h1Val ? h1Val + this.options.step : location;\r\n      }\r\n    }\r\n\r\n    //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\r\n    //for click and drag events, it's weird due to the scale(-1, 1) css property\r\n    if (this.options.vertical && !noInvert) {\r\n      location = this.options.end - location;\r\n    }\r\n\r\n    var _this = this,\r\n        vert = this.options.vertical,\r\n        hOrW = vert ? 'height' : 'width',\r\n        lOrT = vert ? 'top' : 'left',\r\n        handleDim = $hndl[0].getBoundingClientRect()[hOrW],\r\n        elemDim = this.$element[0].getBoundingClientRect()[hOrW],\r\n        //percentage of bar min/max value based on click or drag point\r\n        pctOfBar = this._pctOfBar(location),\r\n        //number of actual pixels to shift the handle, based on the percentage obtained above\r\n        pxToMove = (elemDim - handleDim) * pctOfBar,\r\n        //percentage of bar to shift the handle\r\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\r\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\r\n        location = parseFloat(location.toFixed(this.options.decimal));\r\n        // declare empty object for css adjustments, only used with 2 handled-sliders\r\n    var css = {};\r\n\r\n    this._setValues($hndl, location);\r\n\r\n    // TODO update to calculate based on values set to respective inputs??\r\n    if (isDbl) {\r\n      var isLeftHndl = this.handles.index($hndl) === 0,\r\n          //empty variable, will be used for min-height/width for fill bar\r\n          dim,\r\n          //percentage w/h of the handle compared to the slider bar\r\n          handlePct =  ~~(percent(handleDim, elemDim) * 100);\r\n      //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\r\n      if (isLeftHndl) {\r\n        //left or top percentage value to apply to the fill bar.\r\n        css[lOrT] = `${movement}%`;\r\n        //calculate the new min-height/width for the fill bar.\r\n        dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\r\n        //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\r\n        //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\r\n        if (cb && typeof cb === 'function') { cb(); }//this is only needed for the initialization of 2 handled sliders\r\n      } else {\r\n        //just caching the value of the left/bottom handle's left/top property\r\n        var handlePos = parseFloat(this.$handle[0].style[lOrT]);\r\n        //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\r\n        //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\r\n        dim = movement - (isNaN(handlePos) ? (this.options.initialStart - this.options.start)/((this.options.end-this.options.start)/100) : handlePos) + handlePct;\r\n      }\r\n      // assign the min-height/width to our css object\r\n      css[`min-${hOrW}`] = `${dim}%`;\r\n    }\r\n\r\n    this.$element.one('finished.zf.animate', function() {\r\n                    /**\r\n                     * Fires when the handle is done moving.\r\n                     * @event Slider#moved\r\n                     */\r\n                    _this.$element.trigger('moved.zf.slider', [$hndl]);\r\n                });\r\n\r\n    //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\r\n    var moveTime = this.$element.data('dragging') ? 1000/60 : this.options.moveTime;\r\n\r\n    Foundation.Move(moveTime, $hndl, function() {\r\n      // adjusting the left/top property of the handle, based on the percentage calculated above\r\n      // if movement isNaN, that is because the slider is hidden and we cannot determine handle width,\r\n      // fall back to next best guess.\r\n      if (isNaN(movement)) {\r\n        $hndl.css(lOrT, `${pctOfBar * 100}%`);\r\n      }\r\n      else {\r\n        $hndl.css(lOrT, `${movement}%`);\r\n      }\r\n\r\n      if (!_this.options.doubleSided) {\r\n        //if single-handled, a simple method to expand the fill bar\r\n        _this.$fill.css(hOrW, `${pctOfBar * 100}%`);\r\n      } else {\r\n        //otherwise, use the css object we created above\r\n        _this.$fill.css(css);\r\n      }\r\n    });\r\n\r\n\r\n    /**\r\n     * Fires when the value has not been change for a given time.\r\n     * @event Slider#changed\r\n     */\r\n    clearTimeout(_this.timeout);\r\n    _this.timeout = setTimeout(function(){\r\n      _this.$element.trigger('changed.zf.slider', [$hndl]);\r\n    }, _this.options.changedDelay);\r\n  }\r\n\r\n  /**\r\n   * Sets the initial attribute for the slider element.\r\n   * @function\r\n   * @private\r\n   * @param {Number} idx - index of the current handle/input to use.\r\n   */\r\n  _setInitAttr(idx) {\r\n    var initVal = (idx === 0 ? this.options.initialStart : this.options.initialEnd)\r\n    var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\r\n    this.inputs.eq(idx).attr({\r\n      'id': id,\r\n      'max': this.options.end,\r\n      'min': this.options.start,\r\n      'step': this.options.step\r\n    });\r\n    this.inputs.eq(idx).val(initVal);\r\n    this.handles.eq(idx).attr({\r\n      'role': 'slider',\r\n      'aria-controls': id,\r\n      'aria-valuemax': this.options.end,\r\n      'aria-valuemin': this.options.start,\r\n      'aria-valuenow': initVal,\r\n      'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\r\n      'tabindex': 0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the input and `aria-valuenow` values for the slider element.\r\n   * @function\r\n   * @private\r\n   * @param {jQuery} $handle - the currently selected handle.\r\n   * @param {Number} val - floating point of the new value.\r\n   */\r\n  _setValues($handle, val) {\r\n    var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\r\n    this.inputs.eq(idx).val(val);\r\n    $handle.attr('aria-valuenow', val);\r\n  }\r\n\r\n  /**\r\n   * Handles events on the slider element.\r\n   * Calculates the new location of the current handle.\r\n   * If there are two handles and the bar was clicked, it determines which handle to move.\r\n   * @function\r\n   * @private\r\n   * @param {Object} e - the `event` object passed from the listener.\r\n   * @param {jQuery} $handle - the current handle to calculate for, if selected.\r\n   * @param {Number} val - floating point number for the new value of the slider.\r\n   * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\r\n   */\r\n  _handleEvent(e, $handle, val) {\r\n    var value, hasVal;\r\n    if (!val) {//click or drag events\r\n      e.preventDefault();\r\n      var _this = this,\r\n          vertical = this.options.vertical,\r\n          param = vertical ? 'height' : 'width',\r\n          direction = vertical ? 'top' : 'left',\r\n          eventOffset = vertical ? e.pageY : e.pageX,\r\n          halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\r\n          barDim = this.$element[0].getBoundingClientRect()[param],\r\n          windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\r\n\r\n\r\n      var elemOffset = this.$element.offset()[direction];\r\n\r\n      // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\r\n      // best way to guess this is simulated is if clientY == pageY\r\n      if (e.clientY === e.pageY) { eventOffset = eventOffset + windowScroll; }\r\n      var eventFromBar = eventOffset - elemOffset;\r\n      var barXY;\r\n      if (eventFromBar < 0) {\r\n        barXY = 0;\r\n      } else if (eventFromBar > barDim) {\r\n        barXY = barDim;\r\n      } else {\r\n        barXY = eventFromBar;\r\n      }\r\n      var offsetPct = percent(barXY, barDim);\r\n\r\n      value = this._value(offsetPct);\r\n\r\n      // turn everything around for RTL, yay math!\r\n      if (Foundation.rtl() && !this.options.vertical) {value = this.options.end - value;}\r\n\r\n      value = _this._adjustValue(null, value);\r\n      //boolean flag for the setHandlePos fn, specifically for vertical sliders\r\n      hasVal = false;\r\n\r\n      if (!$handle) {//figure out which handle it is, pass it to the next function.\r\n        var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\r\n            secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\r\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\r\n      }\r\n\r\n    } else {//change event on input\r\n      value = this._adjustValue(null, val);\r\n      hasVal = true;\r\n    }\r\n\r\n    this._setHandlePos($handle, value, hasVal);\r\n  }\r\n\r\n  /**\r\n   * Adjustes value for handle in regard to step value. returns adjusted value\r\n   * @function\r\n   * @private\r\n   * @param {jQuery} $handle - the selected handle.\r\n   * @param {Number} value - value to adjust. used if $handle is falsy\r\n   */\r\n  _adjustValue($handle, value) {\r\n    var val,\r\n      step = this.options.step,\r\n      div = parseFloat(step/2),\r\n      left, prev_val, next_val;\r\n    if (!!$handle) {\r\n      val = parseFloat($handle.attr('aria-valuenow'));\r\n    }\r\n    else {\r\n      val = value;\r\n    }\r\n    left = val % step;\r\n    prev_val = val - left;\r\n    next_val = prev_val + step;\r\n    if (left === 0) {\r\n      return val;\r\n    }\r\n    val = val >= prev_val + div ? next_val : prev_val;\r\n    return val;\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners to the slider elements.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    this._eventsForHandle(this.$handle);\r\n    if(this.handles[1]) {\r\n      this._eventsForHandle(this.$handle2);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Adds event listeners a particular handle\r\n   * @function\r\n   * @private\r\n   * @param {jQuery} $handle - the current handle to apply listeners to.\r\n   */\r\n  _eventsForHandle($handle) {\r\n    var _this = this,\r\n        curHandle,\r\n        timer;\r\n\r\n      this.inputs.off('change.zf.slider').on('change.zf.slider', function(e) {\r\n        var idx = _this.inputs.index($(this));\r\n        _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\r\n      });\r\n\r\n      if (this.options.clickSelect) {\r\n        this.$element.off('click.zf.slider').on('click.zf.slider', function(e) {\r\n          if (_this.$element.data('dragging')) { return false; }\r\n\r\n          if (!$(e.target).is('[data-slider-handle]')) {\r\n            if (_this.options.doubleSided) {\r\n              _this._handleEvent(e);\r\n            } else {\r\n              _this._handleEvent(e, _this.$handle);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n    if (this.options.draggable) {\r\n      this.handles.addTouch();\r\n\r\n      var $body = $('body');\r\n      $handle\r\n        .off('mousedown.zf.slider')\r\n        .on('mousedown.zf.slider', function(e) {\r\n          $handle.addClass('is-dragging');\r\n          _this.$fill.addClass('is-dragging');//\r\n          _this.$element.data('dragging', true);\r\n\r\n          curHandle = $(e.currentTarget);\r\n\r\n          $body.on('mousemove.zf.slider', function(e) {\r\n            e.preventDefault();\r\n            _this._handleEvent(e, curHandle);\r\n\r\n          }).on('mouseup.zf.slider', function(e) {\r\n            _this._handleEvent(e, curHandle);\r\n\r\n            $handle.removeClass('is-dragging');\r\n            _this.$fill.removeClass('is-dragging');\r\n            _this.$element.data('dragging', false);\r\n\r\n            $body.off('mousemove.zf.slider mouseup.zf.slider');\r\n          });\r\n      })\r\n      // prevent events triggered by touch\r\n      .on('selectstart.zf.slider touchmove.zf.slider', function(e) {\r\n        e.preventDefault();\r\n      });\r\n    }\r\n\r\n    $handle.off('keydown.zf.slider').on('keydown.zf.slider', function(e) {\r\n      var _$handle = $(this),\r\n          idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\r\n          oldValue = parseFloat(_this.inputs.eq(idx).val()),\r\n          newValue;\r\n\r\n      // handle keyboard event with keyboard util\r\n      Foundation.Keyboard.handleKey(e, 'Slider', {\r\n        decrease: function() {\r\n          newValue = oldValue - _this.options.step;\r\n        },\r\n        increase: function() {\r\n          newValue = oldValue + _this.options.step;\r\n        },\r\n        decrease_fast: function() {\r\n          newValue = oldValue - _this.options.step * 10;\r\n        },\r\n        increase_fast: function() {\r\n          newValue = oldValue + _this.options.step * 10;\r\n        },\r\n        handled: function() { // only set handle pos when event was handled specially\r\n          e.preventDefault();\r\n          _this._setHandlePos(_$handle, newValue, true);\r\n        }\r\n      });\r\n      /*if (newValue) { // if pressed key has special function, update value\r\n        e.preventDefault();\r\n        _this._setHandlePos(_$handle, newValue);\r\n      }*/\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Destroys the slider plugin.\r\n   */\r\n  destroy() {\r\n    this.handles.off('.zf.slider');\r\n    this.inputs.off('.zf.slider');\r\n    this.$element.off('.zf.slider');\r\n\r\n    clearTimeout(this.timeout);\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nSlider.defaults = {\r\n  /**\r\n   * Minimum value for the slider scale.\r\n   * @option\r\n   * @type {number}\r\n   * @default 0\r\n   */\r\n  start: 0,\r\n  /**\r\n   * Maximum value for the slider scale.\r\n   * @option\r\n   * @type {number}\r\n   * @default 100\r\n   */\r\n  end: 100,\r\n  /**\r\n   * Minimum value change per change event.\r\n   * @option\r\n   * @type {number}\r\n   * @default 1\r\n   */\r\n  step: 1,\r\n  /**\r\n   * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\r\n   * @option\r\n   * @type {number}\r\n   * @default 0\r\n   */\r\n  initialStart: 0,\r\n  /**\r\n   * Value at which the right handle/second input should be set to on initialization.\r\n   * @option\r\n   * @type {number}\r\n   * @default 100\r\n   */\r\n  initialEnd: 100,\r\n  /**\r\n   * Allows the input to be located outside the container and visible. Set to by the JS\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  binding: false,\r\n  /**\r\n   * Allows the user to click/tap on the slider bar to select a value.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  clickSelect: true,\r\n  /**\r\n   * Set to true and use the `vertical` class to change alignment to vertical.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  vertical: false,\r\n  /**\r\n   * Allows the user to drag the slider handle(s) to select a value.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  draggable: true,\r\n  /**\r\n   * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  disabled: false,\r\n  /**\r\n   * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  doubleSided: false,\r\n  /**\r\n   * Potential future feature.\r\n   */\r\n  // steps: 100,\r\n  /**\r\n   * Number of decimal places the plugin should go to for floating point precision.\r\n   * @option\r\n   * @type {number}\r\n   * @default 2\r\n   */\r\n  decimal: 2,\r\n  /**\r\n   * Time delay for dragged elements.\r\n   */\r\n  // dragDelay: 0,\r\n  /**\r\n   * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\r\n   * @option\r\n   * @type {number}\r\n   * @default 200\r\n   */\r\n  moveTime: 200,//update this if changing the transition time in the sass\r\n  /**\r\n   * Class applied to disabled sliders.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'disabled'\r\n   */\r\n  disabledClass: 'disabled',\r\n  /**\r\n   * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  invertVertical: false,\r\n  /**\r\n   * Milliseconds before the `changed.zf-slider` event is triggered after value change.\r\n   * @option\r\n   * @type {number}\r\n   * @default 500\r\n   */\r\n  changedDelay: 500,\r\n  /**\r\n  * Basevalue for non-linear sliders\r\n  * @option\r\n  * @type {number}\r\n  * @default 5\r\n  */\r\n  nonLinearBase: 5,\r\n  /**\r\n  * Basevalue for non-linear sliders, possible values are: `'linear'`, `'pow'` & `'log'`. Pow and Log use the nonLinearBase setting.\r\n  * @option\r\n  * @type {string}\r\n  * @default 'linear'\r\n  */\r\n  positionValueFunction: 'linear',\r\n};\r\n\r\nfunction percent(frac, num) {\r\n  return (frac / num);\r\n}\r\nfunction absPosition($handle, dir, clickPos, param) {\r\n  return Math.abs(($handle.position()[dir] + ($handle[param]() / 2)) - clickPos);\r\n}\r\nfunction baseLog(base, value) {\r\n  return Math.log(value)/Math.log(base)\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Slider, 'Slider');\r\n\r\n}(jQuery);\r\n\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Sticky module.\r\n * @module foundation.sticky\r\n * @requires foundation.util.triggers\r\n * @requires foundation.util.mediaQuery\r\n */\r\n\r\nclass Sticky {\r\n  /**\r\n   * Creates a new instance of a sticky thing.\r\n   * @class\r\n   * @param {jQuery} element - jQuery object to make sticky.\r\n   * @param {Object} options - options object passed when creating the element programmatically.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Sticky');\r\n  }\r\n\r\n  /**\r\n   * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var $parent = this.$element.parent('[data-sticky-container]'),\r\n        id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\r\n        _this = this;\r\n\r\n    if (!$parent.length) {\r\n      this.wasWrapped = true;\r\n    }\r\n    this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\r\n    this.$container.addClass(this.options.containerClass);\r\n\r\n    this.$element.addClass(this.options.stickyClass).attr({ 'data-resize': id, 'data-mutate': id });\r\n    if (this.options.anchor !== '') {\r\n        $('#' + _this.options.anchor).attr({ 'data-mutate': id });\r\n    }\r\n\r\n    this.scrollCount = this.options.checkEvery;\r\n    this.isStuck = false;\r\n    $(window).one('load.zf.sticky', function(){\r\n      //We calculate the container height to have correct values for anchor points offset calculation.\r\n      _this.containerHeight = _this.$element.css(\"display\") == \"none\" ? 0 : _this.$element[0].getBoundingClientRect().height;\r\n      _this.$container.css('height', _this.containerHeight);\r\n      _this.elemHeight = _this.containerHeight;\r\n      if(_this.options.anchor !== ''){\r\n        _this.$anchor = $('#' + _this.options.anchor);\r\n      }else{\r\n        _this._parsePoints();\r\n      }\r\n\r\n      _this._setSizes(function(){\r\n        var scroll = window.pageYOffset;\r\n        _this._calc(false, scroll);\r\n        //Unstick the element will ensure that proper classes are set.\r\n        if (!_this.isStuck) {\r\n          _this._removeSticky((scroll >= _this.topPoint) ? false : true);\r\n        }\r\n      });\r\n      _this._events(id.split('-').reverse().join('-'));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\r\n   * @function\r\n   * @private\r\n   */\r\n  _parsePoints() {\r\n    var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\r\n        btm = this.options.btmAnchor== \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\r\n        pts = [top, btm],\r\n        breaks = {};\r\n    for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\r\n      var pt;\r\n      if (typeof pts[i] === 'number') {\r\n        pt = pts[i];\r\n      } else {\r\n        var place = pts[i].split(':'),\r\n            anchor = $(`#${place[0]}`);\r\n\r\n        pt = anchor.offset().top;\r\n        if (place[1] && place[1].toLowerCase() === 'bottom') {\r\n          pt += anchor[0].getBoundingClientRect().height;\r\n        }\r\n      }\r\n      breaks[i] = pt;\r\n    }\r\n\r\n\r\n    this.points = breaks;\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers for the scrolling element.\r\n   * @private\r\n   * @param {String} id - psuedo-random id for unique scroll event listener.\r\n   */\r\n  _events(id) {\r\n    var _this = this,\r\n        scrollListener = this.scrollListener = `scroll.zf.${id}`;\r\n    if (this.isOn) { return; }\r\n    if (this.canStick) {\r\n      this.isOn = true;\r\n      $(window).off(scrollListener)\r\n               .on(scrollListener, function(e) {\r\n                 if (_this.scrollCount === 0) {\r\n                   _this.scrollCount = _this.options.checkEvery;\r\n                   _this._setSizes(function() {\r\n                     _this._calc(false, window.pageYOffset);\r\n                   });\r\n                 } else {\r\n                   _this.scrollCount--;\r\n                   _this._calc(false, window.pageYOffset);\r\n                 }\r\n              });\r\n    }\r\n\r\n    this.$element.off('resizeme.zf.trigger')\r\n                 .on('resizeme.zf.trigger', function(e, el) {\r\n                    _this._eventsHandler(id);\r\n    });\r\n\r\n    this.$element.on('mutateme.zf.trigger', function (e, el) {\r\n        _this._eventsHandler(id);\r\n    });\r\n\r\n    if(this.$anchor) {\r\n      this.$anchor.on('mutateme.zf.trigger', function (e, el) {\r\n          _this._eventsHandler(id);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handler for events.\r\n   * @private\r\n   * @param {String} id - psuedo-random id for unique scroll event listener.\r\n   */\r\n  _eventsHandler(id) {\r\n       var _this = this,\r\n        scrollListener = this.scrollListener = `scroll.zf.${id}`;\r\n\r\n       _this._setSizes(function() {\r\n       _this._calc(false);\r\n       if (_this.canStick) {\r\n         if (!_this.isOn) {\r\n           _this._events(id);\r\n         }\r\n       } else if (_this.isOn) {\r\n         _this._pauseListeners(scrollListener);\r\n       }\r\n     });\r\n  }\r\n\r\n  /**\r\n   * Removes event handlers for scroll and change events on anchor.\r\n   * @fires Sticky#pause\r\n   * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\r\n   */\r\n  _pauseListeners(scrollListener) {\r\n    this.isOn = false;\r\n    $(window).off(scrollListener);\r\n\r\n    /**\r\n     * Fires when the plugin is paused due to resize event shrinking the view.\r\n     * @event Sticky#pause\r\n     * @private\r\n     */\r\n     this.$element.trigger('pause.zf.sticky');\r\n  }\r\n\r\n  /**\r\n   * Called on every `scroll` event and on `_init`\r\n   * fires functions based on booleans and cached values\r\n   * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\r\n   * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\r\n   */\r\n  _calc(checkSizes, scroll) {\r\n    if (checkSizes) { this._setSizes(); }\r\n\r\n    if (!this.canStick) {\r\n      if (this.isStuck) {\r\n        this._removeSticky(true);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (!scroll) { scroll = window.pageYOffset; }\r\n\r\n    if (scroll >= this.topPoint) {\r\n      if (scroll <= this.bottomPoint) {\r\n        if (!this.isStuck) {\r\n          this._setSticky();\r\n        }\r\n      } else {\r\n        if (this.isStuck) {\r\n          this._removeSticky(false);\r\n        }\r\n      }\r\n    } else {\r\n      if (this.isStuck) {\r\n        this._removeSticky(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Causes the $element to become stuck.\r\n   * Adds `position: fixed;`, and helper classes.\r\n   * @fires Sticky#stuckto\r\n   * @function\r\n   * @private\r\n   */\r\n  _setSticky() {\r\n    var _this = this,\r\n        stickTo = this.options.stickTo,\r\n        mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\r\n        notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\r\n        css = {};\r\n\r\n    css[mrgn] = `${this.options[mrgn]}em`;\r\n    css[stickTo] = 0;\r\n    css[notStuckTo] = 'auto';\r\n    this.isStuck = true;\r\n    this.$element.removeClass(`is-anchored is-at-${notStuckTo}`)\r\n                 .addClass(`is-stuck is-at-${stickTo}`)\r\n                 .css(css)\r\n                 /**\r\n                  * Fires when the $element has become `position: fixed;`\r\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\r\n                  * @event Sticky#stuckto\r\n                  */\r\n                 .trigger(`sticky.zf.stuckto:${stickTo}`);\r\n    this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function() {\r\n      _this._setSizes();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Causes the $element to become unstuck.\r\n   * Removes `position: fixed;`, and helper classes.\r\n   * Adds other helper classes.\r\n   * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\r\n   * @fires Sticky#unstuckfrom\r\n   * @private\r\n   */\r\n  _removeSticky(isTop) {\r\n    var stickTo = this.options.stickTo,\r\n        stickToTop = stickTo === 'top',\r\n        css = {},\r\n        anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\r\n        mrgn = stickToTop ? 'marginTop' : 'marginBottom',\r\n        notStuckTo = stickToTop ? 'bottom' : 'top',\r\n        topOrBottom = isTop ? 'top' : 'bottom';\r\n\r\n    css[mrgn] = 0;\r\n\r\n    css['bottom'] = 'auto';\r\n    if(isTop) {\r\n      css['top'] = 0;\r\n    } else {\r\n      css['top'] = anchorPt;\r\n    }\r\n\r\n    this.isStuck = false;\r\n    this.$element.removeClass(`is-stuck is-at-${stickTo}`)\r\n                 .addClass(`is-anchored is-at-${topOrBottom}`)\r\n                 .css(css)\r\n                 /**\r\n                  * Fires when the $element has become anchored.\r\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\r\n                  * @event Sticky#unstuckfrom\r\n                  */\r\n                 .trigger(`sticky.zf.unstuckfrom:${topOrBottom}`);\r\n  }\r\n\r\n  /**\r\n   * Sets the $element and $container sizes for plugin.\r\n   * Calls `_setBreakPoints`.\r\n   * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\r\n   * @private\r\n   */\r\n  _setSizes(cb) {\r\n    this.canStick = Foundation.MediaQuery.is(this.options.stickyOn);\r\n    if (!this.canStick) {\r\n      if (cb && typeof cb === 'function') { cb(); }\r\n    }\r\n    var _this = this,\r\n        newElemWidth = this.$container[0].getBoundingClientRect().width,\r\n        comp = window.getComputedStyle(this.$container[0]),\r\n        pdngl = parseInt(comp['padding-left'], 10),\r\n        pdngr = parseInt(comp['padding-right'], 10);\r\n\r\n    if (this.$anchor && this.$anchor.length) {\r\n      this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\r\n    } else {\r\n      this._parsePoints();\r\n    }\r\n\r\n    this.$element.css({\r\n      'max-width': `${newElemWidth - pdngl - pdngr}px`\r\n    });\r\n\r\n    var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\r\n    if (this.$element.css(\"display\") == \"none\") {\r\n      newContainerHeight = 0;\r\n    }\r\n    this.containerHeight = newContainerHeight;\r\n    this.$container.css({\r\n      height: newContainerHeight\r\n    });\r\n    this.elemHeight = newContainerHeight;\r\n\r\n    if (!this.isStuck) {\r\n      if (this.$element.hasClass('is-at-bottom')) {\r\n        var anchorPt = (this.points ? this.points[1] - this.$container.offset().top : this.anchorHeight) - this.elemHeight;\r\n        this.$element.css('top', anchorPt);\r\n      }\r\n    }\r\n\r\n    this._setBreakPoints(newContainerHeight, function() {\r\n      if (cb && typeof cb === 'function') { cb(); }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\r\n   * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\r\n   * @param {Function} cb - optional callback function to be called on completion.\r\n   * @private\r\n   */\r\n  _setBreakPoints(elemHeight, cb) {\r\n    if (!this.canStick) {\r\n      if (cb && typeof cb === 'function') { cb(); }\r\n      else { return false; }\r\n    }\r\n    var mTop = emCalc(this.options.marginTop),\r\n        mBtm = emCalc(this.options.marginBottom),\r\n        topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\r\n        bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\r\n        // topPoint = this.$anchor.offset().top || this.points[0],\r\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\r\n        winHeight = window.innerHeight;\r\n\r\n    if (this.options.stickTo === 'top') {\r\n      topPoint -= mTop;\r\n      bottomPoint -= (elemHeight + mTop);\r\n    } else if (this.options.stickTo === 'bottom') {\r\n      topPoint -= (winHeight - (elemHeight + mBtm));\r\n      bottomPoint -= (winHeight - mBtm);\r\n    } else {\r\n      //this would be the stickTo: both option... tricky\r\n    }\r\n\r\n    this.topPoint = topPoint;\r\n    this.bottomPoint = bottomPoint;\r\n\r\n    if (cb && typeof cb === 'function') { cb(); }\r\n  }\r\n\r\n  /**\r\n   * Destroys the current sticky element.\r\n   * Resets the element to the top position first.\r\n   * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this._removeSticky(true);\r\n\r\n    this.$element.removeClass(`${this.options.stickyClass} is-anchored is-at-top`)\r\n                 .css({\r\n                   height: '',\r\n                   top: '',\r\n                   bottom: '',\r\n                   'max-width': ''\r\n                 })\r\n                 .off('resizeme.zf.trigger')\r\n                 .off('mutateme.zf.trigger');\r\n    if (this.$anchor && this.$anchor.length) {\r\n      this.$anchor.off('change.zf.sticky');\r\n    }\r\n    $(window).off(this.scrollListener);\r\n\r\n    if (this.wasWrapped) {\r\n      this.$element.unwrap();\r\n    } else {\r\n      this.$container.removeClass(this.options.containerClass)\r\n                     .css({\r\n                       height: ''\r\n                     });\r\n    }\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nSticky.defaults = {\r\n  /**\r\n   * Customizable container template. Add your own classes for styling and sizing.\r\n   * @option\r\n   * @type {string}\r\n   * @default '&lt;div data-sticky-container&gt;&lt;/div&gt;'\r\n   */\r\n  container: '<div data-sticky-container></div>',\r\n  /**\r\n   * Location in the view the element sticks to. Can be `'top'` or `'bottom'`.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'top'\r\n   */\r\n  stickTo: 'top',\r\n  /**\r\n   * If anchored to a single element, the id of that element.\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  anchor: '',\r\n  /**\r\n   * If using more than one element as anchor points, the id of the top anchor.\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  topAnchor: '',\r\n  /**\r\n   * If using more than one element as anchor points, the id of the bottom anchor.\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  btmAnchor: '',\r\n  /**\r\n   * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\r\n   * @option\r\n   * @type {number}\r\n   * @default 1\r\n   */\r\n  marginTop: 1,\r\n  /**\r\n   * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\r\n   * @option\r\n   * @type {number}\r\n   * @default 1\r\n   */\r\n  marginBottom: 1,\r\n  /**\r\n   * Breakpoint string that is the minimum screen size an element should become sticky.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'medium'\r\n   */\r\n  stickyOn: 'medium',\r\n  /**\r\n   * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'sticky'\r\n   */\r\n  stickyClass: 'sticky',\r\n  /**\r\n   * Class applied to sticky container. Foundation defaults to `sticky-container`.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'sticky-container'\r\n   */\r\n  containerClass: 'sticky-container',\r\n  /**\r\n   * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\r\n   * @option\r\n   * @type {number}\r\n   * @default -1\r\n   */\r\n  checkEvery: -1\r\n};\r\n\r\n/**\r\n * Helper function to calculate em values\r\n * @param Number {em} - number of em's to calculate into pixels\r\n */\r\nfunction emCalc(em) {\r\n  return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\r\n}\r\n\r\n// Window exports\r\nFoundation.plugin(Sticky, 'Sticky');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Tabs module.\r\n * @module foundation.tabs\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.timerAndImageLoader if tabs contain images\r\n */\r\n\r\nclass Tabs {\r\n  /**\r\n   * Creates a new instance of tabs.\r\n   * @class\r\n   * @fires Tabs#init\r\n   * @param {jQuery} element - jQuery object to make into tabs.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\r\n\r\n    this._init();\r\n    Foundation.registerPlugin(this, 'Tabs');\r\n    Foundation.Keyboard.register('Tabs', {\r\n      'ENTER': 'open',\r\n      'SPACE': 'open',\r\n      'ARROW_RIGHT': 'next',\r\n      'ARROW_UP': 'previous',\r\n      'ARROW_DOWN': 'next',\r\n      'ARROW_LEFT': 'previous'\r\n      // 'TAB': 'next',\r\n      // 'SHIFT_TAB': 'previous'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\r\n   * @private\r\n   */\r\n  _init() {\r\n    var _this = this;\r\n\r\n    this.$element.attr({'role': 'tablist'});\r\n    this.$tabTitles = this.$element.find(`.${this.options.linkClass}`);\r\n    this.$tabContent = $(`[data-tabs-content=\"${this.$element[0].id}\"]`);\r\n\r\n    this.$tabTitles.each(function(){\r\n      var $elem = $(this),\r\n          $link = $elem.find('a'),\r\n          isActive = $elem.hasClass(`${_this.options.linkActiveClass}`),\r\n          hash = $link[0].hash.slice(1),\r\n          linkId = $link[0].id ? $link[0].id : `${hash}-label`,\r\n          $tabContent = $(`#${hash}`);\r\n\r\n      $elem.attr({'role': 'presentation'});\r\n\r\n      $link.attr({\r\n        'role': 'tab',\r\n        'aria-controls': hash,\r\n        'aria-selected': isActive,\r\n        'id': linkId\r\n      });\r\n\r\n      $tabContent.attr({\r\n        'role': 'tabpanel',\r\n        'aria-hidden': !isActive,\r\n        'aria-labelledby': linkId\r\n      });\r\n\r\n      if(isActive && _this.options.autoFocus){\r\n        $(window).load(function() {\r\n          $('html, body').animate({ scrollTop: $elem.offset().top }, _this.options.deepLinkSmudgeDelay, () => {\r\n            $link.focus();\r\n          });\r\n        });\r\n      }\r\n    });\r\n    if(this.options.matchHeight) {\r\n      var $images = this.$tabContent.find('img');\r\n\r\n      if ($images.length) {\r\n        Foundation.onImagesLoaded($images, this._setHeight.bind(this));\r\n      } else {\r\n        this._setHeight();\r\n      }\r\n    }\r\n\r\n     //current context-bound function to open tabs on page load or history popstate\r\n    this._checkDeepLink = () => {\r\n      var anchor = window.location.hash;\r\n      //need a hash and a relevant anchor in this tabset\r\n      if(anchor.length) {\r\n        var $link = this.$element.find('[href$=\"'+anchor+'\"]');\r\n        if ($link.length) {\r\n          this.selectTab($(anchor), true);\r\n\r\n          //roll up a little to show the titles\r\n          if (this.options.deepLinkSmudge) {\r\n            var offset = this.$element.offset();\r\n            $('html, body').animate({ scrollTop: offset.top }, this.options.deepLinkSmudgeDelay);\r\n          }\r\n\r\n          /**\r\n            * Fires when the zplugin has deeplinked at pageload\r\n            * @event Tabs#deeplink\r\n            */\r\n           this.$element.trigger('deeplink.zf.tabs', [$link, $(anchor)]);\r\n         }\r\n       }\r\n     }\r\n\r\n    //use browser to open a tab, if it exists in this tabset\r\n    if (this.options.deepLink) {\r\n      this._checkDeepLink();\r\n    }\r\n\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Adds event handlers for items within the tabs.\r\n   * @private\r\n   */\r\n  _events() {\r\n    this._addKeyHandler();\r\n    this._addClickHandler();\r\n    this._setHeightMqHandler = null;\r\n\r\n    if (this.options.matchHeight) {\r\n      this._setHeightMqHandler = this._setHeight.bind(this);\r\n\r\n      $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\r\n    }\r\n\r\n    if(this.options.deepLink) {\r\n      $(window).on('popstate', this._checkDeepLink);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds click handlers for items within the tabs.\r\n   * @private\r\n   */\r\n  _addClickHandler() {\r\n    var _this = this;\r\n\r\n    this.$element\r\n      .off('click.zf.tabs')\r\n      .on('click.zf.tabs', `.${this.options.linkClass}`, function(e){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        _this._handleTabChange($(this));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Adds keyboard event handlers for items within the tabs.\r\n   * @private\r\n   */\r\n  _addKeyHandler() {\r\n    var _this = this;\r\n\r\n    this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function(e){\r\n      if (e.which === 9) return;\r\n\r\n\r\n      var $element = $(this),\r\n        $elements = $element.parent('ul').children('li'),\r\n        $prevElement,\r\n        $nextElement;\r\n\r\n      $elements.each(function(i) {\r\n        if ($(this).is($element)) {\r\n          if (_this.options.wrapOnKeys) {\r\n            $prevElement = i === 0 ? $elements.last() : $elements.eq(i-1);\r\n            $nextElement = i === $elements.length -1 ? $elements.first() : $elements.eq(i+1);\r\n          } else {\r\n            $prevElement = $elements.eq(Math.max(0, i-1));\r\n            $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\r\n          }\r\n          return;\r\n        }\r\n      });\r\n\r\n      // handle keyboard event with keyboard util\r\n      Foundation.Keyboard.handleKey(e, 'Tabs', {\r\n        open: function() {\r\n          $element.find('[role=\"tab\"]').focus();\r\n          _this._handleTabChange($element);\r\n        },\r\n        previous: function() {\r\n          $prevElement.find('[role=\"tab\"]').focus();\r\n          _this._handleTabChange($prevElement);\r\n        },\r\n        next: function() {\r\n          $nextElement.find('[role=\"tab\"]').focus();\r\n          _this._handleTabChange($nextElement);\r\n        },\r\n        handled: function() {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Opens the tab `$targetContent` defined by `$target`. Collapses active tab.\r\n   * @param {jQuery} $target - Tab to open.\r\n   * @param {boolean} historyHandled - browser has already handled a history update\r\n   * @fires Tabs#change\r\n   * @function\r\n   */\r\n  _handleTabChange($target, historyHandled) {\r\n\r\n    /**\r\n     * Check for active class on target. Collapse if exists.\r\n     */\r\n    if ($target.hasClass(`${this.options.linkActiveClass}`)) {\r\n        if(this.options.activeCollapse) {\r\n            this._collapseTab($target);\r\n\r\n           /**\r\n            * Fires when the zplugin has successfully collapsed tabs.\r\n            * @event Tabs#collapse\r\n            */\r\n            this.$element.trigger('collapse.zf.tabs', [$target]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    var $oldTab = this.$element.\r\n          find(`.${this.options.linkClass}.${this.options.linkActiveClass}`),\r\n          $tabLink = $target.find('[role=\"tab\"]'),\r\n          hash = $tabLink[0].hash,\r\n          $targetContent = this.$tabContent.find(hash);\r\n\r\n    //close old tab\r\n    this._collapseTab($oldTab);\r\n\r\n    //open new tab\r\n    this._openTab($target);\r\n\r\n    //either replace or update browser history\r\n    if (this.options.deepLink && !historyHandled) {\r\n      var anchor = $target.find('a').attr('href');\r\n\r\n      if (this.options.updateHistory) {\r\n        history.pushState({}, '', anchor);\r\n      } else {\r\n        history.replaceState({}, '', anchor);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Fires when the plugin has successfully changed tabs.\r\n     * @event Tabs#change\r\n     */\r\n    this.$element.trigger('change.zf.tabs', [$target, $targetContent]);\r\n\r\n    //fire to children a mutation event\r\n    $targetContent.find(\"[data-mutate]\").trigger(\"mutateme.zf.trigger\");\r\n  }\r\n\r\n  /**\r\n   * Opens the tab `$targetContent` defined by `$target`.\r\n   * @param {jQuery} $target - Tab to Open.\r\n   * @function\r\n   */\r\n  _openTab($target) {\r\n      var $tabLink = $target.find('[role=\"tab\"]'),\r\n          hash = $tabLink[0].hash,\r\n          $targetContent = this.$tabContent.find(hash);\r\n\r\n      $target.addClass(`${this.options.linkActiveClass}`);\r\n\r\n      $tabLink.attr({'aria-selected': 'true'});\r\n\r\n      $targetContent\r\n        .addClass(`${this.options.panelActiveClass}`)\r\n        .attr({'aria-hidden': 'false'});\r\n  }\r\n\r\n  /**\r\n   * Collapses `$targetContent` defined by `$target`.\r\n   * @param {jQuery} $target - Tab to Open.\r\n   * @function\r\n   */\r\n  _collapseTab($target) {\r\n    var $target_anchor = $target\r\n      .removeClass(`${this.options.linkActiveClass}`)\r\n      .find('[role=\"tab\"]')\r\n      .attr({ 'aria-selected': 'false' });\r\n\r\n    $(`#${$target_anchor.attr('aria-controls')}`)\r\n      .removeClass(`${this.options.panelActiveClass}`)\r\n      .attr({ 'aria-hidden': 'true' });\r\n  }\r\n\r\n  /**\r\n   * Public method for selecting a content pane to display.\r\n   * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\r\n   * @param {boolean} historyHandled - browser has already handled a history update\r\n   * @function\r\n   */\r\n  selectTab(elem, historyHandled) {\r\n    var idStr;\r\n\r\n    if (typeof elem === 'object') {\r\n      idStr = elem[0].id;\r\n    } else {\r\n      idStr = elem;\r\n    }\r\n\r\n    if (idStr.indexOf('#') < 0) {\r\n      idStr = `#${idStr}`;\r\n    }\r\n\r\n    var $target = this.$tabTitles.find(`[href$=\"${idStr}\"]`).parent(`.${this.options.linkClass}`);\r\n\r\n    this._handleTabChange($target, historyHandled);\r\n  };\r\n  /**\r\n   * Sets the height of each panel to the height of the tallest panel.\r\n   * If enabled in options, gets called on media query change.\r\n   * If loading content via external source, can be called directly or with _reflow.\r\n   * If enabled with `data-match-height=\"true\"`, tabs sets to equal height\r\n   * @function\r\n   * @private\r\n   */\r\n  _setHeight() {\r\n    var max = 0,\r\n        _this = this; // Lock down the `this` value for the root tabs object\r\n\r\n    this.$tabContent\r\n      .find(`.${this.options.panelClass}`)\r\n      .css('height', '')\r\n      .each(function() {\r\n\r\n        var panel = $(this),\r\n            isActive = panel.hasClass(`${_this.options.panelActiveClass}`); // get the options from the parent instead of trying to get them from the child\r\n\r\n        if (!isActive) {\r\n          panel.css({'visibility': 'hidden', 'display': 'block'});\r\n        }\r\n\r\n        var temp = this.getBoundingClientRect().height;\r\n\r\n        if (!isActive) {\r\n          panel.css({\r\n            'visibility': '',\r\n            'display': ''\r\n          });\r\n        }\r\n\r\n        max = temp > max ? temp : max;\r\n      })\r\n      .css('height', `${max}px`);\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of an tabs.\r\n   * @fires Tabs#destroyed\r\n   */\r\n  destroy() {\r\n    this.$element\r\n      .find(`.${this.options.linkClass}`)\r\n      .off('.zf.tabs').hide().end()\r\n      .find(`.${this.options.panelClass}`)\r\n      .hide();\r\n\r\n    if (this.options.matchHeight) {\r\n      if (this._setHeightMqHandler != null) {\r\n         $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\r\n      }\r\n    }\r\n\r\n    if (this.options.deepLink) {\r\n      $(window).off('popstate', this._checkDeepLink);\r\n    }\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nTabs.defaults = {\r\n  /**\r\n   * Allows the window to scroll to content of pane specified by hash anchor\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  deepLink: false,\r\n\r\n  /**\r\n   * Adjust the deep link scroll to make sure the top of the tab panel is visible\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  deepLinkSmudge: false,\r\n\r\n  /**\r\n   * Animation time (ms) for the deep link adjustment\r\n   * @option\r\n   * @type {number}\r\n   * @default 300\r\n   */\r\n  deepLinkSmudgeDelay: 300,\r\n\r\n  /**\r\n   * Update the browser history with the open tab\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  updateHistory: false,\r\n\r\n  /**\r\n   * Allows the window to scroll to content of active pane on load if set to true.\r\n   * Not recommended if more than one tab panel per page.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  autoFocus: false,\r\n\r\n  /**\r\n   * Allows keyboard input to 'wrap' around the tab links.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  wrapOnKeys: true,\r\n\r\n  /**\r\n   * Allows the tab content panes to match heights if set to true.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  matchHeight: false,\r\n\r\n  /**\r\n   * Allows active tabs to collapse when clicked.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  activeCollapse: false,\r\n\r\n  /**\r\n   * Class applied to `li`'s in tab link list.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'tabs-title'\r\n   */\r\n  linkClass: 'tabs-title',\r\n\r\n  /**\r\n   * Class applied to the active `li` in tab link list.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'is-active'\r\n   */\r\n  linkActiveClass: 'is-active',\r\n\r\n  /**\r\n   * Class applied to the content containers.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'tabs-panel'\r\n   */\r\n  panelClass: 'tabs-panel',\r\n\r\n  /**\r\n   * Class applied to the active content container.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'is-active'\r\n   */\r\n  panelActiveClass: 'is-active'\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Tabs, 'Tabs');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Toggler module.\r\n * @module foundation.toggler\r\n * @requires foundation.util.motion\r\n * @requires foundation.util.triggers\r\n */\r\n\r\nclass Toggler {\r\n  /**\r\n   * Creates a new instance of Toggler.\r\n   * @class\r\n   * @fires Toggler#init\r\n   * @param {Object} element - jQuery object to add the trigger to.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Toggler.defaults, element.data(), options);\r\n    this.className = '';\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'Toggler');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    var input;\r\n    // Parse animation classes if they were set\r\n    if (this.options.animate) {\r\n      input = this.options.animate.split(' ');\r\n\r\n      this.animationIn = input[0];\r\n      this.animationOut = input[1] || null;\r\n    }\r\n    // Otherwise, parse toggle class\r\n    else {\r\n      input = this.$element.data('toggler');\r\n      // Allow for a . at the beginning of the string\r\n      this.className = input[0] === '.' ? input.slice(1) : input;\r\n    }\r\n\r\n    // Add ARIA attributes to triggers\r\n    var id = this.$element[0].id;\r\n    $(`[data-open=\"${id}\"], [data-close=\"${id}\"], [data-toggle=\"${id}\"]`)\r\n      .attr('aria-controls', id);\r\n    // If the target is hidden, add aria-hidden\r\n    this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\r\n  }\r\n\r\n  /**\r\n   * Initializes events for the toggle trigger.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\r\n   * @function\r\n   * @fires Toggler#on\r\n   * @fires Toggler#off\r\n   */\r\n  toggle() {\r\n    this[ this.options.animate ? '_toggleAnimate' : '_toggleClass']();\r\n  }\r\n\r\n  _toggleClass() {\r\n    this.$element.toggleClass(this.className);\r\n\r\n    var isOn = this.$element.hasClass(this.className);\r\n    if (isOn) {\r\n      /**\r\n       * Fires if the target element has the class after a toggle.\r\n       * @event Toggler#on\r\n       */\r\n      this.$element.trigger('on.zf.toggler');\r\n    }\r\n    else {\r\n      /**\r\n       * Fires if the target element does not have the class after a toggle.\r\n       * @event Toggler#off\r\n       */\r\n      this.$element.trigger('off.zf.toggler');\r\n    }\r\n\r\n    this._updateARIA(isOn);\r\n    this.$element.find('[data-mutate]').trigger('mutateme.zf.trigger');\r\n  }\r\n\r\n  _toggleAnimate() {\r\n    var _this = this;\r\n\r\n    if (this.$element.is(':hidden')) {\r\n      Foundation.Motion.animateIn(this.$element, this.animationIn, function() {\r\n        _this._updateARIA(true);\r\n        this.trigger('on.zf.toggler');\r\n        this.find('[data-mutate]').trigger('mutateme.zf.trigger');\r\n      });\r\n    }\r\n    else {\r\n      Foundation.Motion.animateOut(this.$element, this.animationOut, function() {\r\n        _this._updateARIA(false);\r\n        this.trigger('off.zf.toggler');\r\n        this.find('[data-mutate]').trigger('mutateme.zf.trigger');\r\n      });\r\n    }\r\n  }\r\n\r\n  _updateARIA(isOn) {\r\n    this.$element.attr('aria-expanded', isOn ? true : false);\r\n  }\r\n\r\n  /**\r\n   * Destroys the instance of Toggler on the element.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$element.off('.zf.toggler');\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nToggler.defaults = {\r\n  /**\r\n   * Tells the plugin if the element should animated when toggled.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  animate: false\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(Toggler, 'Toggler');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * Tooltip module.\r\n * @module foundation.tooltip\r\n * @requires foundation.util.box\r\n * @requires foundation.util.mediaQuery\r\n * @requires foundation.util.triggers\r\n */\r\n\r\nclass Tooltip {\r\n  /**\r\n   * Creates a new instance of a Tooltip.\r\n   * @class\r\n   * @fires Tooltip#init\r\n   * @param {jQuery} element - jQuery object to attach a tooltip to.\r\n   * @param {Object} options - object to extend the default configuration.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = element;\r\n    this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\r\n\r\n    this.isActive = false;\r\n    this.isClick = false;\r\n    this._init();\r\n\r\n    Foundation.registerPlugin(this, 'Tooltip');\r\n  }\r\n\r\n  /**\r\n   * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\r\n   * @private\r\n   */\r\n  _init() {\r\n    var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\r\n\r\n    this.options.positionClass = this.options.positionClass || this._getPositionClass(this.$element);\r\n    this.options.tipText = this.options.tipText || this.$element.attr('title');\r\n    this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\r\n\r\n    if (this.options.allowHtml) {\r\n      this.template.appendTo(document.body)\r\n        .html(this.options.tipText)\r\n        .hide();\r\n    } else {\r\n      this.template.appendTo(document.body)\r\n        .text(this.options.tipText)\r\n        .hide();\r\n    }\r\n\r\n    this.$element.attr({\r\n      'title': '',\r\n      'aria-describedby': elemId,\r\n      'data-yeti-box': elemId,\r\n      'data-toggle': elemId,\r\n      'data-resize': elemId\r\n    }).addClass(this.options.triggerClass);\r\n\r\n    //helper variables to track movement on collisions\r\n    this.usedPositions = [];\r\n    this.counter = 4;\r\n    this.classChanged = false;\r\n\r\n    this._events();\r\n  }\r\n\r\n  /**\r\n   * Grabs the current positioning class, if present, and returns the value or an empty string.\r\n   * @private\r\n   */\r\n  _getPositionClass(element) {\r\n    if (!element) { return ''; }\r\n    // var position = element.attr('class').match(/top|left|right/g);\r\n    var position = element[0].className.match(/\\b(top|left|right)\\b/g);\r\n        position = position ? position[0] : '';\r\n    return position;\r\n  };\r\n  /**\r\n   * builds the tooltip element, adds attributes, and returns the template.\r\n   * @private\r\n   */\r\n  _buildTemplate(id) {\r\n    var templateClasses = (`${this.options.tooltipClass} ${this.options.positionClass} ${this.options.templateClasses}`).trim();\r\n    var $template =  $('<div></div>').addClass(templateClasses).attr({\r\n      'role': 'tooltip',\r\n      'aria-hidden': true,\r\n      'data-is-active': false,\r\n      'data-is-focus': false,\r\n      'id': id\r\n    });\r\n    return $template;\r\n  }\r\n\r\n  /**\r\n   * Function that gets called if a collision event is detected.\r\n   * @param {String} position - positioning class to try\r\n   * @private\r\n   */\r\n  _reposition(position) {\r\n    this.usedPositions.push(position ? position : 'bottom');\r\n\r\n    //default, try switching to opposite side\r\n    if (!position && (this.usedPositions.indexOf('top') < 0)) {\r\n      this.template.addClass('top');\r\n    } else if (position === 'top' && (this.usedPositions.indexOf('bottom') < 0)) {\r\n      this.template.removeClass(position);\r\n    } else if (position === 'left' && (this.usedPositions.indexOf('right') < 0)) {\r\n      this.template.removeClass(position)\r\n          .addClass('right');\r\n    } else if (position === 'right' && (this.usedPositions.indexOf('left') < 0)) {\r\n      this.template.removeClass(position)\r\n          .addClass('left');\r\n    }\r\n\r\n    //if default change didn't work, try bottom or left first\r\n    else if (!position && (this.usedPositions.indexOf('top') > -1) && (this.usedPositions.indexOf('left') < 0)) {\r\n      this.template.addClass('left');\r\n    } else if (position === 'top' && (this.usedPositions.indexOf('bottom') > -1) && (this.usedPositions.indexOf('left') < 0)) {\r\n      this.template.removeClass(position)\r\n          .addClass('left');\r\n    } else if (position === 'left' && (this.usedPositions.indexOf('right') > -1) && (this.usedPositions.indexOf('bottom') < 0)) {\r\n      this.template.removeClass(position);\r\n    } else if (position === 'right' && (this.usedPositions.indexOf('left') > -1) && (this.usedPositions.indexOf('bottom') < 0)) {\r\n      this.template.removeClass(position);\r\n    }\r\n    //if nothing cleared, set to bottom\r\n    else {\r\n      this.template.removeClass(position);\r\n    }\r\n    this.classChanged = true;\r\n    this.counter--;\r\n  }\r\n\r\n  /**\r\n   * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\r\n   * if the tooltip is larger than the screen width, default to full width - any user selected margin\r\n   * @private\r\n   */\r\n  _setPosition() {\r\n    var position = this._getPositionClass(this.template),\r\n        $tipDims = Foundation.Box.GetDimensions(this.template),\r\n        $anchorDims = Foundation.Box.GetDimensions(this.$element),\r\n        direction = (position === 'left' ? 'left' : ((position === 'right') ? 'left' : 'top')),\r\n        param = (direction === 'top') ? 'height' : 'width',\r\n        offset = (param === 'height') ? this.options.vOffset : this.options.hOffset,\r\n        _this = this;\r\n\r\n    if (($tipDims.width >= $tipDims.windowDims.width) || (!this.counter && !Foundation.Box.ImNotTouchingYou(this.template))) {\r\n      this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\r\n      // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\r\n        'width': $anchorDims.windowDims.width - (this.options.hOffset * 2),\r\n        'height': 'auto'\r\n      });\r\n      return false;\r\n    }\r\n\r\n    this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element,'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\r\n\r\n    while(!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\r\n      this._reposition(position);\r\n      this._setPosition();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * reveals the tooltip, and fires an event to close any other open tooltips on the page\r\n   * @fires Tooltip#closeme\r\n   * @fires Tooltip#show\r\n   * @function\r\n   */\r\n  show() {\r\n    if (this.options.showOn !== 'all' && !Foundation.MediaQuery.is(this.options.showOn)) {\r\n      // console.error('The screen is too small to display this tooltip');\r\n      return false;\r\n    }\r\n\r\n    var _this = this;\r\n    this.template.css('visibility', 'hidden').show();\r\n    this._setPosition();\r\n\r\n    /**\r\n     * Fires to close all other open tooltips on the page\r\n     * @event Closeme#tooltip\r\n     */\r\n    this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\r\n\r\n\r\n    this.template.attr({\r\n      'data-is-active': true,\r\n      'aria-hidden': false\r\n    });\r\n    _this.isActive = true;\r\n    // console.log(this.template);\r\n    this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function() {\r\n      //maybe do stuff?\r\n    });\r\n    /**\r\n     * Fires when the tooltip is shown\r\n     * @event Tooltip#show\r\n     */\r\n    this.$element.trigger('show.zf.tooltip');\r\n  }\r\n\r\n  /**\r\n   * Hides the current tooltip, and resets the positioning class if it was changed due to collision\r\n   * @fires Tooltip#hide\r\n   * @function\r\n   */\r\n  hide() {\r\n    // console.log('hiding', this.$element.data('yeti-box'));\r\n    var _this = this;\r\n    this.template.stop().attr({\r\n      'aria-hidden': true,\r\n      'data-is-active': false\r\n    }).fadeOut(this.options.fadeOutDuration, function() {\r\n      _this.isActive = false;\r\n      _this.isClick = false;\r\n      if (_this.classChanged) {\r\n        _this.template\r\n             .removeClass(_this._getPositionClass(_this.template))\r\n             .addClass(_this.options.positionClass);\r\n\r\n       _this.usedPositions = [];\r\n       _this.counter = 4;\r\n       _this.classChanged = false;\r\n      }\r\n    });\r\n    /**\r\n     * fires when the tooltip is hidden\r\n     * @event Tooltip#hide\r\n     */\r\n    this.$element.trigger('hide.zf.tooltip');\r\n  }\r\n\r\n  /**\r\n   * adds event listeners for the tooltip and its anchor\r\n   * TODO combine some of the listeners like focus and mouseenter, etc.\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n    var $template = this.template;\r\n    var isFocus = false;\r\n\r\n    if (!this.options.disableHover) {\r\n\r\n      this.$element\r\n      .on('mouseenter.zf.tooltip', function(e) {\r\n        if (!_this.isActive) {\r\n          _this.timeout = setTimeout(function() {\r\n            _this.show();\r\n          }, _this.options.hoverDelay);\r\n        }\r\n      })\r\n      .on('mouseleave.zf.tooltip', function(e) {\r\n        clearTimeout(_this.timeout);\r\n        if (!isFocus || (_this.isClick && !_this.options.clickOpen)) {\r\n          _this.hide();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.options.clickOpen) {\r\n      this.$element.on('mousedown.zf.tooltip', function(e) {\r\n        e.stopImmediatePropagation();\r\n        if (_this.isClick) {\r\n          //_this.hide();\r\n          // _this.isClick = false;\r\n        } else {\r\n          _this.isClick = true;\r\n          if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\r\n            _this.show();\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.$element.on('mousedown.zf.tooltip', function(e) {\r\n        e.stopImmediatePropagation();\r\n        _this.isClick = true;\r\n      });\r\n    }\r\n\r\n    if (!this.options.disableForTouch) {\r\n      this.$element\r\n      .on('tap.zf.tooltip touchend.zf.tooltip', function(e) {\r\n        _this.isActive ? _this.hide() : _this.show();\r\n      });\r\n    }\r\n\r\n    this.$element.on({\r\n      // 'toggle.zf.trigger': this.toggle.bind(this),\r\n      // 'close.zf.trigger': this.hide.bind(this)\r\n      'close.zf.trigger': this.hide.bind(this)\r\n    });\r\n\r\n    this.$element\r\n      .on('focus.zf.tooltip', function(e) {\r\n        isFocus = true;\r\n        if (_this.isClick) {\r\n          // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\r\n          // a real focus, otherwise on hover and come back we get bad behavior\r\n          if(!_this.options.clickOpen) { isFocus = false; }\r\n          return false;\r\n        } else {\r\n          _this.show();\r\n        }\r\n      })\r\n\r\n      .on('focusout.zf.tooltip', function(e) {\r\n        isFocus = false;\r\n        _this.isClick = false;\r\n        _this.hide();\r\n      })\r\n\r\n      .on('resizeme.zf.trigger', function() {\r\n        if (_this.isActive) {\r\n          _this._setPosition();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * adds a toggle method, in addition to the static show() & hide() functions\r\n   * @function\r\n   */\r\n  toggle() {\r\n    if (this.isActive) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys an instance of tooltip, removes template element from the view.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    this.$element.attr('title', this.template.text())\r\n                 .off('.zf.trigger .zf.tooltip')\r\n                 .removeClass('has-tip top right left')\r\n                 .removeAttr('aria-describedby aria-haspopup data-disable-hover data-resize data-toggle data-tooltip data-yeti-box');\r\n\r\n    this.template.remove();\r\n\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nTooltip.defaults = {\r\n  disableForTouch: false,\r\n  /**\r\n   * Time, in ms, before a tooltip should open on hover.\r\n   * @option\r\n   * @type {number}\r\n   * @default 200\r\n   */\r\n  hoverDelay: 200,\r\n  /**\r\n   * Time, in ms, a tooltip should take to fade into view.\r\n   * @option\r\n   * @type {number}\r\n   * @default 150\r\n   */\r\n  fadeInDuration: 150,\r\n  /**\r\n   * Time, in ms, a tooltip should take to fade out of view.\r\n   * @option\r\n   * @type {number}\r\n   * @default 150\r\n   */\r\n  fadeOutDuration: 150,\r\n  /**\r\n   * Disables hover events from opening the tooltip if set to true\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  disableHover: false,\r\n  /**\r\n   * Optional addtional classes to apply to the tooltip template on init.\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  templateClasses: '',\r\n  /**\r\n   * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'tooltip'\r\n   */\r\n  tooltipClass: 'tooltip',\r\n  /**\r\n   * Class applied to the tooltip anchor element.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'has-tip'\r\n   */\r\n  triggerClass: 'has-tip',\r\n  /**\r\n   * Minimum breakpoint size at which to open the tooltip.\r\n   * @option\r\n   * @type {string}\r\n   * @default 'small'\r\n   */\r\n  showOn: 'small',\r\n  /**\r\n   * Custom template to be used to generate markup for tooltip.\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  template: '',\r\n  /**\r\n   * Text displayed in the tooltip template on open.\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  tipText: '',\r\n  touchCloseText: 'Tap to close.',\r\n  /**\r\n   * Allows the tooltip to remain open if triggered with a click or touch event.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  clickOpen: true,\r\n  /**\r\n   * Additional positioning classes, set by the JS\r\n   * @option\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  positionClass: '',\r\n  /**\r\n   * Distance, in pixels, the template should push away from the anchor on the Y axis.\r\n   * @option\r\n   * @type {number}\r\n   * @default 10\r\n   */\r\n  vOffset: 10,\r\n  /**\r\n   * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\r\n   * @option\r\n   * @type {number}\r\n   * @default 12\r\n   */\r\n  hOffset: 12,\r\n    /**\r\n   * Allow HTML in tooltip. Warning: If you are loading user-generated content into tooltips,\r\n   * allowing HTML may open yourself up to XSS attacks.\r\n   * @option\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  allowHtml: false\r\n};\r\n\r\n/**\r\n * TODO utilize resize event trigger\r\n */\r\n\r\n// Window exports\r\nFoundation.plugin(Tooltip, 'Tooltip');\r\n\r\n}(jQuery);\r\n","'use strict';\r\n\r\n!function($) {\r\n\r\n/**\r\n * ResponsiveAccordionTabs module.\r\n * @module foundation.responsiveAccordionTabs\r\n * @requires foundation.util.keyboard\r\n * @requires foundation.util.timerAndImageLoader\r\n * @requires foundation.util.motion\r\n * @requires foundation.accordion\r\n * @requires foundation.tabs\r\n */\r\n\r\nclass ResponsiveAccordionTabs {\r\n  /**\r\n   * Creates a new instance of a responsive accordion tabs.\r\n   * @class\r\n   * @fires ResponsiveAccordionTabs#init\r\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n   * @param {Object} options - Overrides to the default plugin settings.\r\n   */\r\n  constructor(element, options) {\r\n    this.$element = $(element);\r\n    this.options  = $.extend({}, this.$element.data(), options);\r\n    this.rules = this.$element.data('responsive-accordion-tabs');\r\n    this.currentMq = null;\r\n    this.currentPlugin = null;\r\n    if (!this.$element.attr('id')) {\r\n      this.$element.attr('id',Foundation.GetYoDigits(6, 'responsiveaccordiontabs'));\r\n    };\r\n\r\n    this._init();\r\n    this._events();\r\n\r\n    Foundation.registerPlugin(this, 'ResponsiveAccordionTabs');\r\n  }\r\n\r\n  /**\r\n   * Initializes the Menu by parsing the classes from the 'data-responsive-accordion-tabs' attribute on the element.\r\n   * @function\r\n   * @private\r\n   */\r\n  _init() {\r\n    // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\r\n    if (typeof this.rules === 'string') {\r\n      let rulesTree = {};\r\n\r\n      // Parse rules from \"classes\" pulled from data attribute\r\n      let rules = this.rules.split(' ');\r\n\r\n      // Iterate through every rule found\r\n      for (let i = 0; i < rules.length; i++) {\r\n        let rule = rules[i].split('-');\r\n        let ruleSize = rule.length > 1 ? rule[0] : 'small';\r\n        let rulePlugin = rule.length > 1 ? rule[1] : rule[0];\r\n\r\n        if (MenuPlugins[rulePlugin] !== null) {\r\n          rulesTree[ruleSize] = MenuPlugins[rulePlugin];\r\n        }\r\n      }\r\n\r\n      this.rules = rulesTree;\r\n    }\r\n\r\n    this._getAllOptions();\r\n\r\n    if (!$.isEmptyObject(this.rules)) {\r\n      this._checkMediaQueries();\r\n    }\r\n  }\r\n\r\n  _getAllOptions() {\r\n    //get all defaults and options\r\n    var _this = this;\r\n    _this.allOptions = {};\r\n    for (var key in MenuPlugins) {\r\n      if (MenuPlugins.hasOwnProperty(key)) {\r\n        var obj = MenuPlugins[key];\r\n        try {\r\n          var dummyPlugin = $('<ul></ul>');\r\n          var tmpPlugin = new obj.plugin(dummyPlugin,_this.options);\r\n          for (var keyKey in tmpPlugin.options) {\r\n            if (tmpPlugin.options.hasOwnProperty(keyKey) && keyKey !== 'zfPlugin') {\r\n              var objObj = tmpPlugin.options[keyKey];\r\n              _this.allOptions[keyKey] = objObj;\r\n            }\r\n          }\r\n          tmpPlugin.destroy();\r\n        }\r\n        catch(e) {\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes events for the Menu.\r\n   * @function\r\n   * @private\r\n   */\r\n  _events() {\r\n    var _this = this;\r\n\r\n    $(window).on('changed.zf.mediaquery', function() {\r\n      _this._checkMediaQueries();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\r\n   * @function\r\n   * @private\r\n   */\r\n  _checkMediaQueries() {\r\n    var matchedMq, _this = this;\r\n    // Iterate through each rule and find the last matching rule\r\n    $.each(this.rules, function(key) {\r\n      if (Foundation.MediaQuery.atLeast(key)) {\r\n        matchedMq = key;\r\n      }\r\n    });\r\n\r\n    // No match? No dice\r\n    if (!matchedMq) return;\r\n\r\n    // Plugin already initialized? We good\r\n    if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\r\n\r\n    // Remove existing plugin-specific CSS classes\r\n    $.each(MenuPlugins, function(key, value) {\r\n      _this.$element.removeClass(value.cssClass);\r\n    });\r\n\r\n    // Add the CSS class for the new plugin\r\n    this.$element.addClass(this.rules[matchedMq].cssClass);\r\n\r\n    // Create an instance of the new plugin\r\n    if (this.currentPlugin) {\r\n      //don't know why but on nested elements data zfPlugin get's lost\r\n      if (!this.currentPlugin.$element.data('zfPlugin') && this.storezfData) this.currentPlugin.$element.data('zfPlugin',this.storezfData);\r\n      this.currentPlugin.destroy();\r\n    }\r\n    this._handleMarkup(this.rules[matchedMq].cssClass);\r\n    this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\r\n    this.storezfData = this.currentPlugin.$element.data('zfPlugin');\r\n\r\n  }\r\n\r\n  _handleMarkup(toSet){\r\n    var _this = this, fromString = 'accordion';\r\n    var $panels = $('[data-tabs-content='+this.$element.attr('id')+']');\r\n    if ($panels.length) fromString = 'tabs';\r\n    if (fromString === toSet) {\r\n      return;\r\n    };\r\n\r\n    var tabsTitle = _this.allOptions.linkClass?_this.allOptions.linkClass:'tabs-title';\r\n    var tabsPanel = _this.allOptions.panelClass?_this.allOptions.panelClass:'tabs-panel';\r\n\r\n    this.$element.removeAttr('role');\r\n    var $liHeads = this.$element.children('.'+tabsTitle+',[data-accordion-item]').removeClass(tabsTitle).removeClass('accordion-item').removeAttr('data-accordion-item');\r\n    var $liHeadsA = $liHeads.children('a').removeClass('accordion-title');\r\n\r\n    if (fromString === 'tabs') {\r\n      $panels = $panels.children('.'+tabsPanel).removeClass(tabsPanel).removeAttr('role').removeAttr('aria-hidden').removeAttr('aria-labelledby');\r\n      $panels.children('a').removeAttr('role').removeAttr('aria-controls').removeAttr('aria-selected');\r\n    }else{\r\n      $panels = $liHeads.children('[data-tab-content]').removeClass('accordion-content');\r\n    };\r\n\r\n    $panels.css({display:'',visibility:''});\r\n    $liHeads.css({display:'',visibility:''});\r\n    if (toSet === 'accordion') {\r\n      $panels.each(function(key,value){\r\n        $(value).appendTo($liHeads.get(key)).addClass('accordion-content').attr('data-tab-content','').removeClass('is-active').css({height:''});\r\n        $('[data-tabs-content='+_this.$element.attr('id')+']').after('<div id=\"tabs-placeholder-'+_this.$element.attr('id')+'\"></div>').remove();\r\n        $liHeads.addClass('accordion-item').attr('data-accordion-item','');\r\n        $liHeadsA.addClass('accordion-title');\r\n      });\r\n    }else if (toSet === 'tabs'){\r\n      var $tabsContent = $('[data-tabs-content='+_this.$element.attr('id')+']');\r\n      var $placeholder = $('#tabs-placeholder-'+_this.$element.attr('id'));\r\n      if ($placeholder.length) {\r\n        $tabsContent = $('<div class=\"tabs-content\"></div>').insertAfter($placeholder).attr('data-tabs-content',_this.$element.attr('id'));\r\n        $placeholder.remove();\r\n      }else{\r\n        $tabsContent = $('<div class=\"tabs-content\"></div>').insertAfter(_this.$element).attr('data-tabs-content',_this.$element.attr('id'));\r\n      };\r\n      $panels.each(function(key,value){\r\n        var tempValue = $(value).appendTo($tabsContent).addClass(tabsPanel);\r\n        var hash = $liHeadsA.get(key).hash.slice(1);\r\n        var id = $(value).attr('id') || Foundation.GetYoDigits(6, 'accordion');\r\n        if (hash !== id) {\r\n          if (hash !== '') {\r\n            $(value).attr('id',hash);\r\n          }else{\r\n            hash = id;\r\n            $(value).attr('id',hash);\r\n            $($liHeadsA.get(key)).attr('href',$($liHeadsA.get(key)).attr('href').replace('#','')+'#'+hash);\r\n          };\r\n        };\r\n        var isActive = $($liHeads.get(key)).hasClass('is-active');\r\n        if (isActive) {\r\n          tempValue.addClass('is-active');\r\n        };\r\n      });\r\n      $liHeads.addClass(tabsTitle);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\r\n   * @function\r\n   */\r\n  destroy() {\r\n    if (this.currentPlugin) this.currentPlugin.destroy();\r\n    $(window).off('.zf.ResponsiveAccordionTabs');\r\n    Foundation.unregisterPlugin(this);\r\n  }\r\n}\r\n\r\nResponsiveAccordionTabs.defaults = {};\r\n\r\n// The plugin matches the plugin classes with these plugin instances.\r\nvar MenuPlugins = {\r\n  tabs: {\r\n    cssClass: 'tabs',\r\n    plugin: Foundation._plugins.tabs || null\r\n  },\r\n  accordion: {\r\n    cssClass: 'accordion',\r\n    plugin: Foundation._plugins.accordion || null\r\n  }\r\n};\r\n\r\n// Window exports\r\nFoundation.plugin(ResponsiveAccordionTabs, 'ResponsiveAccordionTabs');\r\n\r\n}(jQuery);\r\n"]}